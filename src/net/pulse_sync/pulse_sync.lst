   1               		.file	"pulse_sync.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 323               	.global	psync_init
 325               	psync_init:
 326               		.stabd	46,0,0
   1:../../../src/net/pulse_sync/pulse_sync.c **** /******************************************************************************
   2:../../../src/net/pulse_sync/pulse_sync.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../src/net/pulse_sync/pulse_sync.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../src/net/pulse_sync/pulse_sync.c **** *  All rights reserved.
   5:../../../src/net/pulse_sync/pulse_sync.c **** *
   6:../../../src/net/pulse_sync/pulse_sync.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../src/net/pulse_sync/pulse_sync.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../src/net/pulse_sync/pulse_sync.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../src/net/pulse_sync/pulse_sync.c **** *
  10:../../../src/net/pulse_sync/pulse_sync.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../src/net/pulse_sync/pulse_sync.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../src/net/pulse_sync/pulse_sync.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../src/net/pulse_sync/pulse_sync.c **** *
  14:../../../src/net/pulse_sync/pulse_sync.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../src/net/pulse_sync/pulse_sync.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../src/net/pulse_sync/pulse_sync.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../src/net/pulse_sync/pulse_sync.c **** *  GNU General Public License for more details.
  18:../../../src/net/pulse_sync/pulse_sync.c **** *
  19:../../../src/net/pulse_sync/pulse_sync.c **** *  You should have received a copy of the GNU General Public License
  20:../../../src/net/pulse_sync/pulse_sync.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../src/net/pulse_sync/pulse_sync.c **** *
  22:../../../src/net/pulse_sync/pulse_sync.c **** *  Contributing Authors (specific to this file):
  23:../../../src/net/pulse_sync/pulse_sync.c **** *  Madhav Iyengar
  24:../../../src/net/pulse_sync/pulse_sync.c **** *******************************************************************************/
  25:../../../src/net/pulse_sync/pulse_sync.c **** 
  26:../../../src/net/pulse_sync/pulse_sync.c **** /*
  27:../../../src/net/pulse_sync/pulse_sync.c ****  * pulse_sync.c: PulseSync protocol implementation for Nano-RK
  28:../../../src/net/pulse_sync/pulse_sync.c ****  * built on top of Flash network flooding protocol
  29:../../../src/net/pulse_sync/pulse_sync.c ****  *
  30:../../../src/net/pulse_sync/pulse_sync.c ****  * 18-748 S15: Group 13
  31:../../../src/net/pulse_sync/pulse_sync.c ****  * Madhav Iyengar
  32:../../../src/net/pulse_sync/pulse_sync.c ****  * Nat Jeffries
  33:../../../src/net/pulse_sync/pulse_sync.c ****  * Miguel Sotolongo
  34:../../../src/net/pulse_sync/pulse_sync.c ****  */
  35:../../../src/net/pulse_sync/pulse_sync.c **** 
  36:../../../src/net/pulse_sync/pulse_sync.c **** #include "pulse_sync.h"
  37:../../../src/net/pulse_sync/pulse_sync.c **** 
  38:../../../src/net/pulse_sync/pulse_sync.c **** /*
  39:../../../src/net/pulse_sync/pulse_sync.c ****  * function for initializing/reseting pulsesync
  40:../../../src/net/pulse_sync/pulse_sync.c ****  */
  41:../../../src/net/pulse_sync/pulse_sync.c **** void psync_init(uint8_t high_prio, uint8_t root, uint8_t chan) {
 328               	.LM0:
 329               	.LFBB1:
 330 0000 CF93      		push r28
 331 0002 DF93      		push r29
 332               	/* prologue: function */
 333               	/* frame size = 0 */
 334               	/* stack size = 2 */
 335               	.L__stack_usage = 2
 336 0004 D82F      		mov r29,r24
 337 0006 C62F      		mov r28,r22
  42:../../../src/net/pulse_sync/pulse_sync.c **** 	if (skew_lock != NULL)
 339               	.LM1:
 340 0008 8091 0000 		lds r24,skew_lock
 341 000c 9091 0000 		lds r25,skew_lock+1
 342 0010 0097      		sbiw r24,0
 343 0012 01F0      		breq .L2
  43:../../../src/net/pulse_sync/pulse_sync.c **** 		nrk_sem_delete(skew_lock);
 345               	.LM2:
 346 0014 0E94 0000 		call nrk_sem_delete
 347               	.L2:
  44:../../../src/net/pulse_sync/pulse_sync.c **** 	skew_lock = nrk_sem_create(1, high_prio);
 349               	.LM3:
 350 0018 6D2F      		mov r22,r29
 351 001a 81E0      		ldi r24,lo8(1)
 352 001c 0E94 0000 		call nrk_sem_create
 353 0020 9093 0000 		sts skew_lock+1,r25
 354 0024 8093 0000 		sts skew_lock,r24
  45:../../../src/net/pulse_sync/pulse_sync.c **** 	//flash_init(chan);
  46:../../../src/net/pulse_sync/pulse_sync.c **** 	is_root = root;
 356               	.LM4:
 357 0028 C093 0000 		sts is_root,r28
  47:../../../src/net/pulse_sync/pulse_sync.c **** 	loc_sum = 0;
 359               	.LM5:
 360 002c 1092 0000 		sts loc_sum,__zero_reg__
 361 0030 1092 0000 		sts loc_sum+1,__zero_reg__
 362 0034 1092 0000 		sts loc_sum+2,__zero_reg__
 363 0038 1092 0000 		sts loc_sum+3,__zero_reg__
 364 003c 1092 0000 		sts loc_sum+4,__zero_reg__
 365 0040 1092 0000 		sts loc_sum+5,__zero_reg__
 366 0044 1092 0000 		sts loc_sum+6,__zero_reg__
 367 0048 1092 0000 		sts loc_sum+7,__zero_reg__
  48:../../../src/net/pulse_sync/pulse_sync.c **** 	loc_avg = 0;
 369               	.LM6:
 370 004c 1092 0000 		sts loc_avg,__zero_reg__
 371 0050 1092 0000 		sts loc_avg+1,__zero_reg__
 372 0054 1092 0000 		sts loc_avg+2,__zero_reg__
 373 0058 1092 0000 		sts loc_avg+3,__zero_reg__
 374 005c 1092 0000 		sts loc_avg+4,__zero_reg__
 375 0060 1092 0000 		sts loc_avg+5,__zero_reg__
 376 0064 1092 0000 		sts loc_avg+6,__zero_reg__
 377 0068 1092 0000 		sts loc_avg+7,__zero_reg__
  49:../../../src/net/pulse_sync/pulse_sync.c **** 	off_sum = 0;
 379               	.LM7:
 380 006c 1092 0000 		sts off_sum,__zero_reg__
 381 0070 1092 0000 		sts off_sum+1,__zero_reg__
 382 0074 1092 0000 		sts off_sum+2,__zero_reg__
 383 0078 1092 0000 		sts off_sum+3,__zero_reg__
 384 007c 1092 0000 		sts off_sum+4,__zero_reg__
 385 0080 1092 0000 		sts off_sum+5,__zero_reg__
 386 0084 1092 0000 		sts off_sum+6,__zero_reg__
 387 0088 1092 0000 		sts off_sum+7,__zero_reg__
  50:../../../src/net/pulse_sync/pulse_sync.c **** 	off_avg = 0;
 389               	.LM8:
 390 008c 1092 0000 		sts off_avg,__zero_reg__
 391 0090 1092 0000 		sts off_avg+1,__zero_reg__
 392 0094 1092 0000 		sts off_avg+2,__zero_reg__
 393 0098 1092 0000 		sts off_avg+3,__zero_reg__
 394 009c 1092 0000 		sts off_avg+4,__zero_reg__
 395 00a0 1092 0000 		sts off_avg+5,__zero_reg__
 396 00a4 1092 0000 		sts off_avg+6,__zero_reg__
 397 00a8 1092 0000 		sts off_avg+7,__zero_reg__
  51:../../../src/net/pulse_sync/pulse_sync.c **** 	loc_sq_sum = 1;
 399               	.LM9:
 400 00ac 81E0      		ldi r24,lo8(1)
 401 00ae 8093 0000 		sts loc_sq_sum,r24
 402 00b2 1092 0000 		sts loc_sq_sum+1,__zero_reg__
 403 00b6 1092 0000 		sts loc_sq_sum+2,__zero_reg__
 404 00ba 1092 0000 		sts loc_sq_sum+3,__zero_reg__
 405 00be 1092 0000 		sts loc_sq_sum+4,__zero_reg__
 406 00c2 1092 0000 		sts loc_sq_sum+5,__zero_reg__
 407 00c6 1092 0000 		sts loc_sq_sum+6,__zero_reg__
 408 00ca 1092 0000 		sts loc_sq_sum+7,__zero_reg__
  52:../../../src/net/pulse_sync/pulse_sync.c **** 	off_sq_sum = 0;
 410               	.LM10:
 411 00ce 1092 0000 		sts off_sq_sum,__zero_reg__
 412 00d2 1092 0000 		sts off_sq_sum+1,__zero_reg__
 413 00d6 1092 0000 		sts off_sq_sum+2,__zero_reg__
 414 00da 1092 0000 		sts off_sq_sum+3,__zero_reg__
 415 00de 1092 0000 		sts off_sq_sum+4,__zero_reg__
 416 00e2 1092 0000 		sts off_sq_sum+5,__zero_reg__
 417 00e6 1092 0000 		sts off_sq_sum+6,__zero_reg__
 418 00ea 1092 0000 		sts off_sq_sum+7,__zero_reg__
  53:../../../src/net/pulse_sync/pulse_sync.c **** 	samples = 0;
 420               	.LM11:
 421 00ee 1092 0000 		sts samples,__zero_reg__
  54:../../../src/net/pulse_sync/pulse_sync.c **** 	curr_ind = 0;
 423               	.LM12:
 424 00f2 1092 0000 		sts curr_ind,__zero_reg__
 425               	/* epilogue start */
  55:../../../src/net/pulse_sync/pulse_sync.c **** }
 427               	.LM13:
 428 00f6 DF91      		pop r29
 429 00f8 CF91      		pop r28
 430 00fa 0895      		ret
 432               	.Lscope1:
 434               		.stabd	78,0,0
 437               	.global	get_full_time
 439               	get_full_time:
 440               		.stabd	46,0,0
  56:../../../src/net/pulse_sync/pulse_sync.c **** 
  57:../../../src/net/pulse_sync/pulse_sync.c **** /*
  58:../../../src/net/pulse_sync/pulse_sync.c ****  * helper function to change nrk_time_t to uint64_t
  59:../../../src/net/pulse_sync/pulse_sync.c ****  */
  60:../../../src/net/pulse_sync/pulse_sync.c **** inline uint64_t get_full_time(nrk_time_t time) {
 442               	.LM14:
 443               	.LFBB2:
 444 00fc 2F92      		push r2
 445 00fe 3F92      		push r3
 446 0100 4F92      		push r4
 447 0102 5F92      		push r5
 448 0104 6F92      		push r6
 449 0106 7F92      		push r7
 450 0108 8F92      		push r8
 451 010a 9F92      		push r9
 452 010c AF92      		push r10
 453 010e BF92      		push r11
 454 0110 CF92      		push r12
 455 0112 DF92      		push r13
 456 0114 EF92      		push r14
 457 0116 FF92      		push r15
 458 0118 0F93      		push r16
 459 011a 1F93      		push r17
 460 011c CF93      		push r28
 461 011e DF93      		push r29
 462 0120 CDB7      		in r28,__SP_L__
 463 0122 DEB7      		in r29,__SP_H__
 464 0124 2897      		sbiw r28,8
 465 0126 0FB6      		in __tmp_reg__,__SREG__
 466 0128 F894      		cli
 467 012a DEBF      		out __SP_H__,r29
 468 012c 0FBE      		out __SREG__,__tmp_reg__
 469 012e CDBF      		out __SP_L__,r28
 470               	/* prologue: function */
 471               	/* frame size = 8 */
 472               	/* stack size = 26 */
 473               	.L__stack_usage = 26
 474 0130 2983      		std Y+1,r18
 475 0132 3A83      		std Y+2,r19
 476 0134 4B83      		std Y+3,r20
 477 0136 5C83      		std Y+4,r21
 478 0138 6D83      		std Y+5,r22
 479 013a 7E83      		std Y+6,r23
 480 013c 8F83      		std Y+7,r24
 481 013e 9887      		std Y+8,r25
  61:../../../src/net/pulse_sync/pulse_sync.c **** 	return (uint64_t)(time.secs) * 1000000000L + time.nano_secs;
 483               	.LM15:
 484 0140 6981      		ldd r22,Y+1
 485 0142 7A81      		ldd r23,Y+2
 486 0144 8B81      		ldd r24,Y+3
 487 0146 9C81      		ldd r25,Y+4
 488 0148 20E0      		ldi r18,0
 489 014a 3AEC      		ldi r19,lo8(-54)
 490 014c 4AE9      		ldi r20,lo8(-102)
 491 014e 5BE3      		ldi r21,lo8(59)
 492 0150 0E94 0000 		call __umulsidi3
 493 0154 4D80      		ldd r4,Y+5
 494 0156 5E80      		ldd r5,Y+6
 495 0158 6F80      		ldd r6,Y+7
 496 015a 7884      		ldd r7,Y+8
 497 015c 1201      		movw r2,r4
 498 015e 2301      		movw r4,r6
 499 0160 5101      		movw r10,r2
 500 0162 6201      		movw r12,r4
 501 0164 E12C      		mov r14,__zero_reg__
 502 0166 F12C      		mov r15,__zero_reg__
 503 0168 00E0      		ldi r16,0
 504 016a 10E0      		ldi r17,0
 505 016c 0E94 0000 		call __adddi3
 506               	/* epilogue start */
  62:../../../src/net/pulse_sync/pulse_sync.c **** }
 508               	.LM16:
 509 0170 2896      		adiw r28,8
 510 0172 0FB6      		in __tmp_reg__,__SREG__
 511 0174 F894      		cli
 512 0176 DEBF      		out __SP_H__,r29
 513 0178 0FBE      		out __SREG__,__tmp_reg__
 514 017a CDBF      		out __SP_L__,r28
 515 017c DF91      		pop r29
 516 017e CF91      		pop r28
 517 0180 1F91      		pop r17
 518 0182 0F91      		pop r16
 519 0184 FF90      		pop r15
 520 0186 EF90      		pop r14
 521 0188 DF90      		pop r13
 522 018a CF90      		pop r12
 523 018c BF90      		pop r11
 524 018e AF90      		pop r10
 525 0190 9F90      		pop r9
 526 0192 8F90      		pop r8
 527 0194 7F90      		pop r7
 528 0196 6F90      		pop r6
 529 0198 5F90      		pop r5
 530 019a 4F90      		pop r4
 531 019c 3F90      		pop r3
 532 019e 2F90      		pop r2
 533 01a0 0895      		ret
 535               	.Lscope2:
 537               		.stabd	78,0,0
 538               	.global	__udivdi3
 541               	.global	get_pack_time
 543               	get_pack_time:
 544               		.stabd	46,0,0
  63:../../../src/net/pulse_sync/pulse_sync.c **** 
  64:../../../src/net/pulse_sync/pulse_sync.c **** /*
  65:../../../src/net/pulse_sync/pulse_sync.c ****  * helper function to change uint64_t to nrk_time_t
  66:../../../src/net/pulse_sync/pulse_sync.c ****  */
  67:../../../src/net/pulse_sync/pulse_sync.c **** inline nrk_time_t get_pack_time(uint64_t time) {
 546               	.LM17:
 547               	.LFBB3:
 548 01a2 2F92      		push r2
 549 01a4 3F92      		push r3
 550 01a6 4F92      		push r4
 551 01a8 5F92      		push r5
 552 01aa 6F92      		push r6
 553 01ac 7F92      		push r7
 554 01ae 8F92      		push r8
 555 01b0 9F92      		push r9
 556 01b2 AF92      		push r10
 557 01b4 BF92      		push r11
 558 01b6 CF92      		push r12
 559 01b8 DF92      		push r13
 560 01ba EF92      		push r14
 561 01bc FF92      		push r15
 562 01be 0F93      		push r16
 563 01c0 1F93      		push r17
 564 01c2 CF93      		push r28
 565 01c4 DF93      		push r29
 566 01c6 CDB7      		in r28,__SP_L__
 567 01c8 DEB7      		in r29,__SP_H__
 568 01ca 2897      		sbiw r28,8
 569 01cc 0FB6      		in __tmp_reg__,__SREG__
 570 01ce F894      		cli
 571 01d0 DEBF      		out __SP_H__,r29
 572 01d2 0FBE      		out __SREG__,__tmp_reg__
 573 01d4 CDBF      		out __SP_L__,r28
 574               	/* prologue: function */
 575               	/* frame size = 8 */
 576               	/* stack size = 26 */
 577               	.L__stack_usage = 26
 578 01d6 1901      		movw r2,r18
 579 01d8 2A01      		movw r4,r20
 580 01da 4C01      		movw r8,r24
  68:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_time_t nrk_time;
  69:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_time.secs = time / 1000000000;
 582               	.LM18:
 583 01dc A12C      		mov r10,__zero_reg__
 584 01de 8AEC      		ldi r24,lo8(-54)
 585 01e0 B82E      		mov r11,r24
 586 01e2 9AE9      		ldi r25,lo8(-102)
 587 01e4 C92E      		mov r12,r25
 588 01e6 2BE3      		ldi r18,lo8(59)
 589 01e8 D22E      		mov r13,r18
 590 01ea E12C      		mov r14,__zero_reg__
 591 01ec F12C      		mov r15,__zero_reg__
 592 01ee 00E0      		ldi r16,0
 593 01f0 10E0      		ldi r17,0
 594 01f2 9101      		movw r18,r2
 595 01f4 C401      		movw r24,r8
 596 01f6 0E94 0000 		call __udivdi3
 597 01fa E22F      		mov r30,r18
  70:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_time.nano_secs = time - 1000000000L * (uint64_t)nrk_time.secs;
  71:../../../src/net/pulse_sync/pulse_sync.c **** 	return nrk_time;
 599               	.LM19:
 600 01fc 3A83      		std Y+2,r19
 601 01fe 4B83      		std Y+3,r20
 602 0200 5C83      		std Y+4,r21
  70:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_time.nano_secs = time - 1000000000L * (uint64_t)nrk_time.secs;
 604               	.LM20:
 605 0202 60E0      		ldi r22,0
 606 0204 7AEC      		ldi r23,lo8(-54)
 607 0206 8AE9      		ldi r24,lo8(-102)
 608 0208 9BE3      		ldi r25,lo8(59)
 609 020a 0E94 0000 		call __mulsi3
 610 020e A201      		movw r20,r4
 611 0210 9101      		movw r18,r2
 612 0212 261B      		sub r18,r22
 613 0214 370B      		sbc r19,r23
 614 0216 480B      		sbc r20,r24
 615 0218 590B      		sbc r21,r25
 616 021a DA01      		movw r26,r20
 617 021c C901      		movw r24,r18
 619               	.LM21:
 620 021e 2D83      		std Y+5,r18
 621 0220 3E83      		std Y+6,r19
 622 0222 4F83      		std Y+7,r20
 623 0224 5887      		std Y+8,r21
 624 0226 2E2F      		mov r18,r30
 625 0228 3A81      		ldd r19,Y+2
 626 022a 4B81      		ldd r20,Y+3
 627 022c 5C81      		ldd r21,Y+4
 628 022e 682F      		mov r22,r24
 629 0230 7E81      		ldd r23,Y+6
  72:../../../src/net/pulse_sync/pulse_sync.c **** }
 631               	.LM22:
 632 0232 8F81      		ldd r24,Y+7
 633 0234 9885      		ldd r25,Y+8
 634               	/* epilogue start */
 635 0236 2896      		adiw r28,8
 636 0238 0FB6      		in __tmp_reg__,__SREG__
 637 023a F894      		cli
 638 023c DEBF      		out __SP_H__,r29
 639 023e 0FBE      		out __SREG__,__tmp_reg__
 640 0240 CDBF      		out __SP_L__,r28
 641 0242 DF91      		pop r29
 642 0244 CF91      		pop r28
 643 0246 1F91      		pop r17
 644 0248 0F91      		pop r16
 645 024a FF90      		pop r15
 646 024c EF90      		pop r14
 647 024e DF90      		pop r13
 648 0250 CF90      		pop r12
 649 0252 BF90      		pop r11
 650 0254 AF90      		pop r10
 651 0256 9F90      		pop r9
 652 0258 8F90      		pop r8
 653 025a 7F90      		pop r7
 654 025c 6F90      		pop r6
 655 025e 5F90      		pop r5
 656 0260 4F90      		pop r4
 657 0262 3F90      		pop r3
 658 0264 2F90      		pop r2
 659 0266 0895      		ret
 661               	.Lscope3:
 663               		.stabd	78,0,0
 664               	.global	__muldi3
 665               	.global	__divdi3
 667               	.global	psync_add_point
 669               	psync_add_point:
 670               		.stabd	46,0,0
  73:../../../src/net/pulse_sync/pulse_sync.c **** 
  74:../../../src/net/pulse_sync/pulse_sync.c **** /*
  75:../../../src/net/pulse_sync/pulse_sync.c ****  * function for adding new synchronization point to regression line calculation
  76:../../../src/net/pulse_sync/pulse_sync.c ****  */
  77:../../../src/net/pulse_sync/pulse_sync.c **** void psync_add_point(uint64_t loc_time, uint64_t glob_time) {
 672               	.LM23:
 673               	.LFBB4:
 674 0268 2F92      		push r2
 675 026a 3F92      		push r3
 676 026c 4F92      		push r4
 677 026e 5F92      		push r5
 678 0270 6F92      		push r6
 679 0272 7F92      		push r7
 680 0274 8F92      		push r8
 681 0276 9F92      		push r9
 682 0278 AF92      		push r10
 683 027a BF92      		push r11
 684 027c CF92      		push r12
 685 027e DF92      		push r13
 686 0280 EF92      		push r14
 687 0282 FF92      		push r15
 688 0284 0F93      		push r16
 689 0286 1F93      		push r17
 690 0288 CF93      		push r28
 691 028a DF93      		push r29
 692 028c CDB7      		in r28,__SP_L__
 693 028e DEB7      		in r29,__SP_H__
 694 0290 CF55      		subi r28,95
 695 0292 D109      		sbc r29,__zero_reg__
 696 0294 0FB6      		in __tmp_reg__,__SREG__
 697 0296 F894      		cli
 698 0298 DEBF      		out __SP_H__,r29
 699 029a 0FBE      		out __SREG__,__tmp_reg__
 700 029c CDBF      		out __SP_L__,r28
 701               	/* prologue: function */
 702               	/* frame size = 95 */
 703               	/* stack size = 113 */
 704               	.L__stack_usage = 113
 705 029e 29A3      		std Y+33,r18
 706 02a0 3AA3      		std Y+34,r19
 707 02a2 4BA3      		std Y+35,r20
 708 02a4 5CA3      		std Y+36,r21
 709 02a6 6DA3      		std Y+37,r22
 710 02a8 7EA3      		std Y+38,r23
 711 02aa 8FA3      		std Y+39,r24
 712 02ac 98A7      		std Y+40,r25
 713 02ae 2F96      		adiw r28,78-63
 714 02b0 AFAE      		std Y+63,r10
 715 02b2 2F97      		sbiw r28,78-63
 716 02b4 6096      		adiw r28,79-63
 717 02b6 BFAE      		std Y+63,r11
 718 02b8 6097      		sbiw r28,79-63
 719 02ba 6196      		adiw r28,80-63
 720 02bc CFAE      		std Y+63,r12
 721 02be 6197      		sbiw r28,80-63
 722 02c0 6296      		adiw r28,81-63
 723 02c2 DFAE      		std Y+63,r13
 724 02c4 6297      		sbiw r28,81-63
 725 02c6 6396      		adiw r28,82-63
 726 02c8 EFAE      		std Y+63,r14
 727 02ca 6397      		sbiw r28,82-63
 728 02cc 6496      		adiw r28,83-63
 729 02ce FFAE      		std Y+63,r15
 730 02d0 6497      		sbiw r28,83-63
 731 02d2 6596      		adiw r28,84-63
 732 02d4 0FAF      		std Y+63,r16
 733 02d6 6597      		sbiw r28,84-63
 734 02d8 6696      		adiw r28,85-63
 735 02da 1FAF      		std Y+63,r17
 736 02dc 6697      		sbiw r28,85-63
  78:../../../src/net/pulse_sync/pulse_sync.c **** 	int64_t tmp_avg;
  79:../../../src/net/pulse_sync/pulse_sync.c **** 	int8_t tmp_rem;
  80:../../../src/net/pulse_sync/pulse_sync.c **** 	uint8_t next_ind;
  81:../../../src/net/pulse_sync/pulse_sync.c **** 
  82:../../../src/net/pulse_sync/pulse_sync.c **** 	// determine new number of samples
  83:../../../src/net/pulse_sync/pulse_sync.c **** 	uint8_t new_samples = samples < MAX_SAMPLES ? samples + 1 : samples;
 738               	.LM24:
 739 02de 2091 0000 		lds r18,samples
 740 02e2 2B83      		std Y+3,r18
 741 02e4 2430      		cpi r18,lo8(4)
 742 02e6 00F4      		brsh .L10
 744               	.LM25:
 745 02e8 2F5F      		subi r18,lo8(-(1))
 746 02ea 2B83      		std Y+3,r18
 747               	.L10:
  84:../../../src/net/pulse_sync/pulse_sync.c **** 
  85:../../../src/net/pulse_sync/pulse_sync.c **** 	next_ind = (curr_ind + 1) % MAX_SAMPLES;
 749               	.LM26:
 750 02ec 8091 0000 		lds r24,curr_ind
 751 02f0 90E0      		ldi r25,0
 752 02f2 0196      		adiw r24,1
 753 02f4 BC01      		movw r22,r24
 754 02f6 6370      		andi r22,3
 755 02f8 7727      		clr r23
 756 02fa 2696      		adiw r28,68-62
 757 02fc 7FAF      		std Y+63,r23
 758 02fe 6EAF      		std Y+62,r22
 759 0300 2697      		sbiw r28,68-62
  86:../../../src/net/pulse_sync/pulse_sync.c **** 
  87:../../../src/net/pulse_sync/pulse_sync.c **** 	// assemble previous values
  88:../../../src/net/pulse_sync/pulse_sync.c **** 	uint64_t prev_loc = line_data[next_ind].loc_time;
 761               	.LM27:
 762 0302 85E0      		ldi r24,5
 763               		1:
 764 0304 660F      		lsl r22
 765 0306 771F      		rol r23
 766 0308 8A95      		dec r24
 767 030a 01F4      		brne 1b
 768 030c 2896      		adiw r28,70-62
 769 030e 7FAF      		std Y+63,r23
 770 0310 6EAF      		std Y+62,r22
 771 0312 2897      		sbiw r28,70-62
 772 0314 6050      		subi r22,lo8(-(line_data))
 773 0316 7040      		sbci r23,hi8(-(line_data))
 774 0318 1B01      		movw r2,r22
 775 031a CB01      		movw r24,r22
 776 031c 0896      		adiw r24,8
 777 031e 9A83      		std Y+2,r25
 778 0320 8983      		std Y+1,r24
 779 0322 DB01      		movw r26,r22
 780 0324 1896      		adiw r26,8
 781 0326 BC91      		ld r27,X
 782 0328 BC83      		std Y+4,r27
 783 032a FC01      		movw r30,r24
 784 032c F181      		ldd r31,Z+1
 785 032e FA87      		std Y+10,r31
 786 0330 DC01      		movw r26,r24
 787 0332 1296      		adiw r26,2
 788 0334 BC91      		ld r27,X
 789 0336 BB87      		std Y+11,r27
 790 0338 FC01      		movw r30,r24
 791 033a F381      		ldd r31,Z+3
 792 033c FC87      		std Y+12,r31
 793 033e DC01      		movw r26,r24
 794 0340 1496      		adiw r26,4
 795 0342 4C90      		ld r4,X
 796 0344 1497      		sbiw r26,4
 797 0346 1596      		adiw r26,5
 798 0348 5C90      		ld r5,X
 799 034a 1597      		sbiw r26,5
 800 034c 1696      		adiw r26,6
 801 034e 6C90      		ld r6,X
 802 0350 1697      		sbiw r26,6
 803 0352 1796      		adiw r26,7
 804 0354 7C90      		ld r7,X
  89:../../../src/net/pulse_sync/pulse_sync.c **** 	int64_t prev_off = line_data[next_ind].glob_time - prev_loc;
 806               	.LM28:
 807 0356 FB01      		movw r30,r22
 808 0358 2081      		ld r18,Z
 809 035a 3181      		ldd r19,Z+1
 810 035c 4281      		ldd r20,Z+2
 811 035e 5381      		ldd r21,Z+3
 812 0360 6481      		ldd r22,Z+4
 813 0362 7581      		ldd r23,Z+5
 814 0364 8681      		ldd r24,Z+6
 815 0366 9781      		ldd r25,Z+7
 816 0368 AC80      		ldd r10,Y+4
 817 036a BA84      		ldd r11,Y+10
 818 036c CB84      		ldd r12,Y+11
 819 036e DC84      		ldd r13,Y+12
 820 0370 7201      		movw r14,r4
 821 0372 8301      		movw r16,r6
 822 0374 0E94 0000 		call __subdi3
 823 0378 2C8F      		std Y+28,r18
 824 037a 3D8F      		std Y+29,r19
 825 037c 4E8F      		std Y+30,r20
 826 037e 5F8F      		std Y+31,r21
 827 0380 68A3      		std Y+32,r22
 828 0382 79A7      		std Y+41,r23
 829 0384 8AA7      		std Y+42,r24
 830 0386 9BA7      		std Y+43,r25
  90:../../../src/net/pulse_sync/pulse_sync.c **** 	int64_t off_time = glob_time - loc_time;
 832               	.LM29:
 833 0388 2F96      		adiw r28,78-63
 834 038a 2FAD      		ldd r18,Y+63
 835 038c 2F97      		sbiw r28,78-63
 836 038e 6096      		adiw r28,79-63
 837 0390 3FAD      		ldd r19,Y+63
 838 0392 6097      		sbiw r28,79-63
 839 0394 6196      		adiw r28,80-63
 840 0396 4FAD      		ldd r20,Y+63
 841 0398 6197      		sbiw r28,80-63
 842 039a 6296      		adiw r28,81-63
 843 039c 5FAD      		ldd r21,Y+63
 844 039e 6297      		sbiw r28,81-63
 845 03a0 6396      		adiw r28,82-63
 846 03a2 6FAD      		ldd r22,Y+63
 847 03a4 6397      		sbiw r28,82-63
 848 03a6 6496      		adiw r28,83-63
 849 03a8 7FAD      		ldd r23,Y+63
 850 03aa 6497      		sbiw r28,83-63
 851 03ac 6596      		adiw r28,84-63
 852 03ae 8FAD      		ldd r24,Y+63
 853 03b0 6597      		sbiw r28,84-63
 854 03b2 6696      		adiw r28,85-63
 855 03b4 9FAD      		ldd r25,Y+63
 856 03b6 6697      		sbiw r28,85-63
 857 03b8 A9A0      		ldd r10,Y+33
 858 03ba BAA0      		ldd r11,Y+34
 859 03bc CBA0      		ldd r12,Y+35
 860 03be DCA0      		ldd r13,Y+36
 861 03c0 EDA0      		ldd r14,Y+37
 862 03c2 FEA0      		ldd r15,Y+38
 863 03c4 0FA1      		ldd r16,Y+39
 864 03c6 18A5      		ldd r17,Y+40
 865 03c8 0E94 0000 		call __subdi3
 866 03cc 2CA7      		std Y+44,r18
 867 03ce 3DA7      		std Y+45,r19
 868 03d0 2996      		adiw r28,72-63
 869 03d2 4FAF      		std Y+63,r20
 870 03d4 2997      		sbiw r28,72-63
 871 03d6 2A96      		adiw r28,73-63
 872 03d8 5FAF      		std Y+63,r21
 873 03da 2A97      		sbiw r28,73-63
 874 03dc 2B96      		adiw r28,74-63
 875 03de 6FAF      		std Y+63,r22
 876 03e0 2B97      		sbiw r28,74-63
 877 03e2 2C96      		adiw r28,75-63
 878 03e4 7FAF      		std Y+63,r23
 879 03e6 2C97      		sbiw r28,75-63
 880 03e8 2D96      		adiw r28,76-63
 881 03ea 8FAF      		std Y+63,r24
 882 03ec 2D97      		sbiw r28,76-63
 883 03ee 2E96      		adiw r28,77-63
 884 03f0 9FAF      		std Y+63,r25
 885 03f2 2E97      		sbiw r28,77-63
  91:../../../src/net/pulse_sync/pulse_sync.c **** 
  92:../../../src/net/pulse_sync/pulse_sync.c **** 	//// remove old average values from square sums
  93:../../../src/net/pulse_sync/pulse_sync.c **** 	// lock skew values
  94:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_pend(skew_lock);
 887               	.LM30:
 888 03f4 8091 0000 		lds r24,skew_lock
 889 03f8 9091 0000 		lds r25,skew_lock+1
 890 03fc 0E94 0000 		call nrk_sem_pend
  95:../../../src/net/pulse_sync/pulse_sync.c **** 
  96:../../../src/net/pulse_sync/pulse_sync.c **** 	// remove terms in local time deviation squared sum containing old mean local time
  97:../../../src/net/pulse_sync/pulse_sync.c **** 	loc_sq_sum += (loc_avg >> 3) * ((int64_t)(2 * loc_sum - samples * loc_avg) >> 3);
 892               	.LM31:
 893 0400 F091 0000 		lds r31,loc_avg
 894 0404 FD83      		std Y+5,r31
 895 0406 2091 0000 		lds r18,loc_avg+1
 896 040a 2E83      		std Y+6,r18
 897 040c 3091 0000 		lds r19,loc_avg+2
 898 0410 3F83      		std Y+7,r19
 899 0412 6091 0000 		lds r22,loc_avg+3
 900 0416 6887      		std Y+8,r22
 901 0418 7091 0000 		lds r23,loc_avg+4
 902 041c 7987      		std Y+9,r23
 903 041e 8091 0000 		lds r24,loc_avg+5
 904 0422 8D87      		std Y+13,r24
 905 0424 9091 0000 		lds r25,loc_avg+6
 906 0428 9E87      		std Y+14,r25
 907 042a A091 0000 		lds r26,loc_avg+7
 908 042e AF87      		std Y+15,r26
 909 0430 B091 0000 		lds r27,loc_sum
 910 0434 BC8B      		std Y+20,r27
 911 0436 E091 0000 		lds r30,loc_sum+1
 912 043a ED8B      		std Y+21,r30
 913 043c F091 0000 		lds r31,loc_sum+2
 914 0440 FE8B      		std Y+22,r31
 915 0442 2091 0000 		lds r18,loc_sum+3
 916 0446 2F8B      		std Y+23,r18
 917 0448 3091 0000 		lds r19,loc_sum+4
 918 044c 388F      		std Y+24,r19
 919 044e 6091 0000 		lds r22,loc_sum+5
 920 0452 698F      		std Y+25,r22
 921 0454 7091 0000 		lds r23,loc_sum+6
 922 0458 7A8F      		std Y+26,r23
 923 045a 8091 0000 		lds r24,loc_sum+7
 924 045e 8B8F      		std Y+27,r24
 925 0460 2091 0000 		lds r18,samples
 926 0464 AD80      		ldd r10,Y+5
 927 0466 BE80      		ldd r11,Y+6
 928 0468 CF80      		ldd r12,Y+7
 929 046a D884      		ldd r13,Y+8
 930 046c E984      		ldd r14,Y+9
 931 046e FD84      		ldd r15,Y+13
 932 0470 092F      		mov r16,r25
 933 0472 1A2F      		mov r17,r26
 934 0474 30E0      		ldi r19,0
 935 0476 40E0      		ldi r20,0
 936 0478 50E0      		ldi r21,0
 937 047a 60E0      		ldi r22,0
 938 047c 70E0      		ldi r23,0
 939 047e 80E0      		ldi r24,0
 940 0480 90E0      		ldi r25,0
 941 0482 0E94 0000 		call __muldi3
 942 0486 2CAB      		std Y+52,r18
 943 0488 3DAB      		std Y+53,r19
 944 048a 4EAF      		std Y+62,r20
 945 048c 5FAF      		std Y+63,r21
 946 048e 2196      		adiw r28,64-63
 947 0490 6FAF      		std Y+63,r22
 948 0492 2197      		sbiw r28,64-63
 949 0494 2296      		adiw r28,65-63
 950 0496 7FAF      		std Y+63,r23
 951 0498 2297      		sbiw r28,65-63
 952 049a 2396      		adiw r28,66-63
 953 049c 8FAF      		std Y+63,r24
 954 049e 2397      		sbiw r28,66-63
 955 04a0 2496      		adiw r28,67-63
 956 04a2 9FAF      		std Y+63,r25
 957 04a4 2497      		sbiw r28,67-63
  98:../../../src/net/pulse_sync/pulse_sync.c **** 	// overwrite old local time in square with new local time
  99:../../../src/net/pulse_sync/pulse_sync.c **** 	loc_sq_sum += ((loc_time - prev_loc) >> 3) * ((loc_time + prev_loc) >> 3);
 959               	.LM32:
 960 04a6 29A1      		ldd r18,Y+33
 961 04a8 3AA1      		ldd r19,Y+34
 962 04aa 4BA1      		ldd r20,Y+35
 963 04ac 5CA1      		ldd r21,Y+36
 964 04ae 6DA1      		ldd r22,Y+37
 965 04b0 7EA1      		ldd r23,Y+38
 966 04b2 8FA1      		ldd r24,Y+39
 967 04b4 98A5      		ldd r25,Y+40
 968 04b6 AC80      		ldd r10,Y+4
 969 04b8 BA84      		ldd r11,Y+10
 970 04ba CB84      		ldd r12,Y+11
 971 04bc DC84      		ldd r13,Y+12
 972 04be 7201      		movw r14,r4
 973 04c0 8301      		movw r16,r6
 974 04c2 0E94 0000 		call __subdi3
 975 04c6 288B      		std Y+16,r18
 976 04c8 3A8B      		std Y+18,r19
 977 04ca 4EA7      		std Y+46,r20
 978 04cc 5FA7      		std Y+47,r21
 979 04ce 68AB      		std Y+48,r22
 980 04d0 79AB      		std Y+49,r23
 981 04d2 8AAB      		std Y+50,r24
 982 04d4 9BAB      		std Y+51,r25
 983 04d6 29A1      		ldd r18,Y+33
 984 04d8 3AA1      		ldd r19,Y+34
 985 04da 4BA1      		ldd r20,Y+35
 986 04dc 5CA1      		ldd r21,Y+36
 987 04de 6DA1      		ldd r22,Y+37
 988 04e0 7EA1      		ldd r23,Y+38
 989 04e2 8FA1      		ldd r24,Y+39
 990 04e4 98A5      		ldd r25,Y+40
 991 04e6 0E94 0000 		call __adddi3
 992 04ea 03E0      		ldi r16,lo8(3)
 993 04ec 0E94 0000 		call __lshrdi3
 994 04f0 4901      		movw r8,r18
 995 04f2 FA01      		movw r30,r20
 996 04f4 B62F      		mov r27,r22
 997 04f6 A72F      		mov r26,r23
 998 04f8 8FAB      		std Y+55,r24
 999 04fa 98AF      		std Y+56,r25
 1000 04fc 2889      		ldd r18,Y+16
 1001 04fe 3A89      		ldd r19,Y+18
 1002 0500 4EA5      		ldd r20,Y+46
 1003 0502 5FA5      		ldd r21,Y+47
 1004 0504 68A9      		ldd r22,Y+48
 1005 0506 79A9      		ldd r23,Y+49
 1006 0508 8AA9      		ldd r24,Y+50
 1007 050a 9BA9      		ldd r25,Y+51
 1008 050c 0E94 0000 		call __lshrdi3
 1009 0510 5901      		movw r10,r18
 1010 0512 6A01      		movw r12,r20
 1011 0514 7B01      		movw r14,r22
 1012 0516 8C01      		movw r16,r24
 1013 0518 9401      		movw r18,r8
 1014 051a AF01      		movw r20,r30
 1015 051c 6B2F      		mov r22,r27
 1016 051e 7A2F      		mov r23,r26
 1017 0520 8FA9      		ldd r24,Y+55
 1018 0522 98AD      		ldd r25,Y+56
 1019 0524 0E94 0000 		call __muldi3
 1020 0528 A090 0000 		lds r10,loc_sq_sum
 1021 052c B090 0000 		lds r11,loc_sq_sum+1
 1022 0530 C090 0000 		lds r12,loc_sq_sum+2
 1023 0534 D090 0000 		lds r13,loc_sq_sum+3
 1024 0538 E090 0000 		lds r14,loc_sq_sum+4
 1025 053c F090 0000 		lds r15,loc_sq_sum+5
 1026 0540 0091 0000 		lds r16,loc_sq_sum+6
 1027 0544 1091 0000 		lds r17,loc_sq_sum+7
 1028 0548 0E94 0000 		call __adddi3
 1029 054c 2EAB      		std Y+54,r18
 1030 054e 3FAB      		std Y+55,r19
 1031 0550 4A01      		movw r8,r20
 1032 0552 6A96      		adiw r28,89-63
 1033 0554 6FAF      		std Y+63,r22
 1034 0556 6A97      		sbiw r28,89-63
 1035 0558 6796      		adiw r28,86-63
 1036 055a 7FAF      		std Y+63,r23
 1037 055c 6797      		sbiw r28,86-63
 1038 055e 88AF      		std Y+56,r24
 1039 0560 99AF      		std Y+57,r25
  97:../../../src/net/pulse_sync/pulse_sync.c **** 	// overwrite old local time in square with new local time
 1041               	.LM33:
 1042 0562 2C89      		ldd r18,Y+20
 1043 0564 3D89      		ldd r19,Y+21
 1044 0566 4E89      		ldd r20,Y+22
 1045 0568 5F89      		ldd r21,Y+23
 1046 056a 688D      		ldd r22,Y+24
 1047 056c 798D      		ldd r23,Y+25
 1048 056e 8A8D      		ldd r24,Y+26
 1049 0570 9B8D      		ldd r25,Y+27
 1050 0572 01E0      		ldi r16,lo8(1)
 1051 0574 0E94 0000 		call __ashldi3
 1052 0578 ACA8      		ldd r10,Y+52
 1053 057a BDA8      		ldd r11,Y+53
 1054 057c CEAC      		ldd r12,Y+62
 1055 057e DFAC      		ldd r13,Y+63
 1056 0580 2196      		adiw r28,64-63
 1057 0582 EFAC      		ldd r14,Y+63
 1058 0584 2197      		sbiw r28,64-63
 1059 0586 2296      		adiw r28,65-63
 1060 0588 FFAC      		ldd r15,Y+63
 1061 058a 2297      		sbiw r28,65-63
 1062 058c 2396      		adiw r28,66-63
 1063 058e 0FAD      		ldd r16,Y+63
 1064 0590 2397      		sbiw r28,66-63
 1065 0592 2496      		adiw r28,67-63
 1066 0594 1FAD      		ldd r17,Y+63
 1067 0596 2497      		sbiw r28,67-63
 1068 0598 0E94 0000 		call __subdi3
 1069 059c 03E0      		ldi r16,lo8(3)
 1070 059e 0E94 0000 		call __ashrdi3
 1071 05a2 F901      		movw r30,r18
 1072 05a4 4CAF      		std Y+60,r20
 1073 05a6 5DAF      		std Y+61,r21
 1074 05a8 B62F      		mov r27,r22
 1075 05aa A72F      		mov r26,r23
 1076 05ac 6896      		adiw r28,87-63
 1077 05ae 8FAF      		std Y+63,r24
 1078 05b0 6897      		sbiw r28,87-63
 1079 05b2 6996      		adiw r28,88-63
 1080 05b4 9FAF      		std Y+63,r25
 1081 05b6 6997      		sbiw r28,88-63
 1082 05b8 2D81      		ldd r18,Y+5
 1083 05ba 3E81      		ldd r19,Y+6
 1084 05bc 4F81      		ldd r20,Y+7
 1085 05be 5885      		ldd r21,Y+8
 1086 05c0 6985      		ldd r22,Y+9
 1087 05c2 7D85      		ldd r23,Y+13
 1088 05c4 8E85      		ldd r24,Y+14
 1089 05c6 9F85      		ldd r25,Y+15
 1090 05c8 0E94 0000 		call __lshrdi3
 1091 05cc 5901      		movw r10,r18
 1092 05ce 6A01      		movw r12,r20
 1093 05d0 7B01      		movw r14,r22
 1094 05d2 8C01      		movw r16,r24
 1095 05d4 9F01      		movw r18,r30
 1096 05d6 4CAD      		ldd r20,Y+60
 1097 05d8 5DAD      		ldd r21,Y+61
 1098 05da 6B2F      		mov r22,r27
 1099 05dc 7A2F      		mov r23,r26
 1100 05de 6896      		adiw r28,87-63
 1101 05e0 8FAD      		ldd r24,Y+63
 1102 05e2 6897      		sbiw r28,87-63
 1103 05e4 6996      		adiw r28,88-63
 1104 05e6 9FAD      		ldd r25,Y+63
 1105 05e8 6997      		sbiw r28,88-63
 1106 05ea 0E94 0000 		call __muldi3
 1107 05ee 5901      		movw r10,r18
 1108 05f0 6A01      		movw r12,r20
 1109 05f2 7B01      		movw r14,r22
 1110 05f4 8C01      		movw r16,r24
 1112               	.LM34:
 1113 05f6 2EA9      		ldd r18,Y+54
 1114 05f8 3FA9      		ldd r19,Y+55
 1115 05fa A401      		movw r20,r8
 1116 05fc 6A96      		adiw r28,89-63
 1117 05fe 6FAD      		ldd r22,Y+63
 1118 0600 6A97      		sbiw r28,89-63
 1119 0602 6796      		adiw r28,86-63
 1120 0604 7FAD      		ldd r23,Y+63
 1121 0606 6797      		sbiw r28,86-63
 1122 0608 88AD      		ldd r24,Y+56
 1123 060a 99AD      		ldd r25,Y+57
 1124 060c 0E94 0000 		call __adddi3
 1125 0610 6796      		adiw r28,86-63
 1126 0612 2FAF      		std Y+63,r18
 1127 0614 6797      		sbiw r28,86-63
 1128 0616 6896      		adiw r28,87-63
 1129 0618 3FAF      		std Y+63,r19
 1130 061a 6897      		sbiw r28,87-63
 1131 061c 6996      		adiw r28,88-63
 1132 061e 4FAF      		std Y+63,r20
 1133 0620 6997      		sbiw r28,88-63
 1134 0622 6A96      		adiw r28,89-63
 1135 0624 5FAF      		std Y+63,r21
 1136 0626 6A97      		sbiw r28,89-63
 1137 0628 6B96      		adiw r28,90-63
 1138 062a 6FAF      		std Y+63,r22
 1139 062c 6B97      		sbiw r28,90-63
 1140 062e 6C96      		adiw r28,91-63
 1141 0630 7FAF      		std Y+63,r23
 1142 0632 6C97      		sbiw r28,91-63
 1143 0634 6D96      		adiw r28,92-63
 1144 0636 8FAF      		std Y+63,r24
 1145 0638 6D97      		sbiw r28,92-63
 1146 063a 6E96      		adiw r28,93-63
 1147 063c 9FAF      		std Y+63,r25
 1148 063e 6E97      		sbiw r28,93-63
 100:../../../src/net/pulse_sync/pulse_sync.c **** 
 101:../../../src/net/pulse_sync/pulse_sync.c **** 	// remove terms in offset deviation squared sum containing old mean local time and offset
 102:../../../src/net/pulse_sync/pulse_sync.c **** 	off_sq_sum += (off_avg >> 0) * ((loc_sum - samples * loc_avg) >> 0) + (loc_avg >> 0) * (off_sum >>
 1150               	.LM35:
 1151 0640 9091 0000 		lds r25,off_sum
 1152 0644 9EAB      		std Y+54,r25
 1153 0646 A091 0000 		lds r26,off_sum+1
 1154 064a AFAB      		std Y+55,r26
 1155 064c B091 0000 		lds r27,off_sum+2
 1156 0650 B8AF      		std Y+56,r27
 1157 0652 E091 0000 		lds r30,off_sum+3
 1158 0656 E9AF      		std Y+57,r30
 1159 0658 F091 0000 		lds r31,off_sum+4
 1160 065c FAAF      		std Y+58,r31
 1161 065e 2091 0000 		lds r18,off_sum+5
 1162 0662 2BAF      		std Y+59,r18
 1163 0664 3091 0000 		lds r19,off_sum+6
 1164 0668 3CAF      		std Y+60,r19
 1165 066a 6091 0000 		lds r22,off_sum+7
 1166 066e 6DAF      		std Y+61,r22
 1167 0670 AD80      		ldd r10,Y+5
 1168 0672 BE80      		ldd r11,Y+6
 1169 0674 CF80      		ldd r12,Y+7
 1170 0676 D884      		ldd r13,Y+8
 1171 0678 E984      		ldd r14,Y+9
 1172 067a FD84      		ldd r15,Y+13
 1173 067c 0E85      		ldd r16,Y+14
 1174 067e 1F85      		ldd r17,Y+15
 1175 0680 292F      		mov r18,r25
 1176 0682 3A2F      		mov r19,r26
 1177 0684 4B2F      		mov r20,r27
 1178 0686 5E2F      		mov r21,r30
 1179 0688 6F2F      		mov r22,r31
 1180 068a 7BAD      		ldd r23,Y+59
 1181 068c 8CAD      		ldd r24,Y+60
 1182 068e 9DAD      		ldd r25,Y+61
 1183 0690 0E94 0000 		call __muldi3
 1184 0694 A090 0000 		lds r10,off_sq_sum
 1185 0698 B090 0000 		lds r11,off_sq_sum+1
 1186 069c C090 0000 		lds r12,off_sq_sum+2
 1187 06a0 D090 0000 		lds r13,off_sq_sum+3
 1188 06a4 E090 0000 		lds r14,off_sq_sum+4
 1189 06a8 F090 0000 		lds r15,off_sq_sum+5
 1190 06ac 0091 0000 		lds r16,off_sq_sum+6
 1191 06b0 1091 0000 		lds r17,off_sq_sum+7
 1192 06b4 0E94 0000 		call __adddi3
 1193 06b8 2D83      		std Y+5,r18
 1194 06ba 3E83      		std Y+6,r19
 1195 06bc 4F83      		std Y+7,r20
 1196 06be 5887      		std Y+8,r21
 1197 06c0 4B01      		movw r8,r22
 1198 06c2 8D87      		std Y+13,r24
 1199 06c4 9987      		std Y+9,r25
 103:../../../src/net/pulse_sync/pulse_sync.c **** 	// overwrite old local time and offset terms with new local time and offset terms
 104:../../../src/net/pulse_sync/pulse_sync.c **** 	off_sq_sum += (loc_time >> 0) * (off_time >> 0) - (prev_loc >> 0) * (prev_off >> 0);
 1201               	.LM36:
 1202 06c6 AC80      		ldd r10,Y+4
 1203 06c8 BA84      		ldd r11,Y+10
 1204 06ca CB84      		ldd r12,Y+11
 1205 06cc DC84      		ldd r13,Y+12
 1206 06ce 7201      		movw r14,r4
 1207 06d0 8301      		movw r16,r6
 1208 06d2 2C8D      		ldd r18,Y+28
 1209 06d4 3D8D      		ldd r19,Y+29
 1210 06d6 4E8D      		ldd r20,Y+30
 1211 06d8 5F8D      		ldd r21,Y+31
 1212 06da 68A1      		ldd r22,Y+32
 1213 06dc 79A5      		ldd r23,Y+41
 1214 06de 8AA5      		ldd r24,Y+42
 1215 06e0 9BA5      		ldd r25,Y+43
 1216 06e2 0E94 0000 		call __muldi3
 1217 06e6 5901      		movw r10,r18
 1218 06e8 6A01      		movw r12,r20
 1219 06ea 7B01      		movw r14,r22
 1220 06ec 8C01      		movw r16,r24
 1221 06ee 2D81      		ldd r18,Y+5
 1222 06f0 3E81      		ldd r19,Y+6
 1223 06f2 4F81      		ldd r20,Y+7
 1224 06f4 5885      		ldd r21,Y+8
 1225 06f6 B401      		movw r22,r8
 1226 06f8 8D85      		ldd r24,Y+13
 1227 06fa 9985      		ldd r25,Y+9
 1228 06fc 0E94 0000 		call __subdi3
 1229 0700 2901      		movw r4,r18
 1230 0702 3A01      		movw r6,r20
 1231 0704 4B01      		movw r8,r22
 1232 0706 8D83      		std Y+5,r24
 1233 0708 9C83      		std Y+4,r25
 102:../../../src/net/pulse_sync/pulse_sync.c **** 	// overwrite old local time and offset terms with new local time and offset terms
 1235               	.LM37:
 1236 070a 2C89      		ldd r18,Y+20
 1237 070c 3D89      		ldd r19,Y+21
 1238 070e 4E89      		ldd r20,Y+22
 1239 0710 5F89      		ldd r21,Y+23
 1240 0712 688D      		ldd r22,Y+24
 1241 0714 798D      		ldd r23,Y+25
 1242 0716 8A8D      		ldd r24,Y+26
 1243 0718 9B8D      		ldd r25,Y+27
 1244 071a ACA8      		ldd r10,Y+52
 1245 071c BDA8      		ldd r11,Y+53
 1246 071e CEAC      		ldd r12,Y+62
 1247 0720 DFAC      		ldd r13,Y+63
 1248 0722 2196      		adiw r28,64-63
 1249 0724 EFAC      		ldd r14,Y+63
 1250 0726 2197      		sbiw r28,64-63
 1251 0728 2296      		adiw r28,65-63
 1252 072a FFAC      		ldd r15,Y+63
 1253 072c 2297      		sbiw r28,65-63
 1254 072e 2396      		adiw r28,66-63
 1255 0730 0FAD      		ldd r16,Y+63
 1256 0732 2397      		sbiw r28,66-63
 1257 0734 2496      		adiw r28,67-63
 1258 0736 1FAD      		ldd r17,Y+63
 1259 0738 2497      		sbiw r28,67-63
 1260 073a 0E94 0000 		call __subdi3
 1261 073e A090 0000 		lds r10,off_avg
 1262 0742 B090 0000 		lds r11,off_avg+1
 1263 0746 C090 0000 		lds r12,off_avg+2
 1264 074a D090 0000 		lds r13,off_avg+3
 1265 074e E090 0000 		lds r14,off_avg+4
 1266 0752 F090 0000 		lds r15,off_avg+5
 1267 0756 0091 0000 		lds r16,off_avg+6
 1268 075a 1091 0000 		lds r17,off_avg+7
 1269 075e 0E94 0000 		call __muldi3
 1270 0762 5901      		movw r10,r18
 1271 0764 6A01      		movw r12,r20
 1272 0766 7B01      		movw r14,r22
 1273 0768 8C01      		movw r16,r24
 1274 076a 9201      		movw r18,r4
 1275 076c A301      		movw r20,r6
 1276 076e B401      		movw r22,r8
 1277 0770 8D81      		ldd r24,Y+5
 1278 0772 9C81      		ldd r25,Y+4
 1279 0774 0E94 0000 		call __adddi3
 1280 0778 2901      		movw r4,r18
 1281 077a 3A01      		movw r6,r20
 1282 077c 4B01      		movw r8,r22
 1283 077e 8D83      		std Y+5,r24
 1284 0780 9C83      		std Y+4,r25
 1286               	.LM38:
 1287 0782 A9A0      		ldd r10,Y+33
 1288 0784 BAA0      		ldd r11,Y+34
 1289 0786 CBA0      		ldd r12,Y+35
 1290 0788 DCA0      		ldd r13,Y+36
 1291 078a EDA0      		ldd r14,Y+37
 1292 078c FEA0      		ldd r15,Y+38
 1293 078e 0FA1      		ldd r16,Y+39
 1294 0790 18A5      		ldd r17,Y+40
 1295 0792 2CA5      		ldd r18,Y+44
 1296 0794 3DA5      		ldd r19,Y+45
 1297 0796 2996      		adiw r28,72-63
 1298 0798 4FAD      		ldd r20,Y+63
 1299 079a 2997      		sbiw r28,72-63
 1300 079c 2A96      		adiw r28,73-63
 1301 079e 5FAD      		ldd r21,Y+63
 1302 07a0 2A97      		sbiw r28,73-63
 1303 07a2 2B96      		adiw r28,74-63
 1304 07a4 6FAD      		ldd r22,Y+63
 1305 07a6 2B97      		sbiw r28,74-63
 1306 07a8 2C96      		adiw r28,75-63
 1307 07aa 7FAD      		ldd r23,Y+63
 1308 07ac 2C97      		sbiw r28,75-63
 1309 07ae 2D96      		adiw r28,76-63
 1310 07b0 8FAD      		ldd r24,Y+63
 1311 07b2 2D97      		sbiw r28,76-63
 1312 07b4 2E96      		adiw r28,77-63
 1313 07b6 9FAD      		ldd r25,Y+63
 1314 07b8 2E97      		sbiw r28,77-63
 1315 07ba 0E94 0000 		call __muldi3
 1316 07be 5901      		movw r10,r18
 1317 07c0 6A01      		movw r12,r20
 1318 07c2 7B01      		movw r14,r22
 1319 07c4 8C01      		movw r16,r24
 1320 07c6 9201      		movw r18,r4
 1321 07c8 A301      		movw r20,r6
 1322 07ca B401      		movw r22,r8
 1323 07cc 8D81      		ldd r24,Y+5
 1324 07ce 9C81      		ldd r25,Y+4
 1325 07d0 0E94 0000 		call __adddi3
 1326 07d4 2EAF      		std Y+62,r18
 1327 07d6 3FAF      		std Y+63,r19
 1328 07d8 2196      		adiw r28,64-63
 1329 07da 4FAF      		std Y+63,r20
 1330 07dc 2197      		sbiw r28,64-63
 1331 07de 2296      		adiw r28,65-63
 1332 07e0 5FAF      		std Y+63,r21
 1333 07e2 2297      		sbiw r28,65-63
 1334 07e4 2396      		adiw r28,66-63
 1335 07e6 6FAF      		std Y+63,r22
 1336 07e8 2397      		sbiw r28,66-63
 1337 07ea 2496      		adiw r28,67-63
 1338 07ec 7FAF      		std Y+63,r23
 1339 07ee 2497      		sbiw r28,67-63
 1340 07f0 6F96      		adiw r28,94-63
 1341 07f2 8FAF      		std Y+63,r24
 1342 07f4 6F97      		sbiw r28,94-63
 1343 07f6 A096      		adiw r28,95-63
 1344 07f8 9FAF      		std Y+63,r25
 1345 07fa A097      		sbiw r28,95-63
 105:../../../src/net/pulse_sync/pulse_sync.c **** 
 106:../../../src/net/pulse_sync/pulse_sync.c **** 	//// calculate new mean local time and local time deviation squared
 107:../../../src/net/pulse_sync/pulse_sync.c **** 	loc_sum += loc_time - prev_loc;
 1347               	.LM39:
 1348 07fc 2889      		ldd r18,Y+16
 1349 07fe 3A89      		ldd r19,Y+18
 1350 0800 4EA5      		ldd r20,Y+46
 1351 0802 5FA5      		ldd r21,Y+47
 1352 0804 68A9      		ldd r22,Y+48
 1353 0806 79A9      		ldd r23,Y+49
 1354 0808 8AA9      		ldd r24,Y+50
 1355 080a 9BA9      		ldd r25,Y+51
 1356 080c AC88      		ldd r10,Y+20
 1357 080e BD88      		ldd r11,Y+21
 1358 0810 CE88      		ldd r12,Y+22
 1359 0812 DF88      		ldd r13,Y+23
 1360 0814 E88C      		ldd r14,Y+24
 1361 0816 F98C      		ldd r15,Y+25
 1362 0818 0A8D      		ldd r16,Y+26
 1363 081a 1B8D      		ldd r17,Y+27
 1364 081c 0E94 0000 		call __adddi3
 1365 0820 2C83      		std Y+4,r18
 1366 0822 3A87      		std Y+10,r19
 1367 0824 4B87      		std Y+11,r20
 1368 0826 5C87      		std Y+12,r21
 1369 0828 6D83      		std Y+5,r22
 1370 082a 7E83      		std Y+6,r23
 1371 082c 8F83      		std Y+7,r24
 1372 082e 9887      		std Y+8,r25
 1373 0830 2093 0000 		sts loc_sum,r18
 1374 0834 3093 0000 		sts loc_sum+1,r19
 1375 0838 4093 0000 		sts loc_sum+2,r20
 1376 083c 5093 0000 		sts loc_sum+3,r21
 1377 0840 6093 0000 		sts loc_sum+4,r22
 1378 0844 9E81      		ldd r25,Y+6
 1379 0846 9093 0000 		sts loc_sum+5,r25
 1380 084a AF81      		ldd r26,Y+7
 1381 084c A093 0000 		sts loc_sum+6,r26
 1382 0850 B885      		ldd r27,Y+8
 1383 0852 B093 0000 		sts loc_sum+7,r27
 108:../../../src/net/pulse_sync/pulse_sync.c **** 	tmp_avg = loc_sum / new_samples;
 1385               	.LM40:
 1386 0856 AB80      		ldd r10,Y+3
 1387 0858 B12C      		mov r11,__zero_reg__
 1388 085a C12C      		mov r12,__zero_reg__
 1389 085c D12C      		mov r13,__zero_reg__
 1390 085e E12C      		mov r14,__zero_reg__
 1391 0860 F12C      		mov r15,__zero_reg__
 1392 0862 00E0      		ldi r16,0
 1393 0864 10E0      		ldi r17,0
 1394 0866 792F      		mov r23,r25
 1395 0868 CD01      		movw r24,r26
 1396 086a 0E94 0000 		call __udivdi3
 1397 086e 052F      		mov r16,r21
 1398 0870 7B01      		movw r14,r22
 1399 0872 F82F      		mov r31,r24
 1400 0874 E92F      		mov r30,r25
 109:../../../src/net/pulse_sync/pulse_sync.c **** 	tmp_rem = loc_sum - new_samples * tmp_avg; 
 110:../../../src/net/pulse_sync/pulse_sync.c **** 	loc_avg = tmp_avg + (tmp_rem + new_samples / 2) / new_samples;
 1402               	.LM41:
 1403 0876 8A2D      		mov r24,r10
 1404 0878 8695      		lsr r24
 1405 087a 682F      		mov r22,r24
 1406 087c 70E0      		ldi r23,0
 1407 087e 798B      		std Y+17,r23
 1408 0880 688B      		std Y+16,r22
 1409 0882 8A2D      		mov r24,r10
 1410 0884 90E0      		ldi r25,0
 1411 0886 9B8B      		std Y+19,r25
 1412 0888 8A8B      		std Y+18,r24
 109:../../../src/net/pulse_sync/pulse_sync.c **** 	tmp_rem = loc_sum - new_samples * tmp_avg; 
 1414               	.LM42:
 1415 088a 8C81      		ldd r24,Y+4
 1416 088c A29E      		mul r10,r18
 1417 088e 8019      		sub r24,r0
 1418 0890 1124      		clr __zero_reg__
 1420               	.LM43:
 1421 0892 680F      		add r22,r24
 1422 0894 711D      		adc r23,__zero_reg__
 1423 0896 87FD      		sbrc r24,7
 1424 0898 7A95      		dec r23
 1425 089a CB01      		movw r24,r22
 1426 089c 6A89      		ldd r22,Y+18
 1427 089e 7B89      		ldd r23,Y+19
 1428 08a0 0E94 0000 		call __divmodhi4
 1429 08a4 5B01      		movw r10,r22
 1430 08a6 1B2D      		mov r17,r11
 1431 08a8 110F      		lsl r17
 1432 08aa 110B      		sbc r17,r17
 1433 08ac 502F      		mov r21,r16
 1434 08ae B701      		movw r22,r14
 1435 08b0 8F2F      		mov r24,r31
 1436 08b2 9E2F      		mov r25,r30
 1437 08b4 C12E      		mov r12,r17
 1438 08b6 D12E      		mov r13,r17
 1439 08b8 E12E      		mov r14,r17
 1440 08ba F12E      		mov r15,r17
 1441 08bc 012F      		mov r16,r17
 1442 08be 0E94 0000 		call __adddi3
 1443 08c2 2987      		std Y+9,r18
 1444 08c4 3D87      		std Y+13,r19
 1445 08c6 4E87      		std Y+14,r20
 1446 08c8 5F87      		std Y+15,r21
 1447 08ca 2B01      		movw r4,r22
 1448 08cc 3C01      		movw r6,r24
 1449 08ce 2093 0000 		sts loc_avg,r18
 1450 08d2 3093 0000 		sts loc_avg+1,r19
 1451 08d6 4093 0000 		sts loc_avg+2,r20
 1452 08da E52F      		mov r30,r21
 1453 08dc 5093 0000 		sts loc_avg+3,r21
 1454 08e0 6093 0000 		sts loc_avg+4,r22
 1455 08e4 5092 0000 		sts loc_avg+5,r5
 1456 08e8 8093 0000 		sts loc_avg+6,r24
 1457 08ec 7092 0000 		sts loc_avg+7,r7
 111:../../../src/net/pulse_sync/pulse_sync.c **** 
 112:../../../src/net/pulse_sync/pulse_sync.c **** 	// add terms in square containing new mean local time
 113:../../../src/net/pulse_sync/pulse_sync.c **** 	loc_sq_sum += (loc_avg >> 3) * ((int64_t)(new_samples * loc_avg - 2 * loc_sum) >> 3);
 1459               	.LM44:
 1460 08f0 AB80      		ldd r10,Y+3
 1461 08f2 B12C      		mov r11,__zero_reg__
 1462 08f4 C12C      		mov r12,__zero_reg__
 1463 08f6 D12C      		mov r13,__zero_reg__
 1464 08f8 E12C      		mov r14,__zero_reg__
 1465 08fa F12C      		mov r15,__zero_reg__
 1466 08fc 00E0      		ldi r16,0
 1467 08fe 10E0      		ldi r17,0
 1468 0900 5E2F      		mov r21,r30
 1469 0902 B201      		movw r22,r4
 1470 0904 C301      		movw r24,r6
 1471 0906 0E94 0000 		call __muldi3
 1472 090a 4901      		movw r8,r18
 1473 090c FA01      		movw r30,r20
 1474 090e B62F      		mov r27,r22
 1475 0910 A72F      		mov r26,r23
 1476 0912 8D8B      		std Y+21,r24
 1477 0914 9E8B      		std Y+22,r25
 1478 0916 2C81      		ldd r18,Y+4
 1479 0918 3A85      		ldd r19,Y+10
 1480 091a 4B85      		ldd r20,Y+11
 1481 091c 5C85      		ldd r21,Y+12
 1482 091e 6D81      		ldd r22,Y+5
 1483 0920 7E81      		ldd r23,Y+6
 1484 0922 8F81      		ldd r24,Y+7
 1485 0924 9885      		ldd r25,Y+8
 1486 0926 01E0      		ldi r16,lo8(1)
 1487 0928 0E94 0000 		call __ashldi3
 1488 092c 5901      		movw r10,r18
 1489 092e 6A01      		movw r12,r20
 1490 0930 7B01      		movw r14,r22
 1491 0932 8C01      		movw r16,r24
 1492 0934 9401      		movw r18,r8
 1493 0936 AF01      		movw r20,r30
 1494 0938 6B2F      		mov r22,r27
 1495 093a 7A2F      		mov r23,r26
 1496 093c 8D89      		ldd r24,Y+21
 1497 093e 9E89      		ldd r25,Y+22
 1498 0940 0E94 0000 		call __subdi3
 1499 0944 2EA7      		std Y+46,r18
 1500 0946 3FA7      		std Y+47,r19
 1501 0948 48AB      		std Y+48,r20
 1502 094a 59AB      		std Y+49,r21
 1503 094c 6AAB      		std Y+50,r22
 1504 094e 7BAB      		std Y+51,r23
 1505 0950 8CAB      		std Y+52,r24
 1506 0952 9DAB      		std Y+53,r25
 1507 0954 03E0      		ldi r16,lo8(3)
 1508 0956 0E94 0000 		call __ashrdi3
 1509 095a 4901      		movw r8,r18
 1510 095c FA01      		movw r30,r20
 1511 095e B62F      		mov r27,r22
 1512 0960 A72F      		mov r26,r23
 1513 0962 8D8B      		std Y+21,r24
 1514 0964 9E8B      		std Y+22,r25
 1515 0966 2985      		ldd r18,Y+9
 1516 0968 3D85      		ldd r19,Y+13
 1517 096a 4E85      		ldd r20,Y+14
 1518 096c 5F85      		ldd r21,Y+15
 1519 096e B201      		movw r22,r4
 1520 0970 C301      		movw r24,r6
 1521 0972 0E94 0000 		call __lshrdi3
 1522 0976 5901      		movw r10,r18
 1523 0978 6A01      		movw r12,r20
 1524 097a 7B01      		movw r14,r22
 1525 097c 8C01      		movw r16,r24
 1526 097e 9401      		movw r18,r8
 1527 0980 AF01      		movw r20,r30
 1528 0982 6B2F      		mov r22,r27
 1529 0984 7A2F      		mov r23,r26
 1530 0986 8D89      		ldd r24,Y+21
 1531 0988 9E89      		ldd r25,Y+22
 1532 098a 0E94 0000 		call __muldi3
 1533 098e 5901      		movw r10,r18
 1534 0990 6A01      		movw r12,r20
 1535 0992 7B01      		movw r14,r22
 1536 0994 8C01      		movw r16,r24
 1537 0996 6796      		adiw r28,86-63
 1538 0998 2FAD      		ldd r18,Y+63
 1539 099a 6797      		sbiw r28,86-63
 1540 099c 6896      		adiw r28,87-63
 1541 099e 3FAD      		ldd r19,Y+63
 1542 09a0 6897      		sbiw r28,87-63
 1543 09a2 6996      		adiw r28,88-63
 1544 09a4 4FAD      		ldd r20,Y+63
 1545 09a6 6997      		sbiw r28,88-63
 1546 09a8 6A96      		adiw r28,89-63
 1547 09aa 5FAD      		ldd r21,Y+63
 1548 09ac 6A97      		sbiw r28,89-63
 1549 09ae 6B96      		adiw r28,90-63
 1550 09b0 6FAD      		ldd r22,Y+63
 1551 09b2 6B97      		sbiw r28,90-63
 1552 09b4 6C96      		adiw r28,91-63
 1553 09b6 7FAD      		ldd r23,Y+63
 1554 09b8 6C97      		sbiw r28,91-63
 1555 09ba 6D96      		adiw r28,92-63
 1556 09bc 8FAD      		ldd r24,Y+63
 1557 09be 6D97      		sbiw r28,92-63
 1558 09c0 6E96      		adiw r28,93-63
 1559 09c2 9FAD      		ldd r25,Y+63
 1560 09c4 6E97      		sbiw r28,93-63
 1561 09c6 0E94 0000 		call __adddi3
 1562 09ca 2C8B      		std Y+20,r18
 1563 09cc 3D8B      		std Y+21,r19
 1564 09ce 4E8B      		std Y+22,r20
 1565 09d0 5F8B      		std Y+23,r21
 1566 09d2 688F      		std Y+24,r22
 1567 09d4 798F      		std Y+25,r23
 1568 09d6 8A8F      		std Y+26,r24
 1569 09d8 9B8F      		std Y+27,r25
 1570 09da 2093 0000 		sts loc_sq_sum,r18
 1571 09de 3093 0000 		sts loc_sq_sum+1,r19
 1572 09e2 4093 0000 		sts loc_sq_sum+2,r20
 1573 09e6 5093 0000 		sts loc_sq_sum+3,r21
 1574 09ea 6093 0000 		sts loc_sq_sum+4,r22
 1575 09ee 7093 0000 		sts loc_sq_sum+5,r23
 1576 09f2 8093 0000 		sts loc_sq_sum+6,r24
 1577 09f6 9093 0000 		sts loc_sq_sum+7,r25
 114:../../../src/net/pulse_sync/pulse_sync.c **** 
 115:../../../src/net/pulse_sync/pulse_sync.c **** 	//// calculate new mean global-local time offset and offset deviation squared
 116:../../../src/net/pulse_sync/pulse_sync.c **** 	tmp_avg = line_data[curr_ind].glob_time - line_data[curr_ind].loc_time;
 117:../../../src/net/pulse_sync/pulse_sync.c **** 	off_sum += off_time - prev_off;
 1579               	.LM45:
 1580 09fa 2CA5      		ldd r18,Y+44
 1581 09fc 3DA5      		ldd r19,Y+45
 1582 09fe 2996      		adiw r28,72-63
 1583 0a00 4FAD      		ldd r20,Y+63
 1584 0a02 2997      		sbiw r28,72-63
 1585 0a04 2A96      		adiw r28,73-63
 1586 0a06 5FAD      		ldd r21,Y+63
 1587 0a08 2A97      		sbiw r28,73-63
 1588 0a0a 2B96      		adiw r28,74-63
 1589 0a0c 6FAD      		ldd r22,Y+63
 1590 0a0e 2B97      		sbiw r28,74-63
 1591 0a10 2C96      		adiw r28,75-63
 1592 0a12 7FAD      		ldd r23,Y+63
 1593 0a14 2C97      		sbiw r28,75-63
 1594 0a16 2D96      		adiw r28,76-63
 1595 0a18 8FAD      		ldd r24,Y+63
 1596 0a1a 2D97      		sbiw r28,76-63
 1597 0a1c 2E96      		adiw r28,77-63
 1598 0a1e 9FAD      		ldd r25,Y+63
 1599 0a20 2E97      		sbiw r28,77-63
 1600 0a22 AC8C      		ldd r10,Y+28
 1601 0a24 BD8C      		ldd r11,Y+29
 1602 0a26 CE8C      		ldd r12,Y+30
 1603 0a28 DF8C      		ldd r13,Y+31
 1604 0a2a E8A0      		ldd r14,Y+32
 1605 0a2c F9A4      		ldd r15,Y+41
 1606 0a2e 0AA5      		ldd r16,Y+42
 1607 0a30 1BA5      		ldd r17,Y+43
 1608 0a32 0E94 0000 		call __subdi3
 1609 0a36 5901      		movw r10,r18
 1610 0a38 6A01      		movw r12,r20
 1611 0a3a 7B01      		movw r14,r22
 1612 0a3c 8C01      		movw r16,r24
 1613 0a3e 2EA9      		ldd r18,Y+54
 1614 0a40 3FA9      		ldd r19,Y+55
 1615 0a42 48AD      		ldd r20,Y+56
 1616 0a44 59AD      		ldd r21,Y+57
 1617 0a46 6AAD      		ldd r22,Y+58
 1618 0a48 7BAD      		ldd r23,Y+59
 1619 0a4a 8CAD      		ldd r24,Y+60
 1620 0a4c 9DAD      		ldd r25,Y+61
 1621 0a4e 0E94 0000 		call __adddi3
 1622 0a52 2FAB      		std Y+55,r18
 1623 0a54 3C8F      		std Y+28,r19
 1624 0a56 4D8F      		std Y+29,r20
 1625 0a58 5E8F      		std Y+30,r21
 1626 0a5a 6F8F      		std Y+31,r22
 1627 0a5c 78A3      		std Y+32,r23
 1628 0a5e 4C01      		movw r8,r24
 1629 0a60 2093 0000 		sts off_sum,r18
 1630 0a64 3093 0000 		sts off_sum+1,r19
 1631 0a68 4093 0000 		sts off_sum+2,r20
 1632 0a6c 5093 0000 		sts off_sum+3,r21
 1633 0a70 7F8D      		ldd r23,Y+31
 1634 0a72 7093 0000 		sts off_sum+4,r23
 1635 0a76 88A1      		ldd r24,Y+32
 1636 0a78 8093 0000 		sts off_sum+5,r24
 1637 0a7c 8092 0000 		sts off_sum+6,r8
 1638 0a80 9092 0000 		sts off_sum+7,r9
 118:../../../src/net/pulse_sync/pulse_sync.c **** 	tmp_avg = off_sum / new_samples;
 1640               	.LM46:
 1641 0a84 AB80      		ldd r10,Y+3
 1642 0a86 B12C      		mov r11,__zero_reg__
 1643 0a88 C12C      		mov r12,__zero_reg__
 1644 0a8a D12C      		mov r13,__zero_reg__
 1645 0a8c E12C      		mov r14,__zero_reg__
 1646 0a8e F12C      		mov r15,__zero_reg__
 1647 0a90 00E0      		ldi r16,0
 1648 0a92 10E0      		ldi r17,0
 1649 0a94 3C8D      		ldd r19,Y+28
 1650 0a96 672F      		mov r22,r23
 1651 0a98 782F      		mov r23,r24
 1652 0a9a C401      		movw r24,r8
 1653 0a9c 0E94 0000 		call __divdi3
 1654 0aa0 D52E      		mov r13,r21
 1655 0aa2 7B01      		movw r14,r22
 1656 0aa4 082F      		mov r16,r24
 1657 0aa6 C92E      		mov r12,r25
 119:../../../src/net/pulse_sync/pulse_sync.c **** 	tmp_rem = off_sum - new_samples * tmp_avg;
 1659               	.LM47:
 1660 0aa8 8FA9      		ldd r24,Y+55
 1661 0aaa A29E      		mul r10,r18
 1662 0aac 8019      		sub r24,r0
 1663 0aae 1124      		clr __zero_reg__
 120:../../../src/net/pulse_sync/pulse_sync.c **** 	off_avg = tmp_avg + (tmp_rem + new_samples / 2) / new_samples;
 1665               	.LM48:
 1666 0ab0 A889      		ldd r26,Y+16
 1667 0ab2 B989      		ldd r27,Y+17
 1668 0ab4 A80F      		add r26,r24
 1669 0ab6 B11D      		adc r27,__zero_reg__
 1670 0ab8 87FD      		sbrc r24,7
 1671 0aba BA95      		dec r27
 1672 0abc CD01      		movw r24,r26
 1673 0abe 6A89      		ldd r22,Y+18
 1674 0ac0 7B89      		ldd r23,Y+19
 1675 0ac2 0E94 0000 		call __divmodhi4
 1676 0ac6 5B01      		movw r10,r22
 1677 0ac8 1B2D      		mov r17,r11
 1678 0aca 110F      		lsl r17
 1679 0acc 110B      		sbc r17,r17
 1680 0ace 5D2D      		mov r21,r13
 1681 0ad0 B701      		movw r22,r14
 1682 0ad2 802F      		mov r24,r16
 1683 0ad4 9C2D      		mov r25,r12
 1684 0ad6 C12E      		mov r12,r17
 1685 0ad8 D12E      		mov r13,r17
 1686 0ada E12E      		mov r14,r17
 1687 0adc F12E      		mov r15,r17
 1688 0ade 012F      		mov r16,r17
 1689 0ae0 0E94 0000 		call __adddi3
 1690 0ae4 2EAB      		std Y+54,r18
 1691 0ae6 388B      		std Y+16,r19
 1692 0ae8 4A8B      		std Y+18,r20
 1693 0aea 59A7      		std Y+41,r21
 1694 0aec 6AA7      		std Y+42,r22
 1695 0aee 7BA7      		std Y+43,r23
 1696 0af0 8CA7      		std Y+44,r24
 1697 0af2 9DA7      		std Y+45,r25
 1698 0af4 2093 0000 		sts off_avg,r18
 1699 0af8 3093 0000 		sts off_avg+1,r19
 1700 0afc 4093 0000 		sts off_avg+2,r20
 1701 0b00 5093 0000 		sts off_avg+3,r21
 1702 0b04 6093 0000 		sts off_avg+4,r22
 1703 0b08 7093 0000 		sts off_avg+5,r23
 1704 0b0c 8093 0000 		sts off_avg+6,r24
 1705 0b10 9093 0000 		sts off_avg+7,r25
 121:../../../src/net/pulse_sync/pulse_sync.c **** 
 122:../../../src/net/pulse_sync/pulse_sync.c **** 	// add terms to square containing new mean local time and offset
 123:../../../src/net/pulse_sync/pulse_sync.c **** 	off_sq_sum += (off_avg >> 0) * ((new_samples * loc_avg - loc_sum) >> 0) - (loc_avg >> 0) * (off_su
 1707               	.LM49:
 1708 0b14 AFA8      		ldd r10,Y+55
 1709 0b16 BC8C      		ldd r11,Y+28
 1710 0b18 CD8C      		ldd r12,Y+29
 1711 0b1a DE8C      		ldd r13,Y+30
 1712 0b1c EF8C      		ldd r14,Y+31
 1713 0b1e F8A0      		ldd r15,Y+32
 1714 0b20 8401      		movw r16,r8
 1715 0b22 2985      		ldd r18,Y+9
 1716 0b24 3D85      		ldd r19,Y+13
 1717 0b26 4E85      		ldd r20,Y+14
 1718 0b28 5F85      		ldd r21,Y+15
 1719 0b2a B201      		movw r22,r4
 1720 0b2c C301      		movw r24,r6
 1721 0b2e 0E94 0000 		call __muldi3
 1722 0b32 5901      		movw r10,r18
 1723 0b34 6A01      		movw r12,r20
 1724 0b36 7B01      		movw r14,r22
 1725 0b38 8C01      		movw r16,r24
 1726 0b3a 2EAD      		ldd r18,Y+62
 1727 0b3c 3FAD      		ldd r19,Y+63
 1728 0b3e 2196      		adiw r28,64-63
 1729 0b40 4FAD      		ldd r20,Y+63
 1730 0b42 2197      		sbiw r28,64-63
 1731 0b44 2296      		adiw r28,65-63
 1732 0b46 5FAD      		ldd r21,Y+63
 1733 0b48 2297      		sbiw r28,65-63
 1734 0b4a 2396      		adiw r28,66-63
 1735 0b4c 6FAD      		ldd r22,Y+63
 1736 0b4e 2397      		sbiw r28,66-63
 1737 0b50 2496      		adiw r28,67-63
 1738 0b52 7FAD      		ldd r23,Y+63
 1739 0b54 2497      		sbiw r28,67-63
 1740 0b56 6F96      		adiw r28,94-63
 1741 0b58 8FAD      		ldd r24,Y+63
 1742 0b5a 6F97      		sbiw r28,94-63
 1743 0b5c A096      		adiw r28,95-63
 1744 0b5e 9FAD      		ldd r25,Y+63
 1745 0b60 A097      		sbiw r28,95-63
 1746 0b62 0E94 0000 		call __subdi3
 1747 0b66 2987      		std Y+9,r18
 1748 0b68 432E      		mov r4,r19
 1749 0b6a 542E      		mov r5,r20
 1750 0b6c 652E      		mov r6,r21
 1751 0b6e 762E      		mov r7,r22
 1752 0b70 872E      		mov r8,r23
 1753 0b72 982E      		mov r9,r24
 1754 0b74 9D87      		std Y+13,r25
 1755 0b76 2EA5      		ldd r18,Y+46
 1756 0b78 3FA5      		ldd r19,Y+47
 1757 0b7a 48A9      		ldd r20,Y+48
 1758 0b7c 59A9      		ldd r21,Y+49
 1759 0b7e 6AA9      		ldd r22,Y+50
 1760 0b80 7BA9      		ldd r23,Y+51
 1761 0b82 8CA9      		ldd r24,Y+52
 1762 0b84 9DA9      		ldd r25,Y+53
 1763 0b86 AC80      		ldd r10,Y+4
 1764 0b88 BA84      		ldd r11,Y+10
 1765 0b8a CB84      		ldd r12,Y+11
 1766 0b8c DC84      		ldd r13,Y+12
 1767 0b8e ED80      		ldd r14,Y+5
 1768 0b90 FE80      		ldd r15,Y+6
 1769 0b92 0F81      		ldd r16,Y+7
 1770 0b94 1885      		ldd r17,Y+8
 1771 0b96 0E94 0000 		call __adddi3
 1772 0b9a AEA8      		ldd r10,Y+54
 1773 0b9c B888      		ldd r11,Y+16
 1774 0b9e CA88      		ldd r12,Y+18
 1775 0ba0 D9A4      		ldd r13,Y+41
 1776 0ba2 EAA4      		ldd r14,Y+42
 1777 0ba4 FBA4      		ldd r15,Y+43
 1778 0ba6 0CA5      		ldd r16,Y+44
 1779 0ba8 1DA5      		ldd r17,Y+45
 1780 0baa 0E94 0000 		call __muldi3
 1781 0bae 5901      		movw r10,r18
 1782 0bb0 6A01      		movw r12,r20
 1783 0bb2 7B01      		movw r14,r22
 1784 0bb4 8C01      		movw r16,r24
 1785 0bb6 2985      		ldd r18,Y+9
 1786 0bb8 342D      		mov r19,r4
 1787 0bba 452D      		mov r20,r5
 1788 0bbc 562D      		mov r21,r6
 1789 0bbe 672D      		mov r22,r7
 1790 0bc0 782D      		mov r23,r8
 1791 0bc2 892D      		mov r24,r9
 1792 0bc4 9D85      		ldd r25,Y+13
 1793 0bc6 0E94 0000 		call __adddi3
 1794 0bca 2093 0000 		sts off_sq_sum,r18
 1795 0bce 3093 0000 		sts off_sq_sum+1,r19
 1796 0bd2 4093 0000 		sts off_sq_sum+2,r20
 1797 0bd6 5093 0000 		sts off_sq_sum+3,r21
 1798 0bda 6093 0000 		sts off_sq_sum+4,r22
 1799 0bde 7093 0000 		sts off_sq_sum+5,r23
 1800 0be2 8093 0000 		sts off_sq_sum+6,r24
 1801 0be6 9093 0000 		sts off_sq_sum+7,r25
  85:../../../src/net/pulse_sync/pulse_sync.c **** 
 1803               	.LM50:
 1804 0bea 2596      		adiw r28,68-63
 1805 0bec FFAD      		ldd r31,Y+63
 1806 0bee 2597      		sbiw r28,68-63
 1807 0bf0 F093 0000 		sts curr_ind,r31
 124:../../../src/net/pulse_sync/pulse_sync.c **** 
 125:../../../src/net/pulse_sync/pulse_sync.c **** 	//// save new data into next entry in circular buffer
 126:../../../src/net/pulse_sync/pulse_sync.c **** 	curr_ind = next_ind;
 127:../../../src/net/pulse_sync/pulse_sync.c **** 	samples = new_samples;
 1809               	.LM51:
 1810 0bf4 AB81      		ldd r26,Y+3
 1811 0bf6 A093 0000 		sts samples,r26
 128:../../../src/net/pulse_sync/pulse_sync.c **** 	line_data[curr_ind] = (struct sync_point_info){glob_time, loc_time, off_sq_sum, loc_sq_sum};
 1813               	.LM52:
 1814 0bfa 2896      		adiw r28,70-62
 1815 0bfc 0EAD      		ldd r16,Y+62
 1816 0bfe 1FAD      		ldd r17,Y+63
 1817 0c00 2897      		sbiw r28,70-62
 1818 0c02 0050      		subi r16,lo8(-(line_data))
 1819 0c04 1040      		sbci r17,hi8(-(line_data))
 1820 0c06 2F96      		adiw r28,78-63
 1821 0c08 AFAD      		ldd r26,Y+63
 1822 0c0a 2F97      		sbiw r28,78-63
 1823 0c0c F101      		movw r30,r2
 1824 0c0e A083      		st Z,r26
 1825 0c10 6096      		adiw r28,79-63
 1826 0c12 BFAD      		ldd r27,Y+63
 1827 0c14 6097      		sbiw r28,79-63
 1828 0c16 B183      		std Z+1,r27
 1829 0c18 6196      		adiw r28,80-63
 1830 0c1a AFAD      		ldd r26,Y+63
 1831 0c1c 6197      		sbiw r28,80-63
 1832 0c1e A283      		std Z+2,r26
 1833 0c20 6296      		adiw r28,81-63
 1834 0c22 BFAD      		ldd r27,Y+63
 1835 0c24 6297      		sbiw r28,81-63
 1836 0c26 B383      		std Z+3,r27
 1837 0c28 6396      		adiw r28,82-63
 1838 0c2a AFAD      		ldd r26,Y+63
 1839 0c2c 6397      		sbiw r28,82-63
 1840 0c2e A483      		std Z+4,r26
 1841 0c30 6496      		adiw r28,83-63
 1842 0c32 BFAD      		ldd r27,Y+63
 1843 0c34 6497      		sbiw r28,83-63
 1844 0c36 B583      		std Z+5,r27
 1845 0c38 6596      		adiw r28,84-63
 1846 0c3a AFAD      		ldd r26,Y+63
 1847 0c3c 6597      		sbiw r28,84-63
 1848 0c3e A683      		std Z+6,r26
 1849 0c40 6696      		adiw r28,85-63
 1850 0c42 BFAD      		ldd r27,Y+63
 1851 0c44 6697      		sbiw r28,85-63
 1852 0c46 B783      		std Z+7,r27
 1853 0c48 A9A1      		ldd r26,Y+33
 1854 0c4a A087      		std Z+8,r26
 1855 0c4c AAA1      		ldd r26,Y+34
 1856 0c4e E981      		ldd r30,Y+1
 1857 0c50 FA81      		ldd r31,Y+2
 1858 0c52 A183      		std Z+1,r26
 1859 0c54 BBA1      		ldd r27,Y+35
 1860 0c56 B283      		std Z+2,r27
 1861 0c58 ACA1      		ldd r26,Y+36
 1862 0c5a A383      		std Z+3,r26
 1863 0c5c BDA1      		ldd r27,Y+37
 1864 0c5e B483      		std Z+4,r27
 1865 0c60 AEA1      		ldd r26,Y+38
 1866 0c62 A583      		std Z+5,r26
 1867 0c64 BFA1      		ldd r27,Y+39
 1868 0c66 B683      		std Z+6,r27
 1869 0c68 A8A5      		ldd r26,Y+40
 1870 0c6a A783      		std Z+7,r26
 1871 0c6c 7101      		movw r14,r2
 1872 0c6e B0E1      		ldi r27,16
 1873 0c70 EB0E      		add r14,r27
 1874 0c72 F11C      		adc r15,__zero_reg__
 1875 0c74 F101      		movw r30,r2
 1876 0c76 208B      		std Z+16,r18
 1877 0c78 D701      		movw r26,r14
 1878 0c7a 1196      		adiw r26,1
 1879 0c7c 3C93      		st X,r19
 1880 0c7e 1197      		sbiw r26,1
 1881 0c80 1296      		adiw r26,2
 1882 0c82 4C93      		st X,r20
 1883 0c84 1297      		sbiw r26,2
 1884 0c86 1396      		adiw r26,3
 1885 0c88 5C93      		st X,r21
 1886 0c8a 1397      		sbiw r26,3
 1887 0c8c 1496      		adiw r26,4
 1888 0c8e 6C93      		st X,r22
 1889 0c90 1497      		sbiw r26,4
 1890 0c92 1596      		adiw r26,5
 1891 0c94 7C93      		st X,r23
 1892 0c96 1597      		sbiw r26,5
 1893 0c98 1696      		adiw r26,6
 1894 0c9a 8C93      		st X,r24
 1895 0c9c 1697      		sbiw r26,6
 1896 0c9e 1796      		adiw r26,7
 1897 0ca0 9C93      		st X,r25
 1898 0ca2 7896      		adiw r30,24
 1899 0ca4 2C89      		ldd r18,Y+20
 1900 0ca6 D101      		movw r26,r2
 1901 0ca8 5896      		adiw r26,24
 1902 0caa 2C93      		st X,r18
 1903 0cac 3D89      		ldd r19,Y+21
 1904 0cae 3183      		std Z+1,r19
 1905 0cb0 6E89      		ldd r22,Y+22
 1906 0cb2 6283      		std Z+2,r22
 1907 0cb4 7F89      		ldd r23,Y+23
 1908 0cb6 7383      		std Z+3,r23
 1909 0cb8 888D      		ldd r24,Y+24
 1910 0cba 8483      		std Z+4,r24
 1911 0cbc 998D      		ldd r25,Y+25
 1912 0cbe 9583      		std Z+5,r25
 1913 0cc0 AA8D      		ldd r26,Y+26
 1914 0cc2 A683      		std Z+6,r26
 1915 0cc4 BB8D      		ldd r27,Y+27
 1916 0cc6 B783      		std Z+7,r27
 129:../../../src/net/pulse_sync/pulse_sync.c **** 	// set skew to zero if skew fraction undefined
 130:../../../src/net/pulse_sync/pulse_sync.c **** 	if (loc_sq_sum == 0) {
 1918               	.LM53:
 1919 0cc8 AB01      		movw r20,r22
 1920 0cca BC01      		movw r22,r24
 1921 0ccc CD01      		movw r24,r26
 1922 0cce A0E0      		ldi r26,0
 1923 0cd0 0E94 0000 		call __cmpdi2_s8
 1924 0cd4 01F4      		brne .L11
 131:../../../src/net/pulse_sync/pulse_sync.c **** 		line_data[curr_ind].skew_num = 0;
 1926               	.LM54:
 1927 0cd6 D801      		movw r26,r16
 1928 0cd8 5096      		adiw r26,16
 1929 0cda 1C92      		st X,__zero_reg__
 1930 0cdc D701      		movw r26,r14
 1931 0cde 1196      		adiw r26,1
 1932 0ce0 1C92      		st X,__zero_reg__
 1933 0ce2 1197      		sbiw r26,1
 1934 0ce4 1296      		adiw r26,2
 1935 0ce6 1C92      		st X,__zero_reg__
 1936 0ce8 1297      		sbiw r26,2
 1937 0cea 1396      		adiw r26,3
 1938 0cec 1C92      		st X,__zero_reg__
 1939 0cee 1397      		sbiw r26,3
 1940 0cf0 1496      		adiw r26,4
 1941 0cf2 1C92      		st X,__zero_reg__
 1942 0cf4 1497      		sbiw r26,4
 1943 0cf6 1596      		adiw r26,5
 1944 0cf8 1C92      		st X,__zero_reg__
 1945 0cfa 1597      		sbiw r26,5
 1946 0cfc 1696      		adiw r26,6
 1947 0cfe 1C92      		st X,__zero_reg__
 1948 0d00 1697      		sbiw r26,6
 1949 0d02 1796      		adiw r26,7
 1950 0d04 1C92      		st X,__zero_reg__
 132:../../../src/net/pulse_sync/pulse_sync.c **** 		line_data[curr_ind].skew_den = 1;
 1952               	.LM55:
 1953 0d06 81E0      		ldi r24,lo8(1)
 1954 0d08 D801      		movw r26,r16
 1955 0d0a 5896      		adiw r26,24
 1956 0d0c 8C93      		st X,r24
 1957 0d0e 1182      		std Z+1,__zero_reg__
 1958 0d10 1282      		std Z+2,__zero_reg__
 1959 0d12 1382      		std Z+3,__zero_reg__
 1960 0d14 1482      		std Z+4,__zero_reg__
 1961 0d16 1582      		std Z+5,__zero_reg__
 1962 0d18 1682      		std Z+6,__zero_reg__
 1963 0d1a 1782      		std Z+7,__zero_reg__
 1964               	.L11:
 133:../../../src/net/pulse_sync/pulse_sync.c **** 	}
 134:../../../src/net/pulse_sync/pulse_sync.c **** 
 135:../../../src/net/pulse_sync/pulse_sync.c **** 	// unlock skew values
 136:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_post(skew_lock);
 1966               	.LM56:
 1967 0d1c 8091 0000 		lds r24,skew_lock
 1968 0d20 9091 0000 		lds r25,skew_lock+1
 1969               	/* epilogue start */
 137:../../../src/net/pulse_sync/pulse_sync.c **** }
 1971               	.LM57:
 1972 0d24 C15A      		subi r28,-95
 1973 0d26 DF4F      		sbci r29,-1
 1974 0d28 0FB6      		in __tmp_reg__,__SREG__
 1975 0d2a F894      		cli
 1976 0d2c DEBF      		out __SP_H__,r29
 1977 0d2e 0FBE      		out __SREG__,__tmp_reg__
 1978 0d30 CDBF      		out __SP_L__,r28
 1979 0d32 DF91      		pop r29
 1980 0d34 CF91      		pop r28
 1981 0d36 1F91      		pop r17
 1982 0d38 0F91      		pop r16
 1983 0d3a FF90      		pop r15
 1984 0d3c EF90      		pop r14
 1985 0d3e DF90      		pop r13
 1986 0d40 CF90      		pop r12
 1987 0d42 BF90      		pop r11
 1988 0d44 AF90      		pop r10
 1989 0d46 9F90      		pop r9
 1990 0d48 8F90      		pop r8
 1991 0d4a 7F90      		pop r7
 1992 0d4c 6F90      		pop r6
 1993 0d4e 5F90      		pop r5
 1994 0d50 4F90      		pop r4
 1995 0d52 3F90      		pop r3
 1996 0d54 2F90      		pop r2
 136:../../../src/net/pulse_sync/pulse_sync.c **** }
 1998               	.LM58:
 1999 0d56 0C94 0000 		jmp nrk_sem_post
 2004               	.Lscope4:
 2006               		.stabd	78,0,0
 2008               	.global	psync_is_synced
 2010               	psync_is_synced:
 2011               		.stabd	46,0,0
 138:../../../src/net/pulse_sync/pulse_sync.c **** 
 139:../../../src/net/pulse_sync/pulse_sync.c **** /*
 140:../../../src/net/pulse_sync/pulse_sync.c ****  * function to determine if synchronization is complete
 141:../../../src/net/pulse_sync/pulse_sync.c ****  */
 142:../../../src/net/pulse_sync/pulse_sync.c **** uint8_t psync_is_synced() {
 2013               	.LM59:
 2014               	.LFBB5:
 2015               	/* prologue: function */
 2016               	/* frame size = 0 */
 2017               	/* stack size = 0 */
 2018               	.L__stack_usage = 0
 143:../../../src/net/pulse_sync/pulse_sync.c **** 	return samples == MAX_SAMPLES;
 2020               	.LM60:
 2021 0d5a 81E0      		ldi r24,lo8(1)
 2022 0d5c 9091 0000 		lds r25,samples
 2023 0d60 9430      		cpi r25,lo8(4)
 2024 0d62 01F0      		breq .L13
 2025 0d64 80E0      		ldi r24,0
 2026               	.L13:
 144:../../../src/net/pulse_sync/pulse_sync.c **** }
 2028               	.LM61:
 2029 0d66 0895      		ret
 2031               	.Lscope5:
 2033               		.stabd	78,0,0
 2036               	.global	psync_get_time
 2038               	psync_get_time:
 2039               		.stabd	46,0,0
 145:../../../src/net/pulse_sync/pulse_sync.c **** 
 146:../../../src/net/pulse_sync/pulse_sync.c **** /*
 147:../../../src/net/pulse_sync/pulse_sync.c ****  * function to obtain current global time
 148:../../../src/net/pulse_sync/pulse_sync.c ****  */
 149:../../../src/net/pulse_sync/pulse_sync.c **** void psync_get_time(nrk_time_t* global_time) {
 2041               	.LM62:
 2042               	.LFBB6:
 2043 0d68 2F92      		push r2
 2044 0d6a 3F92      		push r3
 2045 0d6c 4F92      		push r4
 2046 0d6e 5F92      		push r5
 2047 0d70 6F92      		push r6
 2048 0d72 7F92      		push r7
 2049 0d74 8F92      		push r8
 2050 0d76 9F92      		push r9
 2051 0d78 AF92      		push r10
 2052 0d7a BF92      		push r11
 2053 0d7c CF92      		push r12
 2054 0d7e DF92      		push r13
 2055 0d80 EF92      		push r14
 2056 0d82 FF92      		push r15
 2057 0d84 0F93      		push r16
 2058 0d86 1F93      		push r17
 2059 0d88 CF93      		push r28
 2060 0d8a DF93      		push r29
 2061 0d8c CDB7      		in r28,__SP_L__
 2062 0d8e DEB7      		in r29,__SP_H__
 2063 0d90 2A97      		sbiw r28,10
 2064 0d92 0FB6      		in __tmp_reg__,__SREG__
 2065 0d94 F894      		cli
 2066 0d96 DEBF      		out __SP_H__,r29
 2067 0d98 0FBE      		out __SREG__,__tmp_reg__
 2068 0d9a CDBF      		out __SP_L__,r28
 2069               	/* prologue: function */
 2070               	/* frame size = 10 */
 2071               	/* stack size = 28 */
 2072               	.L__stack_usage = 28
 2073 0d9c 9A87      		std Y+10,r25
 2074 0d9e 8987      		std Y+9,r24
 150:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_time_get(global_time);
 2076               	.LM63:
 2077 0da0 0E94 0000 		call nrk_time_get
 2078 0da4 E985      		ldd r30,Y+9
 2079 0da6 FA85      		ldd r31,Y+10
 2080 0da8 6081      		ld r22,Z
 2081 0daa 7181      		ldd r23,Z+1
 2082 0dac 8281      		ldd r24,Z+2
 2083 0dae 9381      		ldd r25,Z+3
 2084               	.LBB30:
 2085               	.LBB31:
  61:../../../src/net/pulse_sync/pulse_sync.c **** }
 2087               	.LM64:
 2088 0db0 20E0      		ldi r18,0
 2089 0db2 3AEC      		ldi r19,lo8(-54)
 2090 0db4 4AE9      		ldi r20,lo8(-102)
 2091 0db6 5BE3      		ldi r21,lo8(59)
 2092 0db8 0E94 0000 		call __umulsidi3
 2093 0dbc E985      		ldd r30,Y+9
 2094 0dbe FA85      		ldd r31,Y+10
 2095 0dc0 4480      		ldd r4,Z+4
 2096 0dc2 5580      		ldd r5,Z+5
 2097 0dc4 6680      		ldd r6,Z+6
 2098 0dc6 7780      		ldd r7,Z+7
 2099 0dc8 1201      		movw r2,r4
 2100 0dca 2301      		movw r4,r6
 2101 0dcc 5101      		movw r10,r2
 2102 0dce 6201      		movw r12,r4
 2103 0dd0 E12C      		mov r14,__zero_reg__
 2104 0dd2 F12C      		mov r15,__zero_reg__
 2105 0dd4 00E0      		ldi r16,0
 2106 0dd6 10E0      		ldi r17,0
 2107 0dd8 0E94 0000 		call __adddi3
 2108 0ddc 1901      		movw r2,r18
 2109 0dde 2A01      		movw r4,r20
 2110 0de0 3B01      		movw r6,r22
 2111 0de2 4C01      		movw r8,r24
 2112               	.LBE31:
 2113               	.LBE30:
 151:../../../src/net/pulse_sync/pulse_sync.c **** 	uint64_t full_time = get_full_time(*global_time);
 152:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_pend(skew_lock);
 2115               	.LM65:
 2116 0de4 8091 0000 		lds r24,skew_lock
 2117 0de8 9091 0000 		lds r25,skew_lock+1
 2118 0dec 0E94 0000 		call nrk_sem_pend
 153:../../../src/net/pulse_sync/pulse_sync.c **** 	*global_time = get_pack_time(full_time + off_avg + ((off_sq_sum * (full_time - loc_avg) / loc_sq_s
 2120               	.LM66:
 2121 0df0 9101      		movw r18,r2
 2122 0df2 A201      		movw r20,r4
 2123 0df4 B301      		movw r22,r6
 2124 0df6 C401      		movw r24,r8
 2125 0df8 A090 0000 		lds r10,off_avg
 2126 0dfc B090 0000 		lds r11,off_avg+1
 2127 0e00 C090 0000 		lds r12,off_avg+2
 2128 0e04 D090 0000 		lds r13,off_avg+3
 2129 0e08 E090 0000 		lds r14,off_avg+4
 2130 0e0c F090 0000 		lds r15,off_avg+5
 2131 0e10 0091 0000 		lds r16,off_avg+6
 2132 0e14 1091 0000 		lds r17,off_avg+7
 2133 0e18 0E94 0000 		call __adddi3
 2134 0e1c 2983      		std Y+1,r18
 2135 0e1e 3A83      		std Y+2,r19
 2136 0e20 4B83      		std Y+3,r20
 2137 0e22 5C83      		std Y+4,r21
 2138 0e24 6D83      		std Y+5,r22
 2139 0e26 7E83      		std Y+6,r23
 2140 0e28 8F83      		std Y+7,r24
 2141 0e2a 9887      		std Y+8,r25
 2142 0e2c 9101      		movw r18,r2
 2143 0e2e A201      		movw r20,r4
 2144 0e30 B301      		movw r22,r6
 2145 0e32 C401      		movw r24,r8
 2146 0e34 A090 0000 		lds r10,loc_avg
 2147 0e38 B090 0000 		lds r11,loc_avg+1
 2148 0e3c C090 0000 		lds r12,loc_avg+2
 2149 0e40 D090 0000 		lds r13,loc_avg+3
 2150 0e44 E090 0000 		lds r14,loc_avg+4
 2151 0e48 F090 0000 		lds r15,loc_avg+5
 2152 0e4c 0091 0000 		lds r16,loc_avg+6
 2153 0e50 1091 0000 		lds r17,loc_avg+7
 2154 0e54 0E94 0000 		call __subdi3
 2155 0e58 A090 0000 		lds r10,off_sq_sum
 2156 0e5c B090 0000 		lds r11,off_sq_sum+1
 2157 0e60 C090 0000 		lds r12,off_sq_sum+2
 2158 0e64 D090 0000 		lds r13,off_sq_sum+3
 2159 0e68 E090 0000 		lds r14,off_sq_sum+4
 2160 0e6c F090 0000 		lds r15,off_sq_sum+5
 2161 0e70 0091 0000 		lds r16,off_sq_sum+6
 2162 0e74 1091 0000 		lds r17,off_sq_sum+7
 2163 0e78 0E94 0000 		call __muldi3
 2164 0e7c A090 0000 		lds r10,loc_sq_sum
 2165 0e80 B090 0000 		lds r11,loc_sq_sum+1
 2166 0e84 C090 0000 		lds r12,loc_sq_sum+2
 2167 0e88 D090 0000 		lds r13,loc_sq_sum+3
 2168 0e8c E090 0000 		lds r14,loc_sq_sum+4
 2169 0e90 F090 0000 		lds r15,loc_sq_sum+5
 2170 0e94 0091 0000 		lds r16,loc_sq_sum+6
 2171 0e98 1091 0000 		lds r17,loc_sq_sum+7
 2172 0e9c 0E94 0000 		call __udivdi3
 2173 0ea0 06E0      		ldi r16,lo8(6)
 2174 0ea2 0E94 0000 		call __lshrdi3
 2175 0ea6 5901      		movw r10,r18
 2176 0ea8 6A01      		movw r12,r20
 2177 0eaa 7B01      		movw r14,r22
 2178 0eac 8C01      		movw r16,r24
 2179 0eae 2981      		ldd r18,Y+1
 2180 0eb0 3A81      		ldd r19,Y+2
 2181 0eb2 4B81      		ldd r20,Y+3
 2182 0eb4 5C81      		ldd r21,Y+4
 2183 0eb6 6D81      		ldd r22,Y+5
 2184 0eb8 7E81      		ldd r23,Y+6
 2185 0eba 8F81      		ldd r24,Y+7
 2186 0ebc 9885      		ldd r25,Y+8
 2187 0ebe 0E94 0000 		call __adddi3
 2188 0ec2 1901      		movw r2,r18
 2189 0ec4 2A01      		movw r4,r20
 2190 0ec6 3B01      		movw r6,r22
 2191 0ec8 4C01      		movw r8,r24
 2192               	.LBB32:
 2193               	.LBB33:
  69:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_time.nano_secs = time - 1000000000L * (uint64_t)nrk_time.secs;
 2195               	.LM67:
 2196 0eca A12C      		mov r10,__zero_reg__
 2197 0ecc 8AEC      		ldi r24,lo8(-54)
 2198 0ece B82E      		mov r11,r24
 2199 0ed0 9AE9      		ldi r25,lo8(-102)
 2200 0ed2 C92E      		mov r12,r25
 2201 0ed4 2BE3      		ldi r18,lo8(59)
 2202 0ed6 D22E      		mov r13,r18
 2203 0ed8 E12C      		mov r14,__zero_reg__
 2204 0eda F12C      		mov r15,__zero_reg__
 2205 0edc 00E0      		ldi r16,0
 2206 0ede 10E0      		ldi r17,0
 2207 0ee0 9101      		movw r18,r2
 2208 0ee2 A201      		movw r20,r4
 2209 0ee4 B301      		movw r22,r6
 2210 0ee6 C401      		movw r24,r8
 2211 0ee8 0E94 0000 		call __udivdi3
 2212               	.LBE33:
 2213               	.LBE32:
 2215               	.LM68:
 2216 0eec E985      		ldd r30,Y+9
 2217 0eee FA85      		ldd r31,Y+10
 2218 0ef0 2083      		st Z,r18
 2219 0ef2 3183      		std Z+1,r19
 2220 0ef4 4283      		std Z+2,r20
 2221 0ef6 5383      		std Z+3,r21
 2222               	.LBB35:
 2223               	.LBB34:
  70:../../../src/net/pulse_sync/pulse_sync.c **** 	return nrk_time;
 2225               	.LM69:
 2226 0ef8 60E0      		ldi r22,0
 2227 0efa 7AEC      		ldi r23,lo8(-54)
 2228 0efc 8AE9      		ldi r24,lo8(-102)
 2229 0efe 9BE3      		ldi r25,lo8(59)
 2230 0f00 0E94 0000 		call __mulsi3
 2231 0f04 A201      		movw r20,r4
 2232 0f06 9101      		movw r18,r2
 2233 0f08 261B      		sub r18,r22
 2234 0f0a 370B      		sbc r19,r23
 2235 0f0c 480B      		sbc r20,r24
 2236 0f0e 590B      		sbc r21,r25
 2237               	.LBE34:
 2238               	.LBE35:
 2240               	.LM70:
 2241 0f10 2483      		std Z+4,r18
 2242 0f12 3583      		std Z+5,r19
 2243 0f14 4683      		std Z+6,r20
 2244 0f16 5783      		std Z+7,r21
 154:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_post(skew_lock);
 2246               	.LM71:
 2247 0f18 8091 0000 		lds r24,skew_lock
 2248 0f1c 9091 0000 		lds r25,skew_lock+1
 2249               	/* epilogue start */
 155:../../../src/net/pulse_sync/pulse_sync.c **** }
 2251               	.LM72:
 2252 0f20 2A96      		adiw r28,10
 2253 0f22 0FB6      		in __tmp_reg__,__SREG__
 2254 0f24 F894      		cli
 2255 0f26 DEBF      		out __SP_H__,r29
 2256 0f28 0FBE      		out __SREG__,__tmp_reg__
 2257 0f2a CDBF      		out __SP_L__,r28
 2258 0f2c DF91      		pop r29
 2259 0f2e CF91      		pop r28
 2260 0f30 1F91      		pop r17
 2261 0f32 0F91      		pop r16
 2262 0f34 FF90      		pop r15
 2263 0f36 EF90      		pop r14
 2264 0f38 DF90      		pop r13
 2265 0f3a CF90      		pop r12
 2266 0f3c BF90      		pop r11
 2267 0f3e AF90      		pop r10
 2268 0f40 9F90      		pop r9
 2269 0f42 8F90      		pop r8
 2270 0f44 7F90      		pop r7
 2271 0f46 6F90      		pop r6
 2272 0f48 5F90      		pop r5
 2273 0f4a 4F90      		pop r4
 2274 0f4c 3F90      		pop r3
 2275 0f4e 2F90      		pop r2
 154:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_post(skew_lock);
 2277               	.LM73:
 2278 0f50 0C94 0000 		jmp nrk_sem_post
 2280               	.Lscope6:
 2282               		.stabd	78,0,0
 2286               	.global	psync_local_to_global
 2288               	psync_local_to_global:
 2289               		.stabd	46,0,0
 156:../../../src/net/pulse_sync/pulse_sync.c **** 
 157:../../../src/net/pulse_sync/pulse_sync.c **** /*
 158:../../../src/net/pulse_sync/pulse_sync.c ****  * function to convert a local time to a global time
 159:../../../src/net/pulse_sync/pulse_sync.c ****  */
 160:../../../src/net/pulse_sync/pulse_sync.c **** void psync_local_to_global(nrk_time_t* local_time, nrk_time_t* global_time) {
 2291               	.LM74:
 2292               	.LFBB7:
 2293 0f54 2F92      		push r2
 2294 0f56 3F92      		push r3
 2295 0f58 4F92      		push r4
 2296 0f5a 5F92      		push r5
 2297 0f5c 6F92      		push r6
 2298 0f5e 7F92      		push r7
 2299 0f60 8F92      		push r8
 2300 0f62 9F92      		push r9
 2301 0f64 AF92      		push r10
 2302 0f66 BF92      		push r11
 2303 0f68 CF92      		push r12
 2304 0f6a DF92      		push r13
 2305 0f6c EF92      		push r14
 2306 0f6e FF92      		push r15
 2307 0f70 0F93      		push r16
 2308 0f72 1F93      		push r17
 2309 0f74 CF93      		push r28
 2310 0f76 DF93      		push r29
 2311 0f78 CDB7      		in r28,__SP_L__
 2312 0f7a DEB7      		in r29,__SP_H__
 2313 0f7c 2A97      		sbiw r28,10
 2314 0f7e 0FB6      		in __tmp_reg__,__SREG__
 2315 0f80 F894      		cli
 2316 0f82 DEBF      		out __SP_H__,r29
 2317 0f84 0FBE      		out __SREG__,__tmp_reg__
 2318 0f86 CDBF      		out __SP_L__,r28
 2319               	/* prologue: function */
 2320               	/* frame size = 10 */
 2321               	/* stack size = 28 */
 2322               	.L__stack_usage = 28
 2323 0f88 4C01      		movw r8,r24
 2324 0f8a 7A87      		std Y+10,r23
 2325 0f8c 6987      		std Y+9,r22
 2326 0f8e FC01      		movw r30,r24
 2327 0f90 6081      		ld r22,Z
 2328 0f92 7181      		ldd r23,Z+1
 2329 0f94 8281      		ldd r24,Z+2
 2330 0f96 9381      		ldd r25,Z+3
 2331               	.LBB36:
 2332               	.LBB37:
  61:../../../src/net/pulse_sync/pulse_sync.c **** }
 2334               	.LM75:
 2335 0f98 20E0      		ldi r18,0
 2336 0f9a 3AEC      		ldi r19,lo8(-54)
 2337 0f9c 4AE9      		ldi r20,lo8(-102)
 2338 0f9e 5BE3      		ldi r21,lo8(59)
 2339 0fa0 0E94 0000 		call __umulsidi3
 2340 0fa4 F401      		movw r30,r8
 2341 0fa6 4480      		ldd r4,Z+4
 2342 0fa8 5580      		ldd r5,Z+5
 2343 0faa 6680      		ldd r6,Z+6
 2344 0fac 7780      		ldd r7,Z+7
 2345 0fae 1201      		movw r2,r4
 2346 0fb0 2301      		movw r4,r6
 2347 0fb2 5101      		movw r10,r2
 2348 0fb4 6201      		movw r12,r4
 2349 0fb6 E12C      		mov r14,__zero_reg__
 2350 0fb8 F12C      		mov r15,__zero_reg__
 2351 0fba 00E0      		ldi r16,0
 2352 0fbc 10E0      		ldi r17,0
 2353 0fbe 0E94 0000 		call __adddi3
 2354 0fc2 1901      		movw r2,r18
 2355 0fc4 2A01      		movw r4,r20
 2356 0fc6 3B01      		movw r6,r22
 2357 0fc8 4C01      		movw r8,r24
 2358               	.LBE37:
 2359               	.LBE36:
 161:../../../src/net/pulse_sync/pulse_sync.c **** 	uint64_t loc_time = get_full_time(*local_time);
 162:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_pend(skew_lock);
 2361               	.LM76:
 2362 0fca 8091 0000 		lds r24,skew_lock
 2363 0fce 9091 0000 		lds r25,skew_lock+1
 2364 0fd2 0E94 0000 		call nrk_sem_pend
 163:../../../src/net/pulse_sync/pulse_sync.c **** 	*global_time = get_pack_time(loc_time + off_avg + ((off_sq_sum * (loc_time - loc_avg) / loc_sq_sum
 2366               	.LM77:
 2367 0fd6 9101      		movw r18,r2
 2368 0fd8 A201      		movw r20,r4
 2369 0fda B301      		movw r22,r6
 2370 0fdc C401      		movw r24,r8
 2371 0fde A090 0000 		lds r10,off_avg
 2372 0fe2 B090 0000 		lds r11,off_avg+1
 2373 0fe6 C090 0000 		lds r12,off_avg+2
 2374 0fea D090 0000 		lds r13,off_avg+3
 2375 0fee E090 0000 		lds r14,off_avg+4
 2376 0ff2 F090 0000 		lds r15,off_avg+5
 2377 0ff6 0091 0000 		lds r16,off_avg+6
 2378 0ffa 1091 0000 		lds r17,off_avg+7
 2379 0ffe 0E94 0000 		call __adddi3
 2380 1002 2983      		std Y+1,r18
 2381 1004 3A83      		std Y+2,r19
 2382 1006 4B83      		std Y+3,r20
 2383 1008 5C83      		std Y+4,r21
 2384 100a 6D83      		std Y+5,r22
 2385 100c 7E83      		std Y+6,r23
 2386 100e 8F83      		std Y+7,r24
 2387 1010 9887      		std Y+8,r25
 2388 1012 9101      		movw r18,r2
 2389 1014 A201      		movw r20,r4
 2390 1016 B301      		movw r22,r6
 2391 1018 C401      		movw r24,r8
 2392 101a A090 0000 		lds r10,loc_avg
 2393 101e B090 0000 		lds r11,loc_avg+1
 2394 1022 C090 0000 		lds r12,loc_avg+2
 2395 1026 D090 0000 		lds r13,loc_avg+3
 2396 102a E090 0000 		lds r14,loc_avg+4
 2397 102e F090 0000 		lds r15,loc_avg+5
 2398 1032 0091 0000 		lds r16,loc_avg+6
 2399 1036 1091 0000 		lds r17,loc_avg+7
 2400 103a 0E94 0000 		call __subdi3
 2401 103e A090 0000 		lds r10,off_sq_sum
 2402 1042 B090 0000 		lds r11,off_sq_sum+1
 2403 1046 C090 0000 		lds r12,off_sq_sum+2
 2404 104a D090 0000 		lds r13,off_sq_sum+3
 2405 104e E090 0000 		lds r14,off_sq_sum+4
 2406 1052 F090 0000 		lds r15,off_sq_sum+5
 2407 1056 0091 0000 		lds r16,off_sq_sum+6
 2408 105a 1091 0000 		lds r17,off_sq_sum+7
 2409 105e 0E94 0000 		call __muldi3
 2410 1062 A090 0000 		lds r10,loc_sq_sum
 2411 1066 B090 0000 		lds r11,loc_sq_sum+1
 2412 106a C090 0000 		lds r12,loc_sq_sum+2
 2413 106e D090 0000 		lds r13,loc_sq_sum+3
 2414 1072 E090 0000 		lds r14,loc_sq_sum+4
 2415 1076 F090 0000 		lds r15,loc_sq_sum+5
 2416 107a 0091 0000 		lds r16,loc_sq_sum+6
 2417 107e 1091 0000 		lds r17,loc_sq_sum+7
 2418 1082 0E94 0000 		call __udivdi3
 2419 1086 06E0      		ldi r16,lo8(6)
 2420 1088 0E94 0000 		call __lshrdi3
 2421 108c 5901      		movw r10,r18
 2422 108e 6A01      		movw r12,r20
 2423 1090 7B01      		movw r14,r22
 2424 1092 8C01      		movw r16,r24
 2425 1094 2981      		ldd r18,Y+1
 2426 1096 3A81      		ldd r19,Y+2
 2427 1098 4B81      		ldd r20,Y+3
 2428 109a 5C81      		ldd r21,Y+4
 2429 109c 6D81      		ldd r22,Y+5
 2430 109e 7E81      		ldd r23,Y+6
 2431 10a0 8F81      		ldd r24,Y+7
 2432 10a2 9885      		ldd r25,Y+8
 2433 10a4 0E94 0000 		call __adddi3
 2434 10a8 1901      		movw r2,r18
 2435 10aa 2A01      		movw r4,r20
 2436 10ac 3B01      		movw r6,r22
 2437 10ae 4C01      		movw r8,r24
 2438               	.LBB38:
 2439               	.LBB39:
  69:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_time.nano_secs = time - 1000000000L * (uint64_t)nrk_time.secs;
 2441               	.LM78:
 2442 10b0 A12C      		mov r10,__zero_reg__
 2443 10b2 8AEC      		ldi r24,lo8(-54)
 2444 10b4 B82E      		mov r11,r24
 2445 10b6 9AE9      		ldi r25,lo8(-102)
 2446 10b8 C92E      		mov r12,r25
 2447 10ba 2BE3      		ldi r18,lo8(59)
 2448 10bc D22E      		mov r13,r18
 2449 10be E12C      		mov r14,__zero_reg__
 2450 10c0 F12C      		mov r15,__zero_reg__
 2451 10c2 00E0      		ldi r16,0
 2452 10c4 10E0      		ldi r17,0
 2453 10c6 9101      		movw r18,r2
 2454 10c8 A201      		movw r20,r4
 2455 10ca B301      		movw r22,r6
 2456 10cc C401      		movw r24,r8
 2457 10ce 0E94 0000 		call __udivdi3
 2458               	.LBE39:
 2459               	.LBE38:
 2461               	.LM79:
 2462 10d2 E985      		ldd r30,Y+9
 2463 10d4 FA85      		ldd r31,Y+10
 2464 10d6 2083      		st Z,r18
 2465 10d8 3183      		std Z+1,r19
 2466 10da 4283      		std Z+2,r20
 2467 10dc 5383      		std Z+3,r21
 2468               	.LBB41:
 2469               	.LBB40:
  70:../../../src/net/pulse_sync/pulse_sync.c **** 	return nrk_time;
 2471               	.LM80:
 2472 10de 60E0      		ldi r22,0
 2473 10e0 7AEC      		ldi r23,lo8(-54)
 2474 10e2 8AE9      		ldi r24,lo8(-102)
 2475 10e4 9BE3      		ldi r25,lo8(59)
 2476 10e6 0E94 0000 		call __mulsi3
 2477 10ea A201      		movw r20,r4
 2478 10ec 9101      		movw r18,r2
 2479 10ee 261B      		sub r18,r22
 2480 10f0 370B      		sbc r19,r23
 2481 10f2 480B      		sbc r20,r24
 2482 10f4 590B      		sbc r21,r25
 2483               	.LBE40:
 2484               	.LBE41:
 2486               	.LM81:
 2487 10f6 2483      		std Z+4,r18
 2488 10f8 3583      		std Z+5,r19
 2489 10fa 4683      		std Z+6,r20
 2490 10fc 5783      		std Z+7,r21
 164:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_post(skew_lock);
 2492               	.LM82:
 2493 10fe 8091 0000 		lds r24,skew_lock
 2494 1102 9091 0000 		lds r25,skew_lock+1
 2495               	/* epilogue start */
 165:../../../src/net/pulse_sync/pulse_sync.c **** }
 2497               	.LM83:
 2498 1106 2A96      		adiw r28,10
 2499 1108 0FB6      		in __tmp_reg__,__SREG__
 2500 110a F894      		cli
 2501 110c DEBF      		out __SP_H__,r29
 2502 110e 0FBE      		out __SREG__,__tmp_reg__
 2503 1110 CDBF      		out __SP_L__,r28
 2504 1112 DF91      		pop r29
 2505 1114 CF91      		pop r28
 2506 1116 1F91      		pop r17
 2507 1118 0F91      		pop r16
 2508 111a FF90      		pop r15
 2509 111c EF90      		pop r14
 2510 111e DF90      		pop r13
 2511 1120 CF90      		pop r12
 2512 1122 BF90      		pop r11
 2513 1124 AF90      		pop r10
 2514 1126 9F90      		pop r9
 2515 1128 8F90      		pop r8
 2516 112a 7F90      		pop r7
 2517 112c 6F90      		pop r6
 2518 112e 5F90      		pop r5
 2519 1130 4F90      		pop r4
 2520 1132 3F90      		pop r3
 2521 1134 2F90      		pop r2
 164:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_post(skew_lock);
 2523               	.LM84:
 2524 1136 0C94 0000 		jmp nrk_sem_post
 2526               	.Lscope7:
 2528               		.stabd	78,0,0
 2532               	.global	psync_global_to_local
 2534               	psync_global_to_local:
 2535               		.stabd	46,0,0
 166:../../../src/net/pulse_sync/pulse_sync.c **** 
 167:../../../src/net/pulse_sync/pulse_sync.c **** /*
 168:../../../src/net/pulse_sync/pulse_sync.c ****  * function to convert a global time to a local time
 169:../../../src/net/pulse_sync/pulse_sync.c ****  */
 170:../../../src/net/pulse_sync/pulse_sync.c **** void psync_global_to_local(nrk_time_t* global_time, nrk_time_t* local_time) {
 2537               	.LM85:
 2538               	.LFBB8:
 2539 113a 2F92      		push r2
 2540 113c 3F92      		push r3
 2541 113e 4F92      		push r4
 2542 1140 5F92      		push r5
 2543 1142 6F92      		push r6
 2544 1144 7F92      		push r7
 2545 1146 8F92      		push r8
 2546 1148 9F92      		push r9
 2547 114a AF92      		push r10
 2548 114c BF92      		push r11
 2549 114e CF92      		push r12
 2550 1150 DF92      		push r13
 2551 1152 EF92      		push r14
 2552 1154 FF92      		push r15
 2553 1156 0F93      		push r16
 2554 1158 1F93      		push r17
 2555 115a CF93      		push r28
 2556 115c DF93      		push r29
 2557 115e 00D0      		rcall .
 2558 1160 00D0      		rcall .
 2559 1162 00D0      		rcall .
 2560 1164 CDB7      		in r28,__SP_L__
 2561 1166 DEB7      		in r29,__SP_H__
 2562               	/* prologue: function */
 2563               	/* frame size = 6 */
 2564               	/* stack size = 24 */
 2565               	.L__stack_usage = 24
 2566 1168 7E83      		std Y+6,r23
 2567 116a 6D83      		std Y+5,r22
 2568 116c FC01      		movw r30,r24
 2569 116e 2081      		ld r18,Z
 2570 1170 3181      		ldd r19,Z+1
 2571 1172 4281      		ldd r20,Z+2
 2572 1174 5381      		ldd r21,Z+3
 2573 1176 2983      		std Y+1,r18
 2574 1178 3A83      		std Y+2,r19
 2575 117a 4B83      		std Y+3,r20
 2576 117c 5C83      		std Y+4,r21
 2577               	.LBB42:
 2578               	.LBB43:
  61:../../../src/net/pulse_sync/pulse_sync.c **** }
 2580               	.LM86:
 2581 117e 8481      		ldd r24,Z+4
 2582 1180 9581      		ldd r25,Z+5
 2583 1182 A681      		ldd r26,Z+6
 2584 1184 B781      		ldd r27,Z+7
 2585 1186 2C01      		movw r4,r24
 2586 1188 3D01      		movw r6,r26
 2587               	.LBE43:
 2588               	.LBE42:
 171:../../../src/net/pulse_sync/pulse_sync.c **** 	uint64_t glob_time = get_full_time(*global_time);
 172:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_pend(skew_lock);
 2590               	.LM87:
 2591 118a 8091 0000 		lds r24,skew_lock
 2592 118e 9091 0000 		lds r25,skew_lock+1
 2593 1192 0E94 0000 		call nrk_sem_pend
 2594 1196 9201      		movw r18,r4
 2595 1198 A301      		movw r20,r6
 2596 119a 60E0      		ldi r22,0
 2597 119c 70E0      		ldi r23,0
 2598 119e 80E0      		ldi r24,0
 2599 11a0 90E0      		ldi r25,0
 2600 11a2 A090 0000 		lds r10,off_avg
 2601 11a6 B090 0000 		lds r11,off_avg+1
 2602 11aa C090 0000 		lds r12,off_avg+2
 2603 11ae D090 0000 		lds r13,off_avg+3
 2604 11b2 E090 0000 		lds r14,off_avg+4
 2605 11b6 F090 0000 		lds r15,off_avg+5
 2606 11ba 0091 0000 		lds r16,off_avg+6
 2607 11be 1091 0000 		lds r17,off_avg+7
 2608 11c2 0E94 0000 		call __subdi3
 2609 11c6 5901      		movw r10,r18
 2610 11c8 6A01      		movw r12,r20
 2611 11ca 1B01      		movw r2,r22
 2612 11cc 4C01      		movw r8,r24
 2613               	.LBB45:
 2614               	.LBB44:
  61:../../../src/net/pulse_sync/pulse_sync.c **** }
 2616               	.LM88:
 2617 11ce 6981      		ldd r22,Y+1
 2618 11d0 7A81      		ldd r23,Y+2
 2619 11d2 8B81      		ldd r24,Y+3
 2620 11d4 9C81      		ldd r25,Y+4
 2621 11d6 20E0      		ldi r18,0
 2622 11d8 3AEC      		ldi r19,lo8(-54)
 2623 11da 4AE9      		ldi r20,lo8(-102)
 2624 11dc 5BE3      		ldi r21,lo8(59)
 2625 11de 0E94 0000 		call __umulsidi3
 2626 11e2 B22F      		mov r27,r18
 2627 11e4 A32F      		mov r26,r19
 2628 11e6 F42F      		mov r31,r20
 2629 11e8 E52F      		mov r30,r21
 2630 11ea 7B01      		movw r14,r22
 2631 11ec 8C01      		movw r16,r24
 2632               	.LBE44:
 2633               	.LBE45:
 173:../../../src/net/pulse_sync/pulse_sync.c **** 	uint64_t approx_loc = glob_time - off_avg;
 2635               	.LM89:
 2636 11ee 9501      		movw r18,r10
 2637 11f0 A601      		movw r20,r12
 2638 11f2 B101      		movw r22,r2
 2639 11f4 C401      		movw r24,r8
 2640 11f6 AB2E      		mov r10,r27
 2641 11f8 BA2E      		mov r11,r26
 2642 11fa CF2E      		mov r12,r31
 2643 11fc DE2E      		mov r13,r30
 2644 11fe 0E94 0000 		call __adddi3
 2645 1202 1901      		movw r2,r18
 2646 1204 2A01      		movw r4,r20
 2647 1206 3B01      		movw r6,r22
 2648 1208 4C01      		movw r8,r24
 174:../../../src/net/pulse_sync/pulse_sync.c **** 	*local_time = get_pack_time(approx_loc - ((off_sq_sum * (approx_loc - loc_avg) / loc_sq_sum) >> 6)
 2650               	.LM90:
 2651 120a A090 0000 		lds r10,loc_avg
 2652 120e B090 0000 		lds r11,loc_avg+1
 2653 1212 C090 0000 		lds r12,loc_avg+2
 2654 1216 D090 0000 		lds r13,loc_avg+3
 2655 121a E090 0000 		lds r14,loc_avg+4
 2656 121e F090 0000 		lds r15,loc_avg+5
 2657 1222 0091 0000 		lds r16,loc_avg+6
 2658 1226 1091 0000 		lds r17,loc_avg+7
 2659 122a 0E94 0000 		call __subdi3
 2660 122e A090 0000 		lds r10,off_sq_sum
 2661 1232 B090 0000 		lds r11,off_sq_sum+1
 2662 1236 C090 0000 		lds r12,off_sq_sum+2
 2663 123a D090 0000 		lds r13,off_sq_sum+3
 2664 123e E090 0000 		lds r14,off_sq_sum+4
 2665 1242 F090 0000 		lds r15,off_sq_sum+5
 2666 1246 0091 0000 		lds r16,off_sq_sum+6
 2667 124a 1091 0000 		lds r17,off_sq_sum+7
 2668 124e 0E94 0000 		call __muldi3
 2669 1252 A090 0000 		lds r10,loc_sq_sum
 2670 1256 B090 0000 		lds r11,loc_sq_sum+1
 2671 125a C090 0000 		lds r12,loc_sq_sum+2
 2672 125e D090 0000 		lds r13,loc_sq_sum+3
 2673 1262 E090 0000 		lds r14,loc_sq_sum+4
 2674 1266 F090 0000 		lds r15,loc_sq_sum+5
 2675 126a 0091 0000 		lds r16,loc_sq_sum+6
 2676 126e 1091 0000 		lds r17,loc_sq_sum+7
 2677 1272 0E94 0000 		call __udivdi3
 2678 1276 06E0      		ldi r16,lo8(6)
 2679 1278 0E94 0000 		call __lshrdi3
 2680 127c 5901      		movw r10,r18
 2681 127e 6A01      		movw r12,r20
 2682 1280 7B01      		movw r14,r22
 2683 1282 8C01      		movw r16,r24
 2684 1284 9101      		movw r18,r2
 2685 1286 A201      		movw r20,r4
 2686 1288 B301      		movw r22,r6
 2687 128a C401      		movw r24,r8
 2688 128c 0E94 0000 		call __subdi3
 2689 1290 1901      		movw r2,r18
 2690 1292 2A01      		movw r4,r20
 2691 1294 3B01      		movw r6,r22
 2692 1296 4C01      		movw r8,r24
 2693               	.LBB46:
 2694               	.LBB47:
  69:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_time.nano_secs = time - 1000000000L * (uint64_t)nrk_time.secs;
 2696               	.LM91:
 2697 1298 A12C      		mov r10,__zero_reg__
 2698 129a 8AEC      		ldi r24,lo8(-54)
 2699 129c B82E      		mov r11,r24
 2700 129e 9AE9      		ldi r25,lo8(-102)
 2701 12a0 C92E      		mov r12,r25
 2702 12a2 2BE3      		ldi r18,lo8(59)
 2703 12a4 D22E      		mov r13,r18
 2704 12a6 E12C      		mov r14,__zero_reg__
 2705 12a8 F12C      		mov r15,__zero_reg__
 2706 12aa 00E0      		ldi r16,0
 2707 12ac 10E0      		ldi r17,0
 2708 12ae 9101      		movw r18,r2
 2709 12b0 A201      		movw r20,r4
 2710 12b2 B301      		movw r22,r6
 2711 12b4 C401      		movw r24,r8
 2712 12b6 0E94 0000 		call __udivdi3
 2713               	.LBE47:
 2714               	.LBE46:
 2716               	.LM92:
 2717 12ba ED81      		ldd r30,Y+5
 2718 12bc FE81      		ldd r31,Y+6
 2719 12be 2083      		st Z,r18
 2720 12c0 3183      		std Z+1,r19
 2721 12c2 4283      		std Z+2,r20
 2722 12c4 5383      		std Z+3,r21
 2723               	.LBB49:
 2724               	.LBB48:
  70:../../../src/net/pulse_sync/pulse_sync.c **** 	return nrk_time;
 2726               	.LM93:
 2727 12c6 60E0      		ldi r22,0
 2728 12c8 7AEC      		ldi r23,lo8(-54)
 2729 12ca 8AE9      		ldi r24,lo8(-102)
 2730 12cc 9BE3      		ldi r25,lo8(59)
 2731 12ce 0E94 0000 		call __mulsi3
 2732 12d2 A201      		movw r20,r4
 2733 12d4 9101      		movw r18,r2
 2734 12d6 261B      		sub r18,r22
 2735 12d8 370B      		sbc r19,r23
 2736 12da 480B      		sbc r20,r24
 2737 12dc 590B      		sbc r21,r25
 2738               	.LBE48:
 2739               	.LBE49:
 2741               	.LM94:
 2742 12de 2483      		std Z+4,r18
 2743 12e0 3583      		std Z+5,r19
 2744 12e2 4683      		std Z+6,r20
 2745 12e4 5783      		std Z+7,r21
 175:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_post(skew_lock);
 2747               	.LM95:
 2748 12e6 8091 0000 		lds r24,skew_lock
 2749 12ea 9091 0000 		lds r25,skew_lock+1
 2750               	/* epilogue start */
 176:../../../src/net/pulse_sync/pulse_sync.c **** }
 2752               	.LM96:
 2753 12ee 2696      		adiw r28,6
 2754 12f0 0FB6      		in __tmp_reg__,__SREG__
 2755 12f2 F894      		cli
 2756 12f4 DEBF      		out __SP_H__,r29
 2757 12f6 0FBE      		out __SREG__,__tmp_reg__
 2758 12f8 CDBF      		out __SP_L__,r28
 2759 12fa DF91      		pop r29
 2760 12fc CF91      		pop r28
 2761 12fe 1F91      		pop r17
 2762 1300 0F91      		pop r16
 2763 1302 FF90      		pop r15
 2764 1304 EF90      		pop r14
 2765 1306 DF90      		pop r13
 2766 1308 CF90      		pop r12
 2767 130a BF90      		pop r11
 2768 130c AF90      		pop r10
 2769 130e 9F90      		pop r9
 2770 1310 8F90      		pop r8
 2771 1312 7F90      		pop r7
 2772 1314 6F90      		pop r6
 2773 1316 5F90      		pop r5
 2774 1318 4F90      		pop r4
 2775 131a 3F90      		pop r3
 2776 131c 2F90      		pop r2
 175:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_post(skew_lock);
 2778               	.LM97:
 2779 131e 0C94 0000 		jmp nrk_sem_post
 2781               	.Lscope8:
 2783               		.stabd	78,0,0
 2787               	.global	psync_local_diff
 2789               	psync_local_diff:
 2790               		.stabd	46,0,0
 177:../../../src/net/pulse_sync/pulse_sync.c **** 
 178:../../../src/net/pulse_sync/pulse_sync.c **** /* 
 179:../../../src/net/pulse_sync/pulse_sync.c ****  * function to obtain local time difference from global time difference
 180:../../../src/net/pulse_sync/pulse_sync.c ****  */
 181:../../../src/net/pulse_sync/pulse_sync.c **** void psync_local_diff(nrk_time_t* glob_diff, nrk_time_t* loc_diff) {
 2792               	.LM98:
 2793               	.LFBB9:
 2794 1322 2F92      		push r2
 2795 1324 3F92      		push r3
 2796 1326 4F92      		push r4
 2797 1328 5F92      		push r5
 2798 132a 6F92      		push r6
 2799 132c 7F92      		push r7
 2800 132e 8F92      		push r8
 2801 1330 9F92      		push r9
 2802 1332 AF92      		push r10
 2803 1334 BF92      		push r11
 2804 1336 CF92      		push r12
 2805 1338 DF92      		push r13
 2806 133a EF92      		push r14
 2807 133c FF92      		push r15
 2808 133e 0F93      		push r16
 2809 1340 1F93      		push r17
 2810 1342 CF93      		push r28
 2811 1344 DF93      		push r29
 2812               	/* prologue: function */
 2813               	/* frame size = 0 */
 2814               	/* stack size = 18 */
 2815               	.L__stack_usage = 18
 2816 1346 8C01      		movw r16,r24
 2817 1348 EB01      		movw r28,r22
 2818 134a FC01      		movw r30,r24
 2819 134c 6081      		ld r22,Z
 2820 134e 7181      		ldd r23,Z+1
 2821 1350 8281      		ldd r24,Z+2
 2822 1352 9381      		ldd r25,Z+3
 2823               	.LBB50:
 2824               	.LBB51:
  61:../../../src/net/pulse_sync/pulse_sync.c **** }
 2826               	.LM99:
 2827 1354 20E0      		ldi r18,0
 2828 1356 3AEC      		ldi r19,lo8(-54)
 2829 1358 4AE9      		ldi r20,lo8(-102)
 2830 135a 5BE3      		ldi r21,lo8(59)
 2831 135c 0E94 0000 		call __umulsidi3
 2832 1360 F801      		movw r30,r16
 2833 1362 4480      		ldd r4,Z+4
 2834 1364 5580      		ldd r5,Z+5
 2835 1366 6680      		ldd r6,Z+6
 2836 1368 7780      		ldd r7,Z+7
 2837 136a 1201      		movw r2,r4
 2838 136c 2301      		movw r4,r6
 2839 136e 5101      		movw r10,r2
 2840 1370 6201      		movw r12,r4
 2841 1372 E12C      		mov r14,__zero_reg__
 2842 1374 F12C      		mov r15,__zero_reg__
 2843 1376 00E0      		ldi r16,0
 2844 1378 10E0      		ldi r17,0
 2845 137a 0E94 0000 		call __adddi3
 2846 137e 1901      		movw r2,r18
 2847 1380 2A01      		movw r4,r20
 2848 1382 3B01      		movw r6,r22
 2849 1384 4C01      		movw r8,r24
 2850               	.LBE51:
 2851               	.LBE50:
 182:../../../src/net/pulse_sync/pulse_sync.c **** 	uint64_t g_diff = get_full_time(*glob_diff);
 183:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_pend(skew_lock);
 2853               	.LM100:
 2854 1386 8091 0000 		lds r24,skew_lock
 2855 138a 9091 0000 		lds r25,skew_lock+1
 2856 138e 0E94 0000 		call nrk_sem_pend
 184:../../../src/net/pulse_sync/pulse_sync.c **** 	int64_t skew_inv = off_sq_sum > 0 ? ~(loc_sq_sum / off_sq_sum) + 1 : loc_sq_sum / (~off_sq_sum + 1
 2858               	.LM101:
 2859 1392 A090 0000 		lds r10,off_sq_sum
 2860 1396 B090 0000 		lds r11,off_sq_sum+1
 2861 139a C090 0000 		lds r12,off_sq_sum+2
 2862 139e D090 0000 		lds r13,off_sq_sum+3
 2863 13a2 E090 0000 		lds r14,off_sq_sum+4
 2864 13a6 F090 0000 		lds r15,off_sq_sum+5
 2865 13aa 0091 0000 		lds r16,off_sq_sum+6
 2866 13ae 1091 0000 		lds r17,off_sq_sum+7
 2867 13b2 9501      		movw r18,r10
 2868 13b4 A601      		movw r20,r12
 2869 13b6 B701      		movw r22,r14
 2870 13b8 C801      		movw r24,r16
 2871 13ba A0E0      		ldi r26,0
 2872 13bc 0E94 0000 		call __cmpdi2_s8
 2873 13c0 01F0      		breq .L21
 2874 13c2 04F0      		brlt .L21
 2876               	.LM102:
 2877 13c4 2091 0000 		lds r18,loc_sq_sum
 2878 13c8 3091 0000 		lds r19,loc_sq_sum+1
 2879 13cc 4091 0000 		lds r20,loc_sq_sum+2
 2880 13d0 5091 0000 		lds r21,loc_sq_sum+3
 2881 13d4 6091 0000 		lds r22,loc_sq_sum+4
 2882 13d8 7091 0000 		lds r23,loc_sq_sum+5
 2883 13dc 8091 0000 		lds r24,loc_sq_sum+6
 2884 13e0 9091 0000 		lds r25,loc_sq_sum+7
 2885 13e4 0E94 0000 		call __udivdi3
 2886 13e8 0E94 0000 		call __negdi2
 2887 13ec 00C0      		rjmp .L22
 2888               	.L21:
 2890               	.LM103:
 2891 13ee 9501      		movw r18,r10
 2892 13f0 A601      		movw r20,r12
 2893 13f2 B701      		movw r22,r14
 2894 13f4 C801      		movw r24,r16
 2895 13f6 0E94 0000 		call __negdi2
 2896 13fa 5901      		movw r10,r18
 2897 13fc 6A01      		movw r12,r20
 2898 13fe 7B01      		movw r14,r22
 2899 1400 8C01      		movw r16,r24
 2900 1402 2091 0000 		lds r18,loc_sq_sum
 2901 1406 3091 0000 		lds r19,loc_sq_sum+1
 2902 140a 4091 0000 		lds r20,loc_sq_sum+2
 2903 140e 5091 0000 		lds r21,loc_sq_sum+3
 2904 1412 6091 0000 		lds r22,loc_sq_sum+4
 2905 1416 7091 0000 		lds r23,loc_sq_sum+5
 2906 141a 8091 0000 		lds r24,loc_sq_sum+6
 2907 141e 9091 0000 		lds r25,loc_sq_sum+7
 2908 1422 0E94 0000 		call __udivdi3
 2909               	.L22:
 185:../../../src/net/pulse_sync/pulse_sync.c **** 	*loc_diff = get_pack_time(g_diff + (int64_t)(g_diff / (skew_inv << 6)));
 2911               	.LM104:
 2912 1426 06E0      		ldi r16,lo8(6)
 2913 1428 0E94 0000 		call __ashldi3
 2914 142c 5901      		movw r10,r18
 2915 142e 6A01      		movw r12,r20
 2916 1430 7B01      		movw r14,r22
 2917 1432 8C01      		movw r16,r24
 2918 1434 9101      		movw r18,r2
 2919 1436 A201      		movw r20,r4
 2920 1438 B301      		movw r22,r6
 2921 143a C401      		movw r24,r8
 2922 143c 0E94 0000 		call __udivdi3
 2923 1440 5101      		movw r10,r2
 2924 1442 6201      		movw r12,r4
 2925 1444 7301      		movw r14,r6
 2926 1446 8401      		movw r16,r8
 2927 1448 0E94 0000 		call __adddi3
 2928 144c 1901      		movw r2,r18
 2929 144e 2A01      		movw r4,r20
 2930 1450 3B01      		movw r6,r22
 2931 1452 4C01      		movw r8,r24
 2932               	.LBB52:
 2933               	.LBB53:
  69:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_time.nano_secs = time - 1000000000L * (uint64_t)nrk_time.secs;
 2935               	.LM105:
 2936 1454 A12C      		mov r10,__zero_reg__
 2937 1456 8AEC      		ldi r24,lo8(-54)
 2938 1458 B82E      		mov r11,r24
 2939 145a 9AE9      		ldi r25,lo8(-102)
 2940 145c C92E      		mov r12,r25
 2941 145e 2BE3      		ldi r18,lo8(59)
 2942 1460 D22E      		mov r13,r18
 2943 1462 E12C      		mov r14,__zero_reg__
 2944 1464 F12C      		mov r15,__zero_reg__
 2945 1466 00E0      		ldi r16,0
 2946 1468 10E0      		ldi r17,0
 2947 146a 9101      		movw r18,r2
 2948 146c A201      		movw r20,r4
 2949 146e B301      		movw r22,r6
 2950 1470 C401      		movw r24,r8
 2951 1472 0E94 0000 		call __udivdi3
 2952               	.LBE53:
 2953               	.LBE52:
 2955               	.LM106:
 2956 1476 2883      		st Y,r18
 2957 1478 3983      		std Y+1,r19
 2958 147a 4A83      		std Y+2,r20
 2959 147c 5B83      		std Y+3,r21
 2960               	.LBB55:
 2961               	.LBB54:
  70:../../../src/net/pulse_sync/pulse_sync.c **** 	return nrk_time;
 2963               	.LM107:
 2964 147e 60E0      		ldi r22,0
 2965 1480 7AEC      		ldi r23,lo8(-54)
 2966 1482 8AE9      		ldi r24,lo8(-102)
 2967 1484 9BE3      		ldi r25,lo8(59)
 2968 1486 0E94 0000 		call __mulsi3
 2969 148a A201      		movw r20,r4
 2970 148c 9101      		movw r18,r2
 2971 148e 261B      		sub r18,r22
 2972 1490 370B      		sbc r19,r23
 2973 1492 480B      		sbc r20,r24
 2974 1494 590B      		sbc r21,r25
 2975               	.LBE54:
 2976               	.LBE55:
 2978               	.LM108:
 2979 1496 2C83      		std Y+4,r18
 2980 1498 3D83      		std Y+5,r19
 2981 149a 4E83      		std Y+6,r20
 2982 149c 5F83      		std Y+7,r21
 186:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_post(skew_lock);
 2984               	.LM109:
 2985 149e 8091 0000 		lds r24,skew_lock
 2986 14a2 9091 0000 		lds r25,skew_lock+1
 2987               	/* epilogue start */
 187:../../../src/net/pulse_sync/pulse_sync.c **** }
 2989               	.LM110:
 2990 14a6 DF91      		pop r29
 2991 14a8 CF91      		pop r28
 2992 14aa 1F91      		pop r17
 2993 14ac 0F91      		pop r16
 2994 14ae FF90      		pop r15
 2995 14b0 EF90      		pop r14
 2996 14b2 DF90      		pop r13
 2997 14b4 CF90      		pop r12
 2998 14b6 BF90      		pop r11
 2999 14b8 AF90      		pop r10
 3000 14ba 9F90      		pop r9
 3001 14bc 8F90      		pop r8
 3002 14be 7F90      		pop r7
 3003 14c0 6F90      		pop r6
 3004 14c2 5F90      		pop r5
 3005 14c4 4F90      		pop r4
 3006 14c6 3F90      		pop r3
 3007 14c8 2F90      		pop r2
 186:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_sem_post(skew_lock);
 3009               	.LM111:
 3010 14ca 0C94 0000 		jmp nrk_sem_post
 3012               	.Lscope9:
 3014               		.stabd	78,0,0
 3018               	.global	psync_edit_buf
 3020               	psync_edit_buf:
 3021               		.stabd	46,0,0
 188:../../../src/net/pulse_sync/pulse_sync.c **** 
 189:../../../src/net/pulse_sync/pulse_sync.c **** /*
 190:../../../src/net/pulse_sync/pulse_sync.c ****  * function applied to received timestamps before forwarding
 191:../../../src/net/pulse_sync/pulse_sync.c ****  */
 192:../../../src/net/pulse_sync/pulse_sync.c **** void psync_edit_buf(uint8_t* buf, nrk_time_t* rcv_time) {
 3023               	.LM112:
 3024               	.LFBB10:
 3025 14ce 2F92      		push r2
 3026 14d0 3F92      		push r3
 3027 14d2 4F92      		push r4
 3028 14d4 5F92      		push r5
 3029 14d6 6F92      		push r6
 3030 14d8 7F92      		push r7
 3031 14da 8F92      		push r8
 3032 14dc 9F92      		push r9
 3033 14de AF92      		push r10
 3034 14e0 BF92      		push r11
 3035 14e2 CF92      		push r12
 3036 14e4 DF92      		push r13
 3037 14e6 EF92      		push r14
 3038 14e8 FF92      		push r15
 3039 14ea 0F93      		push r16
 3040 14ec 1F93      		push r17
 3041 14ee CF93      		push r28
 3042 14f0 DF93      		push r29
 3043 14f2 CDB7      		in r28,__SP_L__
 3044 14f4 DEB7      		in r29,__SP_H__
 3045 14f6 A097      		sbiw r28,32
 3046 14f8 0FB6      		in __tmp_reg__,__SREG__
 3047 14fa F894      		cli
 3048 14fc DEBF      		out __SP_H__,r29
 3049 14fe 0FBE      		out __SREG__,__tmp_reg__
 3050 1500 CDBF      		out __SP_L__,r28
 3051               	/* prologue: function */
 3052               	/* frame size = 32 */
 3053               	/* stack size = 50 */
 3054               	.L__stack_usage = 50
 3055 1502 1C01      		movw r2,r24
 3056 1504 8B01      		movw r16,r22
 193:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_time_t time;
 194:../../../src/net/pulse_sync/pulse_sync.c **** 	nrk_time_get(&time);
 3058               	.LM113:
 3059 1506 CE01      		movw r24,r28
 3060 1508 0196      		adiw r24,1
 3061 150a 0E94 0000 		call nrk_time_get
 3062 150e D801      		movw r26,r16
 3063 1510 6D91      		ld r22,X+
 3064 1512 7D91      		ld r23,X+
 3065 1514 8D91      		ld r24,X+
 3066 1516 9C91      		ld r25,X
 3067               	.LBB56:
 3068               	.LBB57:
  61:../../../src/net/pulse_sync/pulse_sync.c **** }
 3070               	.LM114:
 3071 1518 20E0      		ldi r18,0
 3072 151a 3AEC      		ldi r19,lo8(-54)
 3073 151c 4AE9      		ldi r20,lo8(-102)
 3074 151e 5BE3      		ldi r21,lo8(59)
 3075 1520 0E94 0000 		call __umulsidi3
 3076 1524 F801      		movw r30,r16
 3077 1526 C480      		ldd r12,Z+4
 3078 1528 D580      		ldd r13,Z+5
 3079 152a E680      		ldd r14,Z+6
 3080 152c F780      		ldd r15,Z+7
 3081 152e 2601      		movw r4,r12
 3082 1530 3701      		movw r6,r14
 3083 1532 812C      		mov r8,__zero_reg__
 3084 1534 912C      		mov r9,__zero_reg__
 3085 1536 5401      		movw r10,r8
 3086 1538 5A86      		std Y+10,r5
 3087 153a 6B86      		std Y+11,r6
 3088 153c 7C86      		std Y+12,r7
 3089 153e 8D86      		std Y+13,r8
 3090 1540 9E86      		std Y+14,r9
 3091 1542 AF86      		std Y+15,r10
 3092 1544 B88A      		std Y+16,r11
 3093 1546 5601      		movw r10,r12
 3094 1548 6301      		movw r12,r6
 3095 154a E12C      		mov r14,__zero_reg__
 3096 154c F12C      		mov r15,__zero_reg__
 3097 154e 00E0      		ldi r16,0
 3098 1550 10E0      		ldi r17,0
 3099 1552 0E94 0000 		call __adddi3
 3100 1556 522E      		mov r5,r18
 3101 1558 632E      		mov r6,r19
 3102 155a 742E      		mov r7,r20
 3103 155c 852E      		mov r8,r21
 3104 155e 962E      		mov r9,r22
 3105 1560 7987      		std Y+9,r23
 3106 1562 898B      		std Y+17,r24
 3107 1564 492E      		mov r4,r25
 3108               	.LBE57:
 3109               	.LBE56:
 195:../../../src/net/pulse_sync/pulse_sync.c **** 	new_loc = get_full_time(*rcv_time);
 3111               	.LM115:
 3112 1566 2093 0000 		sts new_loc,r18
 3113 156a 3093 0000 		sts new_loc+1,r19
 3114 156e 4093 0000 		sts new_loc+2,r20
 3115 1572 5093 0000 		sts new_loc+3,r21
 3116 1576 6093 0000 		sts new_loc+4,r22
 3117 157a 7093 0000 		sts new_loc+5,r23
 3118 157e 8093 0000 		sts new_loc+6,r24
 3119 1582 9093 0000 		sts new_loc+7,r25
 3120 1586 8981      		ldd r24,Y+1
 3121 1588 9A81      		ldd r25,Y+2
 3122 158a AB81      		ldd r26,Y+3
 3123 158c BC81      		ldd r27,Y+4
 3124 158e 8A8B      		std Y+18,r24
 3125 1590 9B8B      		std Y+19,r25
 3126 1592 AC8B      		std Y+20,r26
 3127 1594 BD8B      		std Y+21,r27
 3128               	.LBB58:
 3129               	.LBB59:
  61:../../../src/net/pulse_sync/pulse_sync.c **** }
 3131               	.LM116:
 3132 1596 8D81      		ldd r24,Y+5
 3133 1598 9E81      		ldd r25,Y+6
 3134 159a AF81      		ldd r26,Y+7
 3135 159c B885      		ldd r27,Y+8
 3136 159e 5C01      		movw r10,r24
 3137 15a0 6D01      		movw r12,r26
 3138 15a2 9C01      		movw r18,r24
 3139 15a4 A601      		movw r20,r12
 3140 15a6 60E0      		ldi r22,0
 3141 15a8 70E0      		ldi r23,0
 3142 15aa 80E0      		ldi r24,0
 3143 15ac 90E0      		ldi r25,0
 3144 15ae A4E6      		ldi r26,lo8(100)
 3145 15b0 0E94 0000 		call __adddi3_s8
 3146 15b4 2E8B      		std Y+22,r18
 3147 15b6 3F8B      		std Y+23,r19
 3148 15b8 488F      		std Y+24,r20
 3149 15ba 598F      		std Y+25,r21
 3150 15bc 7B01      		movw r14,r22
 3151 15be 8C01      		movw r16,r24
 3152 15c0 6A89      		ldd r22,Y+18
 3153 15c2 7B89      		ldd r23,Y+19
 3154 15c4 8C89      		ldd r24,Y+20
 3155 15c6 9D89      		ldd r25,Y+21
 3156 15c8 20E0      		ldi r18,0
 3157 15ca 3AEC      		ldi r19,lo8(-54)
 3158 15cc 4AE9      		ldi r20,lo8(-102)
 3159 15ce 5BE3      		ldi r21,lo8(59)
 3160 15d0 0E94 0000 		call __umulsidi3
 3161 15d4 5901      		movw r10,r18
 3162 15d6 6A01      		movw r12,r20
 3163 15d8 FB01      		movw r30,r22
 3164 15da DC01      		movw r26,r24
 3165 15dc 2E89      		ldd r18,Y+22
 3166 15de 3F89      		ldd r19,Y+23
 3167 15e0 488D      		ldd r20,Y+24
 3168 15e2 598D      		ldd r21,Y+25
 3169 15e4 B701      		movw r22,r14
 3170 15e6 C801      		movw r24,r16
 3171 15e8 7F01      		movw r14,r30
 3172 15ea 8D01      		movw r16,r26
 3173 15ec 0E94 0000 		call __adddi3
 3174               	.LBE59:
 3175               	.LBE58:
 196:../../../src/net/pulse_sync/pulse_sync.c **** 	uint64_t diff = get_full_time(time) - new_loc + TX_DELAY;
 3177               	.LM117:
 3178 15f0 A52C      		mov r10,r5
 3179 15f2 B62C      		mov r11,r6
 3180 15f4 C72C      		mov r12,r7
 3181 15f6 D82C      		mov r13,r8
 3182 15f8 E92C      		mov r14,r9
 3183 15fa F984      		ldd r15,Y+9
 3184 15fc 0989      		ldd r16,Y+17
 3185 15fe 142D      		mov r17,r4
 3186 1600 0E94 0000 		call __subdi3
 3187 1604 2987      		std Y+9,r18
 3188 1606 398B      		std Y+17,r19
 3189 1608 4A8B      		std Y+18,r20
 3190 160a 5E8B      		std Y+22,r21
 3191 160c 6F8B      		std Y+23,r22
 3192 160e 788F      		std Y+24,r23
 3193 1610 898F      		std Y+25,r24
 3194 1612 9C8F      		std Y+28,r25
 197:../../../src/net/pulse_sync/pulse_sync.c **** 	uint64_t* buf64 = (uint64_t*)buf;
 198:../../../src/net/pulse_sync/pulse_sync.c **** 	#ifdef COMPENSATED_FORWARDING
 199:../../../src/net/pulse_sync/pulse_sync.c **** 	new_glob = buf64[1];
 3196               	.LM118:
 3197 1614 D101      		movw r26,r2
 3198 1616 1896      		adiw r26,8
 3199 1618 9C90      		ld r9,X
 3200 161a 1897      		sbiw r26,8
 3201 161c 1996      		adiw r26,9
 3202 161e 8C90      		ld r8,X
 3203 1620 1997      		sbiw r26,9
 3204 1622 1A96      		adiw r26,10
 3205 1624 7C90      		ld r7,X
 3206 1626 1A97      		sbiw r26,10
 3207 1628 1B96      		adiw r26,11
 3208 162a 6C90      		ld r6,X
 3209 162c 1B97      		sbiw r26,11
 3210 162e 1C96      		adiw r26,12
 3211 1630 5C90      		ld r5,X
 3212 1632 1C97      		sbiw r26,12
 3213 1634 1D96      		adiw r26,13
 3214 1636 4C90      		ld r4,X
 3215 1638 1D97      		sbiw r26,13
 3216 163a 1E96      		adiw r26,14
 3217 163c BC91      		ld r27,X
 3218 163e BA8F      		std Y+26,r27
 3219 1640 F101      		movw r30,r2
 3220 1642 F785      		ldd r31,Z+15
 3221 1644 FB8F      		std Y+27,r31
 3222 1646 9092 0000 		sts new_glob,r9
 3223 164a 8092 0000 		sts new_glob+1,r8
 3224 164e 7092 0000 		sts new_glob+2,r7
 3225 1652 6092 0000 		sts new_glob+3,r6
 3226 1656 5092 0000 		sts new_glob+4,r5
 3227 165a 4092 0000 		sts new_glob+5,r4
 3228 165e B093 0000 		sts new_glob+6,r27
 3229 1662 F093 0000 		sts new_glob+7,r31
 200:../../../src/net/pulse_sync/pulse_sync.c **** 	if (samples == MAX_SAMPLES) {
 3231               	.LM119:
 3232 1666 8091 0000 		lds r24,samples
 3233 166a 8430      		cpi r24,lo8(4)
 3234 166c 01F0      		breq .+2
 3235 166e 00C0      		rjmp .L24
 3236               	.LBB60:
 201:../../../src/net/pulse_sync/pulse_sync.c **** 		uint8_t ind = (curr_ind + 1) % MAX_SAMPLES;
 202:../../../src/net/pulse_sync/pulse_sync.c **** 		int64_t skew_inv = off_sq_sum > 0 ? ~(loc_sq_sum / off_sq_sum) + 1 : loc_sq_sum / (~off_sq_sum + 
 3238               	.LM120:
 3239 1670 A090 0000 		lds r10,off_sq_sum
 3240 1674 B090 0000 		lds r11,off_sq_sum+1
 3241 1678 C090 0000 		lds r12,off_sq_sum+2
 3242 167c D090 0000 		lds r13,off_sq_sum+3
 3243 1680 E090 0000 		lds r14,off_sq_sum+4
 3244 1684 F090 0000 		lds r15,off_sq_sum+5
 3245 1688 0091 0000 		lds r16,off_sq_sum+6
 3246 168c 1091 0000 		lds r17,off_sq_sum+7
 3247 1690 9501      		movw r18,r10
 3248 1692 A601      		movw r20,r12
 3249 1694 B701      		movw r22,r14
 3250 1696 C801      		movw r24,r16
 3251 1698 A0E0      		ldi r26,0
 3252 169a 0E94 0000 		call __cmpdi2_s8
 3253 169e 01F0      		breq .L25
 3254 16a0 04F0      		brlt .L25
 3256               	.LM121:
 3257 16a2 2091 0000 		lds r18,loc_sq_sum
 3258 16a6 3091 0000 		lds r19,loc_sq_sum+1
 3259 16aa 4091 0000 		lds r20,loc_sq_sum+2
 3260 16ae 5091 0000 		lds r21,loc_sq_sum+3
 3261 16b2 6091 0000 		lds r22,loc_sq_sum+4
 3262 16b6 7091 0000 		lds r23,loc_sq_sum+5
 3263 16ba 8091 0000 		lds r24,loc_sq_sum+6
 3264 16be 9091 0000 		lds r25,loc_sq_sum+7
 3265 16c2 0E94 0000 		call __udivdi3
 3266 16c6 0E94 0000 		call __negdi2
 3267 16ca 00C0      		rjmp .L28
 3268               	.L25:
 3270               	.LM122:
 3271 16cc 9501      		movw r18,r10
 3272 16ce A601      		movw r20,r12
 3273 16d0 B701      		movw r22,r14
 3274 16d2 C801      		movw r24,r16
 3275 16d4 0E94 0000 		call __negdi2
 3276 16d8 5901      		movw r10,r18
 3277 16da 6A01      		movw r12,r20
 3278 16dc 7B01      		movw r14,r22
 3279 16de 8C01      		movw r16,r24
 3280 16e0 2091 0000 		lds r18,loc_sq_sum
 3281 16e4 3091 0000 		lds r19,loc_sq_sum+1
 3282 16e8 4091 0000 		lds r20,loc_sq_sum+2
 3283 16ec 5091 0000 		lds r21,loc_sq_sum+3
 3284 16f0 6091 0000 		lds r22,loc_sq_sum+4
 3285 16f4 7091 0000 		lds r23,loc_sq_sum+5
 3286 16f8 8091 0000 		lds r24,loc_sq_sum+6
 3287 16fc 9091 0000 		lds r25,loc_sq_sum+7
 3288 1700 0E94 0000 		call __udivdi3
 3289               	.L28:
 3290 1704 F22F      		mov r31,r18
 3291 1706 E32F      		mov r30,r19
 3292 1708 4D8F      		std Y+29,r20
 3293 170a 5E8F      		std Y+30,r21
 3294 170c 6F8F      		std Y+31,r22
 3295 170e 78A3      		std Y+32,r23
 3296 1710 B82F      		mov r27,r24
 3297 1712 A92F      		mov r26,r25
 3298 1714 2985      		ldd r18,Y+9
 3299 1716 3989      		ldd r19,Y+17
 3300 1718 4A89      		ldd r20,Y+18
 3301 171a 5E89      		ldd r21,Y+22
 3302 171c 6F89      		ldd r22,Y+23
 3303 171e 788D      		ldd r23,Y+24
 3304 1720 898D      		ldd r24,Y+25
 3305 1722 9C8D      		ldd r25,Y+28
 3306 1724 A92C      		mov r10,r9
 3307 1726 B82C      		mov r11,r8
 3308 1728 C72C      		mov r12,r7
 3309 172a D62C      		mov r13,r6
 3310 172c E52C      		mov r14,r5
 3311 172e F42C      		mov r15,r4
 3312 1730 0A8D      		ldd r16,Y+26
 3313 1732 1B8D      		ldd r17,Y+27
 3314 1734 0E94 0000 		call __adddi3
 3315 1738 2A8F      		std Y+26,r18
 3316 173a 3B8F      		std Y+27,r19
 3317 173c 2A01      		movw r4,r20
 3318 173e 3B01      		movw r6,r22
 3319 1740 4C01      		movw r8,r24
 203:../../../src/net/pulse_sync/pulse_sync.c **** 		buf64[1] += diff + (int64_t)(diff / (skew_inv << 6));
 3321               	.LM123:
 3322 1742 2F2F      		mov r18,r31
 3323 1744 3E2F      		mov r19,r30
 3324 1746 4D8D      		ldd r20,Y+29
 3325 1748 5E8D      		ldd r21,Y+30
 3326 174a 6F8D      		ldd r22,Y+31
 3327 174c 78A1      		ldd r23,Y+32
 3328 174e 8B2F      		mov r24,r27
 3329 1750 9A2F      		mov r25,r26
 3330 1752 06E0      		ldi r16,lo8(6)
 3331 1754 0E94 0000 		call __ashldi3
 3332 1758 5901      		movw r10,r18
 3333 175a 6A01      		movw r12,r20
 3334 175c 7B01      		movw r14,r22
 3335 175e 8C01      		movw r16,r24
 3336 1760 2985      		ldd r18,Y+9
 3337 1762 3989      		ldd r19,Y+17
 3338 1764 4A89      		ldd r20,Y+18
 3339 1766 5E89      		ldd r21,Y+22
 3340 1768 6F89      		ldd r22,Y+23
 3341 176a 788D      		ldd r23,Y+24
 3342 176c 898D      		ldd r24,Y+25
 3343 176e 9C8D      		ldd r25,Y+28
 3344 1770 0E94 0000 		call __udivdi3
 3345 1774 5901      		movw r10,r18
 3346 1776 6A01      		movw r12,r20
 3347 1778 7B01      		movw r14,r22
 3348 177a 8C01      		movw r16,r24
 3349 177c 2A8D      		ldd r18,Y+26
 3350 177e 3B8D      		ldd r19,Y+27
 3351 1780 A201      		movw r20,r4
 3352 1782 B301      		movw r22,r6
 3353 1784 C401      		movw r24,r8
 3354 1786 0E94 0000 		call __adddi3
 3355 178a D101      		movw r26,r2
 3356 178c 1896      		adiw r26,8
 3357 178e 2C93      		st X,r18
 3358 1790 1897      		sbiw r26,8
 3359 1792 1996      		adiw r26,9
 3360 1794 3C93      		st X,r19
 3361 1796 1997      		sbiw r26,9
 3362 1798 1A96      		adiw r26,10
 3363 179a 4C93      		st X,r20
 3364 179c 1A97      		sbiw r26,10
 3365 179e 1B96      		adiw r26,11
 3366 17a0 5C93      		st X,r21
 3367 17a2 1B97      		sbiw r26,11
 3368 17a4 1C96      		adiw r26,12
 3369 17a6 6C93      		st X,r22
 3370 17a8 1C97      		sbiw r26,12
 3371 17aa 1D96      		adiw r26,13
 3372 17ac 7C93      		st X,r23
 3373 17ae 1D97      		sbiw r26,13
 3374 17b0 1E96      		adiw r26,14
 3375 17b2 8C93      		st X,r24
 3376 17b4 1E97      		sbiw r26,14
 3377 17b6 1F96      		adiw r26,15
 3378 17b8 9C93      		st X,r25
 3379               	.LBE60:
 3380 17ba 00C0      		rjmp .L27
 3381               	.L24:
 204:../../../src/net/pulse_sync/pulse_sync.c **** 	}
 205:../../../src/net/pulse_sync/pulse_sync.c **** 	else
 206:../../../src/net/pulse_sync/pulse_sync.c **** 		buf64[1] += diff;
 3383               	.LM124:
 3384 17bc 2985      		ldd r18,Y+9
 3385 17be 3989      		ldd r19,Y+17
 3386 17c0 4A89      		ldd r20,Y+18
 3387 17c2 5E89      		ldd r21,Y+22
 3388 17c4 6F89      		ldd r22,Y+23
 3389 17c6 788D      		ldd r23,Y+24
 3390 17c8 898D      		ldd r24,Y+25
 3391 17ca 9C8D      		ldd r25,Y+28
 3392 17cc A92C      		mov r10,r9
 3393 17ce B82C      		mov r11,r8
 3394 17d0 C72C      		mov r12,r7
 3395 17d2 D62C      		mov r13,r6
 3396 17d4 E52C      		mov r14,r5
 3397 17d6 F42C      		mov r15,r4
 3398 17d8 0A8D      		ldd r16,Y+26
 3399 17da 1B8D      		ldd r17,Y+27
 3400 17dc 0E94 0000 		call __adddi3
 3401 17e0 F101      		movw r30,r2
 3402 17e2 2087      		std Z+8,r18
 3403 17e4 3187      		std Z+9,r19
 3404 17e6 4287      		std Z+10,r20
 3405 17e8 5387      		std Z+11,r21
 3406 17ea 6487      		std Z+12,r22
 3407 17ec 7587      		std Z+13,r23
 3408 17ee 8687      		std Z+14,r24
 3409 17f0 9787      		std Z+15,r25
 3410               	.L27:
 207:../../../src/net/pulse_sync/pulse_sync.c **** 	#else
 208:../../../src/net/pulse_sync/pulse_sync.c **** 	new_glob = buf64[0];
 209:../../../src/net/pulse_sync/pulse_sync.c **** 	#endif
 210:../../../src/net/pulse_sync/pulse_sync.c **** 	buf64[0] += diff;
 3412               	.LM125:
 3413 17f2 2985      		ldd r18,Y+9
 3414 17f4 3989      		ldd r19,Y+17
 3415 17f6 4A89      		ldd r20,Y+18
 3416 17f8 5E89      		ldd r21,Y+22
 3417 17fa 6F89      		ldd r22,Y+23
 3418 17fc 788D      		ldd r23,Y+24
 3419 17fe 898D      		ldd r24,Y+25
 3420 1800 9C8D      		ldd r25,Y+28
 3421 1802 D101      		movw r26,r2
 3422 1804 AC90      		ld r10,X
 3423 1806 1196      		adiw r26,1
 3424 1808 BC90      		ld r11,X
 3425 180a 1197      		sbiw r26,1
 3426 180c 1296      		adiw r26,2
 3427 180e CC90      		ld r12,X
 3428 1810 1297      		sbiw r26,2
 3429 1812 1396      		adiw r26,3
 3430 1814 DC90      		ld r13,X
 3431 1816 1397      		sbiw r26,3
 3432 1818 1496      		adiw r26,4
 3433 181a EC90      		ld r14,X
 3434 181c 1497      		sbiw r26,4
 3435 181e 1596      		adiw r26,5
 3436 1820 FC90      		ld r15,X
 3437 1822 1597      		sbiw r26,5
 3438 1824 1696      		adiw r26,6
 3439 1826 0C91      		ld r16,X
 3440 1828 1697      		sbiw r26,6
 3441 182a 1796      		adiw r26,7
 3442 182c 1C91      		ld r17,X
 3443 182e 1797      		sbiw r26,7
 3444 1830 0E94 0000 		call __adddi3
 3445 1834 2C93      		st X,r18
 3446 1836 1196      		adiw r26,1
 3447 1838 3C93      		st X,r19
 3448 183a 1197      		sbiw r26,1
 3449 183c 1296      		adiw r26,2
 3450 183e 4C93      		st X,r20
 3451 1840 1297      		sbiw r26,2
 3452 1842 1396      		adiw r26,3
 3453 1844 5C93      		st X,r21
 3454 1846 1397      		sbiw r26,3
 3455 1848 1496      		adiw r26,4
 3456 184a 6C93      		st X,r22
 3457 184c 1497      		sbiw r26,4
 3458 184e 1596      		adiw r26,5
 3459 1850 7C93      		st X,r23
 3460 1852 1597      		sbiw r26,5
 3461 1854 1696      		adiw r26,6
 3462 1856 8C93      		st X,r24
 3463 1858 1697      		sbiw r26,6
 3464 185a 1796      		adiw r26,7
 3465 185c 9C93      		st X,r25
 211:../../../src/net/pulse_sync/pulse_sync.c **** 	edit = 1;
 3467               	.LM126:
 3468 185e 81E0      		ldi r24,lo8(1)
 3469 1860 8093 0000 		sts edit,r24
 3470               	/* epilogue start */
 212:../../../src/net/pulse_sync/pulse_sync.c **** }
 3472               	.LM127:
 3473 1864 A096      		adiw r28,32
 3474 1866 0FB6      		in __tmp_reg__,__SREG__
 3475 1868 F894      		cli
 3476 186a DEBF      		out __SP_H__,r29
 3477 186c 0FBE      		out __SREG__,__tmp_reg__
 3478 186e CDBF      		out __SP_L__,r28
 3479 1870 DF91      		pop r29
 3480 1872 CF91      		pop r28
 3481 1874 1F91      		pop r17
 3482 1876 0F91      		pop r16
 3483 1878 FF90      		pop r15
 3484 187a EF90      		pop r14
 3485 187c DF90      		pop r13
 3486 187e CF90      		pop r12
 3487 1880 BF90      		pop r11
 3488 1882 AF90      		pop r10
 3489 1884 9F90      		pop r9
 3490 1886 8F90      		pop r8
 3491 1888 7F90      		pop r7
 3492 188a 6F90      		pop r6
 3493 188c 5F90      		pop r5
 3494 188e 4F90      		pop r4
 3495 1890 3F90      		pop r3
 3496 1892 2F90      		pop r2
 3497 1894 0895      		ret
 3502               	.Lscope10:
 3504               		.stabd	78,0,0
 3507               	.global	psync_flood_wait
 3509               	psync_flood_wait:
 3510               		.stabd	46,0,0
 213:../../../src/net/pulse_sync/pulse_sync.c **** 
 214:../../../src/net/pulse_sync/pulse_sync.c **** /*
 215:../../../src/net/pulse_sync/pulse_sync.c ****  * function to initiate a pulsesync flood cycle 
 216:../../../src/net/pulse_sync/pulse_sync.c ****  */
 217:../../../src/net/pulse_sync/pulse_sync.c **** void psync_flood_wait(nrk_time_t* time) {
 3512               	.LM128:
 3513               	.LFBB11:
 3514 1896 2F92      		push r2
 3515 1898 3F92      		push r3
 3516 189a 4F92      		push r4
 3517 189c 5F92      		push r5
 3518 189e 6F92      		push r6
 3519 18a0 7F92      		push r7
 3520 18a2 8F92      		push r8
 3521 18a4 9F92      		push r9
 3522 18a6 AF92      		push r10
 3523 18a8 BF92      		push r11
 3524 18aa CF92      		push r12
 3525 18ac DF92      		push r13
 3526 18ae EF92      		push r14
 3527 18b0 FF92      		push r15
 3528 18b2 0F93      		push r16
 3529 18b4 1F93      		push r17
 3530 18b6 CF93      		push r28
 3531 18b8 DF93      		push r29
 3532 18ba CDB7      		in r28,__SP_L__
 3533 18bc DEB7      		in r29,__SP_H__
 3534 18be 6C97      		sbiw r28,28
 3535 18c0 0FB6      		in __tmp_reg__,__SREG__
 3536 18c2 F894      		cli
 3537 18c4 DEBF      		out __SP_H__,r29
 3538 18c6 0FBE      		out __SREG__,__tmp_reg__
 3539 18c8 CDBF      		out __SP_L__,r28
 3540               	/* prologue: function */
 3541               	/* frame size = 28 */
 3542               	/* stack size = 46 */
 3543               	.L__stack_usage = 46
 3544 18ca 3C01      		movw r6,r24
 218:../../../src/net/pulse_sync/pulse_sync.c **** 	// buffer for holding data to send/receive with flash (in this case uint64_t with time data)
 219:../../../src/net/pulse_sync/pulse_sync.c **** 	#ifdef COMPENSATED_FORWARDING
 220:../../../src/net/pulse_sync/pulse_sync.c **** 	uint64_t buf[2];
 221:../../../src/net/pulse_sync/pulse_sync.c **** 	#else
 222:../../../src/net/pulse_sync/pulse_sync.c **** 	uint64_t buf[1];
 223:../../../src/net/pulse_sync/pulse_sync.c **** 	#endif
 224:../../../src/net/pulse_sync/pulse_sync.c **** 	
 225:../../../src/net/pulse_sync/pulse_sync.c **** 	// functionality to be executed if the node is set as the network global clock
 226:../../../src/net/pulse_sync/pulse_sync.c **** 	if (is_root) {
 3546               	.LM129:
 3547 18cc 8091 0000 		lds r24,is_root
 3548 18d0 8823      		tst r24
 3549 18d2 01F0      		breq .L30
 227:../../../src/net/pulse_sync/pulse_sync.c **** 		nrk_time_get(time);
 3551               	.LM130:
 3552 18d4 C301      		movw r24,r6
 3553 18d6 0E94 0000 		call nrk_time_get
 3554 18da 00C0      		rjmp .L29
 3555               	.L30:
 3556               	.LBB61:
 228:../../../src/net/pulse_sync/pulse_sync.c **** 		buf[0] = get_full_time(*time) + TX_DELAY;
 229:../../../src/net/pulse_sync/pulse_sync.c **** 		#ifdef COMPENSATED_FORWARDING
 230:../../../src/net/pulse_sync/pulse_sync.c **** 		buf[1] = buf[0];
 231:../../../src/net/pulse_sync/pulse_sync.c **** 		#endif
 232:../../../src/net/pulse_sync/pulse_sync.c **** 		//flash_tx_pkt((uint8_t*)buf, PKT_SIZE);
 233:../../../src/net/pulse_sync/pulse_sync.c **** 	}
 234:../../../src/net/pulse_sync/pulse_sync.c **** 	// functionality to be executed if the node is synchronizing to an external global clock
 235:../../../src/net/pulse_sync/pulse_sync.c **** 	else {
 236:../../../src/net/pulse_sync/pulse_sync.c **** 		edit = 0;
 3558               	.LM131:
 3559 18dc 1092 0000 		sts edit,__zero_reg__
 237:../../../src/net/pulse_sync/pulse_sync.c **** 		nrk_time_t cur_time, time_after;
 238:../../../src/net/pulse_sync/pulse_sync.c **** 		nrk_time_get(&cur_time);
 3561               	.LM132:
 3562 18e0 CE01      		movw r24,r28
 3563 18e2 0996      		adiw r24,9
 3564 18e4 0E94 0000 		call nrk_time_get
 239:../../../src/net/pulse_sync/pulse_sync.c **** 		nrk_time_add(&time_after, cur_time, *time);
 3566               	.LM133:
 3567 18e8 F301      		movw r30,r6
 3568 18ea 8080      		ld r8,Z
 3569 18ec 9180      		ldd r9,Z+1
 3570 18ee A280      		ldd r10,Z+2
 3571 18f0 B380      		ldd r11,Z+3
 3572 18f2 C480      		ldd r12,Z+4
 3573 18f4 D580      		ldd r13,Z+5
 3574 18f6 E680      		ldd r14,Z+6
 3575 18f8 F780      		ldd r15,Z+7
 3576 18fa 0985      		ldd r16,Y+9
 3577 18fc 1A85      		ldd r17,Y+10
 3578 18fe 2B85      		ldd r18,Y+11
 3579 1900 3C85      		ldd r19,Y+12
 3580 1902 4D85      		ldd r20,Y+13
 3581 1904 5E85      		ldd r21,Y+14
 3582 1906 6F85      		ldd r22,Y+15
 3583 1908 7889      		ldd r23,Y+16
 3584 190a CE01      		movw r24,r28
 3585 190c 0196      		adiw r24,1
 3586 190e 0E94 0000 		call nrk_time_add
 240:../../../src/net/pulse_sync/pulse_sync.c **** 		nrk_sem_pend(skew_lock);
 3588               	.LM134:
 3589 1912 8091 0000 		lds r24,skew_lock
 3590 1916 9091 0000 		lds r25,skew_lock+1
 3591 191a 0E94 0000 		call nrk_sem_pend
 3592               	.L32:
 241:../../../src/net/pulse_sync/pulse_sync.c **** 		//flash_enable(16, time, psync_edit_buf);
 242:../../../src/net/pulse_sync/pulse_sync.c **** 		while (!edit && (get_full_time(cur_time) < get_full_time(time_after)))
 3594               	.LM135:
 3595 191e 8091 0000 		lds r24,edit
 3596 1922 8111      		cpse r24,__zero_reg__
 3597 1924 00C0      		rjmp .L33
 3598 1926 6985      		ldd r22,Y+9
 3599 1928 7A85      		ldd r23,Y+10
 3600 192a 8B85      		ldd r24,Y+11
 3601 192c 9C85      		ldd r25,Y+12
 3602 192e 2981      		ldd r18,Y+1
 3603 1930 3A81      		ldd r19,Y+2
 3604 1932 4B81      		ldd r20,Y+3
 3605 1934 5C81      		ldd r21,Y+4
 3606 1936 298B      		std Y+17,r18
 3607 1938 3A8B      		std Y+18,r19
 3608 193a 4B8B      		std Y+19,r20
 3609 193c 5C8B      		std Y+20,r21
 3610               	.LBB62:
 3611               	.LBB63:
  61:../../../src/net/pulse_sync/pulse_sync.c **** }
 3613               	.LM136:
 3614 193e 20E0      		ldi r18,0
 3615 1940 3AEC      		ldi r19,lo8(-54)
 3616 1942 4AE9      		ldi r20,lo8(-102)
 3617 1944 5BE3      		ldi r21,lo8(59)
 3618 1946 0E94 0000 		call __umulsidi3
 3619 194a CD84      		ldd r12,Y+13
 3620 194c DE84      		ldd r13,Y+14
 3621 194e EF84      		ldd r14,Y+15
 3622 1950 F888      		ldd r15,Y+16
 3623 1952 1601      		movw r2,r12
 3624 1954 2701      		movw r4,r14
 3625 1956 5601      		movw r10,r12
 3626 1958 6201      		movw r12,r4
 3627 195a E12C      		mov r14,__zero_reg__
 3628 195c F12C      		mov r15,__zero_reg__
 3629 195e 00E0      		ldi r16,0
 3630 1960 10E0      		ldi r17,0
 3631 1962 0E94 0000 		call __adddi3
 3632 1966 2D8B      		std Y+21,r18
 3633 1968 3E8B      		std Y+22,r19
 3634 196a 4F8B      		std Y+23,r20
 3635 196c 588F      		std Y+24,r21
 3636 196e 698F      		std Y+25,r22
 3637 1970 7A8F      		std Y+26,r23
 3638 1972 8B8F      		std Y+27,r24
 3639 1974 9C8F      		std Y+28,r25
 3640               	.LBE63:
 3641               	.LBE62:
 3642               	.LBB64:
 3643               	.LBB65:
 3644 1976 6989      		ldd r22,Y+17
 3645 1978 7A89      		ldd r23,Y+18
 3646 197a 8B89      		ldd r24,Y+19
 3647 197c 9C89      		ldd r25,Y+20
 3648 197e 20E0      		ldi r18,0
 3649 1980 3AEC      		ldi r19,lo8(-54)
 3650 1982 4AE9      		ldi r20,lo8(-102)
 3651 1984 5BE3      		ldi r21,lo8(59)
 3652 1986 0E94 0000 		call __umulsidi3
 3653 198a CD80      		ldd r12,Y+5
 3654 198c DE80      		ldd r13,Y+6
 3655 198e EF80      		ldd r14,Y+7
 3656 1990 F884      		ldd r15,Y+8
 3657 1992 1601      		movw r2,r12
 3658 1994 2701      		movw r4,r14
 3659 1996 5601      		movw r10,r12
 3660 1998 6201      		movw r12,r4
 3661 199a E12C      		mov r14,__zero_reg__
 3662 199c F12C      		mov r15,__zero_reg__
 3663 199e 0E94 0000 		call __adddi3
 3664 19a2 5901      		movw r10,r18
 3665 19a4 6A01      		movw r12,r20
 3666 19a6 7B01      		movw r14,r22
 3667 19a8 8C01      		movw r16,r24
 3668               	.LBE65:
 3669               	.LBE64:
 3671               	.LM137:
 3672 19aa 2D89      		ldd r18,Y+21
 3673 19ac 3E89      		ldd r19,Y+22
 3674 19ae 4F89      		ldd r20,Y+23
 3675 19b0 588D      		ldd r21,Y+24
 3676 19b2 698D      		ldd r22,Y+25
 3677 19b4 7A8D      		ldd r23,Y+26
 3678 19b6 8B8D      		ldd r24,Y+27
 3679 19b8 9C8D      		ldd r25,Y+28
 3680 19ba 0E94 0000 		call __cmpdi2
 3681 19be 00F4      		brsh .L33
 243:../../../src/net/pulse_sync/pulse_sync.c **** 			nrk_time_get(&cur_time);
 3683               	.LM138:
 3684 19c0 CE01      		movw r24,r28
 3685 19c2 0996      		adiw r24,9
 3686 19c4 0E94 0000 		call nrk_time_get
 3687 19c8 00C0      		rjmp .L32
 3688               	.L33:
 244:../../../src/net/pulse_sync/pulse_sync.c **** 		nrk_sem_post(skew_lock);
 3690               	.LM139:
 3691 19ca 8091 0000 		lds r24,skew_lock
 3692 19ce 9091 0000 		lds r25,skew_lock+1
 3693 19d2 0E94 0000 		call nrk_sem_post
 245:../../../src/net/pulse_sync/pulse_sync.c **** 		if (edit) {
 3695               	.LM140:
 3696 19d6 8091 0000 		lds r24,edit
 3697 19da 8823      		tst r24
 3698 19dc 01F0      		breq .L29
 246:../../../src/net/pulse_sync/pulse_sync.c **** 			psync_add_point(new_loc, new_glob);
 3700               	.LM141:
 3701 19de A090 0000 		lds r10,new_glob
 3702 19e2 B090 0000 		lds r11,new_glob+1
 3703 19e6 C090 0000 		lds r12,new_glob+2
 3704 19ea D090 0000 		lds r13,new_glob+3
 3705 19ee E090 0000 		lds r14,new_glob+4
 3706 19f2 F090 0000 		lds r15,new_glob+5
 3707 19f6 0091 0000 		lds r16,new_glob+6
 3708 19fa 1091 0000 		lds r17,new_glob+7
 3709 19fe 2091 0000 		lds r18,new_loc
 3710 1a02 3091 0000 		lds r19,new_loc+1
 3711 1a06 4091 0000 		lds r20,new_loc+2
 3712 1a0a 5091 0000 		lds r21,new_loc+3
 3713 1a0e 6091 0000 		lds r22,new_loc+4
 3714 1a12 7091 0000 		lds r23,new_loc+5
 3715 1a16 8091 0000 		lds r24,new_loc+6
 3716 1a1a 9091 0000 		lds r25,new_loc+7
 3717 1a1e 0E94 0000 		call psync_add_point
 247:../../../src/net/pulse_sync/pulse_sync.c **** 			edit = 0;
 3719               	.LM142:
 3720 1a22 1092 0000 		sts edit,__zero_reg__
 3721               	.L29:
 3722               	/* epilogue start */
 3723               	.LBE61:
 248:../../../src/net/pulse_sync/pulse_sync.c **** 		}
 249:../../../src/net/pulse_sync/pulse_sync.c **** 	}
 250:../../../src/net/pulse_sync/pulse_sync.c **** }
 3725               	.LM143:
 3726 1a26 6C96      		adiw r28,28
 3727 1a28 0FB6      		in __tmp_reg__,__SREG__
 3728 1a2a F894      		cli
 3729 1a2c DEBF      		out __SP_H__,r29
 3730 1a2e 0FBE      		out __SREG__,__tmp_reg__
 3731 1a30 CDBF      		out __SP_L__,r28
 3732 1a32 DF91      		pop r29
 3733 1a34 CF91      		pop r28
 3734 1a36 1F91      		pop r17
 3735 1a38 0F91      		pop r16
 3736 1a3a FF90      		pop r15
 3737 1a3c EF90      		pop r14
 3738 1a3e DF90      		pop r13
 3739 1a40 CF90      		pop r12
 3740 1a42 BF90      		pop r11
 3741 1a44 AF90      		pop r10
 3742 1a46 9F90      		pop r9
 3743 1a48 8F90      		pop r8
 3744 1a4a 7F90      		pop r7
 3745 1a4c 6F90      		pop r6
 3746 1a4e 5F90      		pop r5
 3747 1a50 4F90      		pop r4
 3748 1a52 3F90      		pop r3
 3749 1a54 2F90      		pop r2
 3750 1a56 0895      		ret
 3756               	.Lscope11:
 3758               		.stabd	78,0,0
 3759               		.comm	is_root,1,1
 3760               		.comm	line_data,128,1
 3761               		.comm	skew_lock,2,1
 3762               		.comm	edit,1,1
 3763               		.comm	new_glob,8,1
 3764               		.comm	new_loc,8,1
 3765               		.comm	curr_ind,1,1
 3766               		.comm	samples,1,1
 3767               		.comm	off_sq_sum,8,1
 3768               		.comm	loc_sq_sum,8,1
 3769               		.comm	off_avg,8,1
 3770               		.comm	off_sum,8,1
 3771               		.comm	loc_avg,8,1
 3772               		.comm	loc_sum,8,1
 3773               		.comm	error_num,1,1
 3774               		.comm	error_task,1,1
 3775               		.comm	nrk_kernel_stk_ptr,2,1
 3776               		.comm	nrk_idle_task_stk,128,1
 3777               		.comm	_nrk_signal_list,4,1
 3798               	.Letext0:
 3799               		.ident	"GCC: (GNU) 4.9.2 20141224 (prerelease)"
 3800               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pulse_sync.c
     /tmp/cc8luwYc.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc8luwYc.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc8luwYc.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc8luwYc.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cc8luwYc.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc8luwYc.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc8luwYc.s:325    .text:0000000000000000 psync_init
                            *COM*:0000000000000002 skew_lock
                            *COM*:0000000000000001 is_root
                            *COM*:0000000000000008 loc_sum
                            *COM*:0000000000000008 loc_avg
                            *COM*:0000000000000008 off_sum
                            *COM*:0000000000000008 off_avg
                            *COM*:0000000000000008 loc_sq_sum
                            *COM*:0000000000000008 off_sq_sum
                            *COM*:0000000000000001 samples
                            *COM*:0000000000000001 curr_ind
     /tmp/cc8luwYc.s:439    .text:00000000000000fc get_full_time
     /tmp/cc8luwYc.s:543    .text:00000000000001a2 get_pack_time
     /tmp/cc8luwYc.s:669    .text:0000000000000268 psync_add_point
                            *COM*:0000000000000080 line_data
     /tmp/cc8luwYc.s:2010   .text:0000000000000d5a psync_is_synced
     /tmp/cc8luwYc.s:2038   .text:0000000000000d68 psync_get_time
     /tmp/cc8luwYc.s:2288   .text:0000000000000f54 psync_local_to_global
     /tmp/cc8luwYc.s:2534   .text:000000000000113a psync_global_to_local
     /tmp/cc8luwYc.s:2789   .text:0000000000001322 psync_local_diff
     /tmp/cc8luwYc.s:3020   .text:00000000000014ce psync_edit_buf
                            *COM*:0000000000000008 new_loc
                            *COM*:0000000000000008 new_glob
                            *COM*:0000000000000001 edit
     /tmp/cc8luwYc.s:3509   .text:0000000000001896 psync_flood_wait
                            *COM*:0000000000000001 error_num
                            *COM*:0000000000000001 error_task
                            *COM*:0000000000000002 nrk_kernel_stk_ptr
                            *COM*:0000000000000080 nrk_idle_task_stk
                            *COM*:0000000000000004 _nrk_signal_list

UNDEFINED SYMBOLS
nrk_sem_delete
nrk_sem_create
__umulsidi3
__adddi3
__udivdi3
__mulsi3
__muldi3
__divdi3
__subdi3
nrk_sem_pend
__lshrdi3
__ashldi3
__ashrdi3
__divmodhi4
__cmpdi2_s8
nrk_sem_post
nrk_time_get
__negdi2
__adddi3_s8
nrk_time_add
__cmpdi2
__do_clear_bss
