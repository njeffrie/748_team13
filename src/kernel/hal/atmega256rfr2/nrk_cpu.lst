   1               		.file	"nrk_cpu.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	nrk_battery_save
  13               	nrk_battery_save:
  14               	.LFB2:
  15               		.file 1 "/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c"
   1:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** /******************************************************************************
   2:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  All rights reserved.
   5:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
   6:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
  10:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  This program is free software: you can redistribute it and/or modify
  11:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  it under the terms of the GNU General Public License as published by
  12:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
  14:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  This program is distributed in the hope that it will be useful,
  15:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  GNU General Public License for more details.
  18:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
  19:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  You should have received a copy of the GNU General Public License
  20:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
  22:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  Contributing Authors (specific to this file):
  23:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  Anthony Rowe
  24:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  Zane Starr
  25:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *  Anand Eswaren
  26:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *******************************************************************************/
  27:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
  28:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #include <include.h>
  29:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #include <nrk.h>
  30:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #include <avr/sleep.h>
  31:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #include <nrk_stack_check.h>
  32:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #include <nrk_task.h>
  33:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #include <nrk_defs.h>
  34:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #include <nrk_cfg.h>
  35:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #include <nrk_timer.h>
  36:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #include <nrk_error.h>
  37:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
  38:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #define BUILD_DATE "Date: " __DATE__ "\n"
  39:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** /*
  40:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** ***************************************************************************************************
  41:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *                                        INITIALIZE A TASK'S STACK
  42:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
  43:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** * Description: This function is highly processor specific.
  44:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
  45:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** * Arguments  : task          is a pointer to the task code
  46:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
  47:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *              pdata         is a pointer to a user supplied data area that will be passed to the t
  48:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *                            when the task first executes.
  49:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
  50:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *              ptos          is a pointer to the top of stack.  It is assumed that 'ptos' points to
  51:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *                            a 'free' entry on the task stack.  
  52:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *                            'ptos' contains the HIGHEST valid address of the stack.  
  53:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
  54:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *              opt           specifies options that can be used to alter the behavior of OSTaskStkI
  55:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *                            We don't use have any option implemented for this project. You can jus
  56:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *                            set opt to 0
  57:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
  58:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** * Returns    : Always returns the location of the new top-of-stack' once the processor registers ha
  59:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *              been placed on the stack in the proper order.
  60:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** *
  61:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** * Note(s)    : 
  62:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** ***************************************************************************************************
  63:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** */
  64:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
  65:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
  66:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** void nrk_battery_save()
  67:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** {
  16               		.loc 1 67 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE2:
  26               	.global	nrk_sleep
  28               	nrk_sleep:
  29               	.LFB3:
  68:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #ifdef NRK_BATTERY_SAVE
  69:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****  	_nrk_stop_os_timer();
  70:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         _nrk_set_next_wakeup(250);
  71:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         nrk_led_clr(0);
  72:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         nrk_led_set(1);
  73:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         nrk_led_clr(2);
  74:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         nrk_led_clr(3);
  75:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         SET_VREG_INACTIVE();
  76:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         nrk_sleep();
  77:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #endif
  78:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** }
  79:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
  80:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** void nrk_sleep()
  81:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** {
  30               		.loc 1 81 0
  31               		.cfi_startproc
  32               	/* prologue: function */
  33               	/* frame size = 0 */
  34               	/* stack size = 0 */
  35               	.L__stack_usage = 0
  82:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     //PRR0 = 0xff;
  83:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     //PRR1 = 0xff;
  84:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     set_sleep_mode (SLEEP_MODE_PWR_SAVE);
  36               		.loc 1 84 0
  37 0002 83B7      		in r24,0x33
  38 0004 817F      		andi r24,lo8(-15)
  39 0006 8660      		ori r24,lo8(6)
  40 0008 83BF      		out 0x33,r24
  85:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     sleep_mode ();
  41               		.loc 1 85 0
  42 000a 83B7      		in r24,0x33
  43 000c 8160      		ori r24,lo8(1)
  44 000e 83BF      		out 0x33,r24
  45               	/* #APP */
  46               	 ;  85 "/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c" 1
  47 0010 8895      		sleep
  48               		
  49               	 ;  0 "" 2
  50               	/* #NOAPP */
  51 0012 83B7      		in r24,0x33
  52 0014 8E7F      		andi r24,lo8(-2)
  53 0016 83BF      		out 0x33,r24
  54 0018 0895      		ret
  55               		.cfi_endproc
  56               	.LFE3:
  58               	.global	nrk_idle
  60               	nrk_idle:
  61               	.LFB4:
  86:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
  87:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** }
  88:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
  89:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** void nrk_idle()
  90:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** {
  62               		.loc 1 90 0
  63               		.cfi_startproc
  64               	/* prologue: function */
  65               	/* frame size = 0 */
  66               	/* stack size = 0 */
  67               	.L__stack_usage = 0
  91:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
  92:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     set_sleep_mode( SLEEP_MODE_IDLE);
  68               		.loc 1 92 0
  69 001a 83B7      		in r24,0x33
  70 001c 817F      		andi r24,lo8(-15)
  71 001e 83BF      		out 0x33,r24
  93:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     sleep_mode ();
  72               		.loc 1 93 0
  73 0020 83B7      		in r24,0x33
  74 0022 8160      		ori r24,lo8(1)
  75 0024 83BF      		out 0x33,r24
  76               	/* #APP */
  77               	 ;  93 "/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c" 1
  78 0026 8895      		sleep
  79               		
  80               	 ;  0 "" 2
  81               	/* #NOAPP */
  82 0028 83B7      		in r24,0x33
  83 002a 8E7F      		andi r24,lo8(-2)
  84 002c 83BF      		out 0x33,r24
  85 002e 0895      		ret
  86               		.cfi_endproc
  87               	.LFE4:
  89               	.global	nrk_task_set_entry_function
  91               	nrk_task_set_entry_function:
  92               	.LFB5:
  94:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
  95:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** }
  96:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
  97:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** void nrk_task_set_entry_function( nrk_task_type *task, void *func )
  98:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** {
  93               		.loc 1 98 0
  94               		.cfi_startproc
  95               	.LVL0:
  96               	/* prologue: function */
  97               	/* frame size = 0 */
  98               	/* stack size = 0 */
  99               	.L__stack_usage = 0
  99:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** task->task=func;
 100               		.loc 1 99 0
 101 0030 FC01      		movw r30,r24
 102 0032 7683      		std Z+6,r23
 103 0034 6583      		std Z+5,r22
 104 0036 0895      		ret
 105               		.cfi_endproc
 106               	.LFE5:
 108               	.global	nrk_task_set_stk
 110               	nrk_task_set_stk:
 111               	.LFB6:
 100:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** }
 101:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 102:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** void nrk_task_set_stk( nrk_task_type *task, NRK_STK stk_base[], uint16_t stk_size )
 103:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** {
 112               		.loc 1 103 0
 113               		.cfi_startproc
 114               	.LVL1:
 115 0038 EF92      		push r14
 116               	.LCFI0:
 117               		.cfi_def_cfa_offset 4
 118               		.cfi_offset 14, -3
 119 003a FF92      		push r15
 120               	.LCFI1:
 121               		.cfi_def_cfa_offset 5
 122               		.cfi_offset 15, -4
 123 003c 0F93      		push r16
 124               	.LCFI2:
 125               		.cfi_def_cfa_offset 6
 126               		.cfi_offset 16, -5
 127 003e 1F93      		push r17
 128               	.LCFI3:
 129               		.cfi_def_cfa_offset 7
 130               		.cfi_offset 17, -6
 131 0040 CF93      		push r28
 132               	.LCFI4:
 133               		.cfi_def_cfa_offset 8
 134               		.cfi_offset 28, -7
 135 0042 DF93      		push r29
 136               	.LCFI5:
 137               		.cfi_def_cfa_offset 9
 138               		.cfi_offset 29, -8
 139               	/* prologue: function */
 140               	/* frame size = 0 */
 141               	/* stack size = 6 */
 142               	.L__stack_usage = 6
 143 0044 EC01      		movw r28,r24
 144 0046 8B01      		movw r16,r22
 145 0048 7A01      		movw r14,r20
 104:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 105:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** if(stk_size<32) nrk_error_add(NRK_STACK_TOO_SMALL);
 146               		.loc 1 105 0
 147 004a 4032      		cpi r20,32
 148 004c 5105      		cpc r21,__zero_reg__
 149               	.LVL2:
 150 004e 00F4      		brsh .L6
 151               		.loc 1 105 0 is_stmt 0 discriminator 1
 152 0050 81E1      		ldi r24,lo8(17)
 153 0052 0E94 0000 		call nrk_error_add
 154               	.LVL3:
 155               	.L6:
 106:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** task->Ptos = (void *) &stk_base[stk_size-1];
 156               		.loc 1 106 0 is_stmt 1
 157 0056 A701      		movw r20,r14
 158 0058 4150      		subi r20,1
 159 005a 5109      		sbc r21,__zero_reg__
 160 005c 400F      		add r20,r16
 161 005e 511F      		adc r21,r17
 162 0060 5A83      		std Y+2,r21
 163 0062 4983      		std Y+1,r20
 107:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** task->Pbos = (void *) &stk_base[0];
 164               		.loc 1 107 0
 165 0064 1C83      		std Y+4,r17
 166 0066 0B83      		std Y+3,r16
 167               	/* epilogue start */
 108:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 109:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** }
 168               		.loc 1 109 0
 169 0068 DF91      		pop r29
 170 006a CF91      		pop r28
 171               	.LVL4:
 172 006c 1F91      		pop r17
 173 006e 0F91      		pop r16
 174               	.LVL5:
 175 0070 FF90      		pop r15
 176 0072 EF90      		pop r14
 177               	.LVL6:
 178 0074 0895      		ret
 179               		.cfi_endproc
 180               	.LFE6:
 182               	.global	nrk_task_stk_init
 184               	nrk_task_stk_init:
 185               	.LFB7:
 110:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 111:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** void *nrk_task_stk_init (void (*task)(), void *ptos, void *pbos)
 112:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** {
 186               		.loc 1 112 0
 187               		.cfi_startproc
 188               	.LVL7:
 189               	/* prologue: function */
 190               	/* frame size = 0 */
 191               	/* stack size = 0 */
 192               	.L__stack_usage = 0
 113:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     uint16_t *stk ;  // 2 bytes
 114:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     uint8_t *stkc; // 1 byte
 115:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 116:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     stk    = (unsigned int *)pbos;          /* Load stack pointer */ 
 117:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     stkc = (unsigned char*)stk;
 118:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *stkc = STK_CANARY_VAL;  // Flag for Stack Overflow    
 193               		.loc 1 118 0
 194 0076 25E5      		ldi r18,lo8(85)
 195 0078 FA01      		movw r30,r20
 196 007a 2083      		st Z,r18
 197               	.LVL8:
 119:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     stk    = (unsigned int *)ptos;          /* Load stack pointer */
 120:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     /* build a context for the new task */
 121:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     /* Where do these numbers come from? */
 122:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****    /* *(--stk) = 0x4f50;   // O P 
 123:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0x4d4e;   // M N 
 124:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0x4b4c;   // K L                      
 125:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0x494a;   // I J                      
 126:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0x4748;   // G H                      
 127:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0x4546;   // E F                    
 128:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0x4344;   // C D    	
 129:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0x4142;   // A B
 130:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** */
 131:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     --stk;
 132:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     stkc = (unsigned char*)stk;	
 133:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *stkc++ = (unsigned char)((unsigned int)(task)/ 256);
 198               		.loc 1 133 0
 199 007c FB01      		movw r30,r22
 200 007e 3297      		sbiw r30,2
 201               	.LVL9:
 202 0080 9083      		st Z,r25
 134:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *stkc = (unsigned char)((unsigned int)(task)%256);
 203               		.loc 1 134 0
 204 0082 3196      		adiw r30,1
 205               	.LVL10:
 206 0084 8083      		st Z,r24
 207               	.LVL11:
 135:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 	
 136:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0;
 208               		.loc 1 136 0
 209 0086 3397      		sbiw r30,3
 210               	.LVL12:
 211 0088 1182      		std Z+1,__zero_reg__
 212 008a 1082      		st Z,__zero_reg__
 213               	.LVL13:
 137:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0;       
 214               		.loc 1 137 0
 215 008c 3297      		sbiw r30,2
 216               	.LVL14:
 217 008e 1182      		std Z+1,__zero_reg__
 218 0090 1082      		st Z,__zero_reg__
 219               	.LVL15:
 138:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0;                        
 220               		.loc 1 138 0
 221 0092 3297      		sbiw r30,2
 222               	.LVL16:
 223 0094 1182      		std Z+1,__zero_reg__
 224 0096 1082      		st Z,__zero_reg__
 225               	.LVL17:
 139:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0;                        
 226               		.loc 1 139 0
 227 0098 3297      		sbiw r30,2
 228               	.LVL18:
 229 009a 1182      		std Z+1,__zero_reg__
 230 009c 1082      		st Z,__zero_reg__
 231               	.LVL19:
 140:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0;                         
 232               		.loc 1 140 0
 233 009e 3297      		sbiw r30,2
 234               	.LVL20:
 235 00a0 1182      		std Z+1,__zero_reg__
 236 00a2 1082      		st Z,__zero_reg__
 237               	.LVL21:
 141:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0;                         
 238               		.loc 1 141 0
 239 00a4 3297      		sbiw r30,2
 240               	.LVL22:
 241 00a6 1182      		std Z+1,__zero_reg__
 242 00a8 1082      		st Z,__zero_reg__
 243               	.LVL23:
 142:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0;                        
 244               		.loc 1 142 0
 245 00aa 3297      		sbiw r30,2
 246               	.LVL24:
 247 00ac 1182      		std Z+1,__zero_reg__
 248 00ae 1082      		st Z,__zero_reg__
 249               	.LVL25:
 143:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0; 
 250               		.loc 1 143 0
 251 00b0 3297      		sbiw r30,2
 252               	.LVL26:
 253 00b2 1182      		std Z+1,__zero_reg__
 254 00b4 1082      		st Z,__zero_reg__
 255               	.LVL27:
 144:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 145:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0; 
 256               		.loc 1 145 0
 257 00b6 3297      		sbiw r30,2
 258               	.LVL28:
 259 00b8 1182      		std Z+1,__zero_reg__
 260 00ba 1082      		st Z,__zero_reg__
 261               	.LVL29:
 146:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0; 
 262               		.loc 1 146 0
 263 00bc 3297      		sbiw r30,2
 264               	.LVL30:
 265 00be 1182      		std Z+1,__zero_reg__
 266 00c0 1082      		st Z,__zero_reg__
 267               	.LVL31:
 147:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0; 
 268               		.loc 1 147 0
 269 00c2 3297      		sbiw r30,2
 270               	.LVL32:
 271 00c4 1182      		std Z+1,__zero_reg__
 272 00c6 1082      		st Z,__zero_reg__
 273               	.LVL33:
 148:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0; 
 274               		.loc 1 148 0
 275 00c8 3297      		sbiw r30,2
 276               	.LVL34:
 277 00ca 1182      		std Z+1,__zero_reg__
 278 00cc 1082      		st Z,__zero_reg__
 279               	.LVL35:
 149:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0; 
 280               		.loc 1 149 0
 281 00ce 3297      		sbiw r30,2
 282               	.LVL36:
 283 00d0 1182      		std Z+1,__zero_reg__
 284 00d2 1082      		st Z,__zero_reg__
 285               	.LVL37:
 150:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0; 
 286               		.loc 1 150 0
 287 00d4 3297      		sbiw r30,2
 288               	.LVL38:
 289 00d6 1182      		std Z+1,__zero_reg__
 290 00d8 1082      		st Z,__zero_reg__
 291               	.LVL39:
 151:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0; 
 292               		.loc 1 151 0
 293 00da 3297      		sbiw r30,2
 294               	.LVL40:
 295 00dc 1182      		std Z+1,__zero_reg__
 296 00de 1082      		st Z,__zero_reg__
 297               	.LVL41:
 152:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0; 
 298               		.loc 1 152 0
 299 00e0 3297      		sbiw r30,2
 300               	.LVL42:
 301 00e2 1182      		std Z+1,__zero_reg__
 302 00e4 1082      		st Z,__zero_reg__
 303               	.LVL43:
 153:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *(--stk) = 0;
 304               		.loc 1 153 0
 305 00e6 CB01      		movw r24,r22
 306               	.LVL44:
 307 00e8 8497      		sbiw r24,36
 308               	.LVL45:
 309 00ea FC01      		movw r30,r24
 310               	.LVL46:
 311 00ec 1182      		std Z+1,__zero_reg__
 312 00ee 1082      		st Z,__zero_reg__
 154:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 155:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 156:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     return ((void *)stk);
 157:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** }
 313               		.loc 1 157 0
 314 00f0 0895      		ret
 315               		.cfi_endproc
 316               	.LFE7:
 318               	.global	nrk_stack_pointer_init
 320               	nrk_stack_pointer_init:
 321               	.LFB8:
 158:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 159:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** inline void nrk_stack_pointer_init()
 160:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** {
 322               		.loc 1 160 0
 323               		.cfi_startproc
 324               	/* prologue: function */
 325               	/* frame size = 0 */
 326               	/* stack size = 0 */
 327               	.L__stack_usage = 0
 328               	.LVL47:
 161:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** unsigned char *stkc;
 162:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #ifdef KERNEL_STK_ARRAY
 163:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         stkc = (uint16_t*)&nrk_kernel_stk[NRK_KERNEL_STACKSIZE-1];
 164:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         nrk_kernel_stk[0]=STK_CANARY_VAL;
 165:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         nrk_kernel_stk_ptr = &nrk_kernel_stk[NRK_KERNEL_STACKSIZE-1];
 166:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     #else
 167:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         stkc = (unsigned char *)(NRK_KERNEL_STK_TOP-NRK_KERNEL_STACKSIZE);
 168:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         *stkc = STK_CANARY_VAL;
 329               		.loc 1 168 0
 330 00f2 85E5      		ldi r24,lo8(85)
 331 00f4 8093 7E81 		sts -32386,r24
 332               	.LVL48:
 169:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         stkc = (unsigned char *)NRK_KERNEL_STK_TOP;
 170:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         nrk_kernel_stk_ptr = (unsigned char *)NRK_KERNEL_STK_TOP;
 333               		.loc 1 170 0
 334 00f8 EEEF      		ldi r30,lo8(-2)
 335 00fa F1E8      		ldi r31,lo8(-127)
 336 00fc F093 0000 		sts nrk_kernel_stk_ptr+1,r31
 337 0100 E093 0000 		sts nrk_kernel_stk_ptr,r30
 338               	.LVL49:
 171:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     #endif
 172:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *stkc++ = (uint16_t)((uint16_t)_nrk_timer_tick>>8);
 339               		.loc 1 172 0
 340 0104 80E0      		ldi r24,lo8(gs(_nrk_timer_tick))
 341 0106 90E0      		ldi r25,hi8(gs(_nrk_timer_tick))
 342 0108 9083      		st Z,r25
 173:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****     *stkc = (uint16_t)((uint16_t)_nrk_timer_tick&0xFF);
 343               		.loc 1 173 0
 344 010a 8093 FF81 		sts -32257,r24
 345 010e 0895      		ret
 346               		.cfi_endproc
 347               	.LFE8:
 349               	.global	nrk_stack_pointer_restore
 351               	nrk_stack_pointer_restore:
 352               	.LFB9:
 174:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 175:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** }
 176:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 177:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 178:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** inline void nrk_stack_pointer_restore()
 179:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** {
 353               		.loc 1 179 0
 354               		.cfi_startproc
 355               	/* prologue: function */
 356               	/* frame size = 0 */
 357               	/* stack size = 0 */
 358               	.L__stack_usage = 0
 359               	.LVL50:
 180:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** unsigned char *stkc;
 181:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 182:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #ifdef KERNEL_STK_ARRAY
 183:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         stkc = (uint16_t*)&nrk_kernel_stk[NRK_KERNEL_STACKSIZE-1];
 184:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #else
 185:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         stkc = (unsigned char *)NRK_KERNEL_STK_TOP;
 186:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** #endif
 187:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         *stkc++ = (uint16_t)((uint16_t)_nrk_timer_tick>>8);
 360               		.loc 1 187 0
 361 0110 80E0      		ldi r24,lo8(gs(_nrk_timer_tick))
 362 0112 90E0      		ldi r25,hi8(gs(_nrk_timer_tick))
 363 0114 9093 FE81 		sts -32258,r25
 188:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****         *stkc = (uint16_t)((uint16_t)_nrk_timer_tick&0xFF);
 364               		.loc 1 188 0
 365 0118 8093 FF81 		sts -32257,r24
 366 011c 0895      		ret
 367               		.cfi_endproc
 368               	.LFE9:
 370               	.global	nrk_target_start
 372               	nrk_target_start:
 373               	.LFB10:
 189:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** }
 190:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 191:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** /* start the target running */
 192:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** void nrk_target_start(void)
 193:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** {
 374               		.loc 1 193 0
 375               		.cfi_startproc
 376               	/* prologue: function */
 377               	/* frame size = 0 */
 378               	/* stack size = 0 */
 379               	.L__stack_usage = 0
 194:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c **** 
 195:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****   _nrk_setup_timer();
 380               		.loc 1 195 0
 381 011e 0E94 0000 		call _nrk_setup_timer
 382               	.LVL51:
 196:/home/agr/nano-RK/src/kernel/hal/atmega256rfr2/nrk_cpu.c ****   nrk_int_enable();  
 383               		.loc 1 196 0
 384 0122 0C94 0000 		jmp nrk_int_enable
 385               	.LVL52:
 386               		.cfi_endproc
 387               	.LFE10:
 389               		.comm	error_num,1,1
 390               		.comm	error_task,1,1
 391               		.comm	app_timer0_prescale,1,1
 392               		.comm	app_timer0_callback,2,1
 393               		.comm	_nrk_time_trigger,1,1
 394               		.comm	_nrk_prev_timer_val,1,1
 395               		.comm	nrk_system_time,8,1
 396               		.comm	nrk_sem_list,6,1
 397               		.comm	_nrk_resource_cnt,1,1
 398               		.comm	nrk_high_ready_TCB,2,1
 399               		.comm	nrk_high_ready_prio,1,1
 400               		.comm	nrk_cur_task_TCB,2,1
 401               		.comm	nrk_cur_task_prio,1,1
 402               		.comm	nrk_wakeup_signal,1,1
 403               		.comm	_head_node,2,1
 404               		.comm	_free_node,2,1
 405               		.comm	_nrk_readyQ,155,1
 406               		.comm	nrk_task_TCB,1290,1
 407               		.comm	nrk_kernel_stk_ptr,2,1
 408               		.comm	nrk_idle_task_stk,128,1
 409               		.comm	_nrk_signal_list,4,1
 410               	.Letext0:
 411               		.file 2 "/home/agr/avr8-gnu-toolchain-linux_x86_64/avr/include/stdint.h"
 412               		.file 3 "/home/agr/nano-RK/src/platform/firefly3_alps/include/hal.h"
 413               		.file 4 "/home/agr/nano-RK/src/kernel/include/nrk_events.h"
 414               		.file 5 "/home/agr/nano-RK/src/kernel/include/nrk_time.h"
 415               		.file 6 "/home/agr/nano-RK/src/kernel/include/nrk_task.h"
 416               		.file 7 "/home/agr/nano-RK/src/kernel/include/nrk_defs.h"
 417               		.file 8 "/home/agr/nano-RK/src/kernel/hal/include/nrk_timer.h"
 418               		.file 9 "/home/agr/nano-RK/src/kernel/include/nrk_error.h"
 419               		.file 10 "/home/agr/nano-RK/src/kernel/hal/include/nrk_cpu.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 nrk_cpu.c
     /tmp/ccM3eieg.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccM3eieg.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccM3eieg.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccM3eieg.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccM3eieg.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccM3eieg.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccM3eieg.s:13     .text:0000000000000000 nrk_battery_save
     /tmp/ccM3eieg.s:28     .text:0000000000000002 nrk_sleep
     /tmp/ccM3eieg.s:60     .text:000000000000001a nrk_idle
     /tmp/ccM3eieg.s:91     .text:0000000000000030 nrk_task_set_entry_function
     /tmp/ccM3eieg.s:110    .text:0000000000000038 nrk_task_set_stk
     /tmp/ccM3eieg.s:184    .text:0000000000000076 nrk_task_stk_init
     /tmp/ccM3eieg.s:320    .text:00000000000000f2 nrk_stack_pointer_init
                            *COM*:0000000000000002 nrk_kernel_stk_ptr
     /tmp/ccM3eieg.s:351    .text:0000000000000110 nrk_stack_pointer_restore
     /tmp/ccM3eieg.s:372    .text:000000000000011e nrk_target_start
                            *COM*:0000000000000001 error_num
                            *COM*:0000000000000001 error_task
                            *COM*:0000000000000001 app_timer0_prescale
                            *COM*:0000000000000002 app_timer0_callback
                            *COM*:0000000000000001 _nrk_time_trigger
                            *COM*:0000000000000001 _nrk_prev_timer_val
                            *COM*:0000000000000008 nrk_system_time
                            *COM*:0000000000000006 nrk_sem_list
                            *COM*:0000000000000001 _nrk_resource_cnt
                            *COM*:0000000000000002 nrk_high_ready_TCB
                            *COM*:0000000000000001 nrk_high_ready_prio
                            *COM*:0000000000000002 nrk_cur_task_TCB
                            *COM*:0000000000000001 nrk_cur_task_prio
                            *COM*:0000000000000001 nrk_wakeup_signal
                            *COM*:0000000000000002 _head_node
                            *COM*:0000000000000002 _free_node
                            *COM*:000000000000009b _nrk_readyQ
                            *COM*:000000000000050a nrk_task_TCB
                            *COM*:0000000000000080 nrk_idle_task_stk
                            *COM*:0000000000000004 _nrk_signal_list

UNDEFINED SYMBOLS
nrk_error_add
_nrk_timer_tick
_nrk_setup_timer
nrk_int_enable
__do_clear_bss
