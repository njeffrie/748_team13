   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 311               		.section	.rodata.str1.1,"aMS",@progbits,1
 312               	.LC0:
 313 0000 7468 6973 		.string	"this is a test message"
 313      2069 7320 
 313      6120 7465 
 313      7374 206D 
 313      6573 7361 
 314               	.LC1:
 315 0017 5365 6E64 		.string	"Sending\r"
 315      696E 670D 
 315      00
 316               	.LC2:
 317 0020 2D2D 2D20 		.string	"--- RF_TX ERROR ---\r"
 317      5246 5F54 
 317      5820 4552 
 317      524F 5220 
 317      2D2D 2D0D 
 318               		.section	.text.startup,"ax",@progbits
 320               	.global	main
 322               	main:
 323               		.stabd	46,0,0
   1:main.c        **** /******************************************************************************
   2:main.c        **** *  Nano-RK, a real-time operating system for sensor networks.
   3:main.c        **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:main.c        **** *  All rights reserved.
   5:main.c        **** *
   6:main.c        **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:main.c        **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:main.c        **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:main.c        **** *
  10:main.c        **** *  This program is free software: you can redistribute it and/or modify
  11:main.c        **** *  it under the terms of the GNU General Public License as published by
  12:main.c        **** *  the Free Software Foundation, version 2.0 of the License.
  13:main.c        **** *
  14:main.c        **** *  This program is distributed in the hope that it will be useful,
  15:main.c        **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:main.c        **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:main.c        **** *  GNU General Public License for more details.
  18:main.c        **** *
  19:main.c        **** *  You should have received a copy of the GNU General Public License
  20:main.c        **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:main.c        **** *
  22:main.c        **** *******************************************************************************/
  23:main.c        **** 
  24:main.c        **** #include <include.h>
  25:main.c        **** #include <ulib.h>
  26:main.c        **** #include <stdio.h>
  27:main.c        **** #include <hal.h>
  28:main.c        **** #include <basic_rf.h>
  29:main.c        **** #include <avr/sleep.h>
  30:main.c        **** #include <avr/wdt.h>
  31:main.c        **** #include <avr/eeprom.h>
  32:main.c        **** 
  33:main.c        **** RF_TX_INFO rfTxInfo;
  34:main.c        **** RF_RX_INFO rfRxInfo;
  35:main.c        **** uint8_t tx_buf[RF_MAX_PAYLOAD_SIZE];
  36:main.c        **** uint8_t rx_buf[RF_MAX_PAYLOAD_SIZE];
  37:main.c        **** 
  38:main.c        **** 
  39:main.c        **** int main (void)
  40:main.c        **** {
 325               	.LM0:
 326               	.LFBB1:
 327               	/* prologue: function */
 328               	/* frame size = 0 */
 329               	/* stack size = 0 */
 330               	.L__stack_usage = 0
  41:main.c        ****     uint8_t i;
  42:main.c        **** 
  43:main.c        ****     nrk_setup_ports(); 
 332               	.LM1:
 333 0000 0E94 0000 		call nrk_setup_ports
  44:main.c        ****     nrk_setup_uart (UART_BAUDRATE_115K2);
 335               	.LM2:
 336 0004 80E1      		ldi r24,lo8(16)
 337 0006 90E0      		ldi r25,0
 338 0008 0E94 0000 		call nrk_setup_uart
  45:main.c        ****  
  46:main.c        ****     rfRxInfo.pPayload = rx_buf;
 340               	.LM3:
 341 000c 80E0      		ldi r24,lo8(rx_buf)
 342 000e 90E0      		ldi r25,hi8(rx_buf)
 343 0010 9093 0000 		sts rfRxInfo+5+1,r25
 344 0014 8093 0000 		sts rfRxInfo+5,r24
  47:main.c        ****     rfRxInfo.max_length = RF_MAX_PAYLOAD_SIZE;
 346               	.LM4:
 347 0018 84E7      		ldi r24,lo8(116)
 348 001a 8093 0000 		sts rfRxInfo+4,r24
  48:main.c        **** 	nrk_int_enable();
 350               	.LM5:
 351 001e 0E94 0000 		call nrk_int_enable
  49:main.c        **** 	rf_init (&rfRxInfo, 13, 0xffff, 0);
 353               	.LM6:
 354 0022 20E0      		ldi r18,0
 355 0024 30E0      		ldi r19,0
 356 0026 4FEF      		ldi r20,lo8(-1)
 357 0028 5FEF      		ldi r21,lo8(-1)
 358 002a 6DE0      		ldi r22,lo8(13)
 359 002c 80E0      		ldi r24,lo8(rfRxInfo)
 360 002e 90E0      		ldi r25,hi8(rfRxInfo)
 361 0030 0E94 0000 		call rf_init
  50:main.c        **** 	while(1){
  51:main.c        **** 		DPDS1 |= 0x3;
  52:main.c        **** 		rfTxInfo.pPayload=tx_buf;
 363               	.LM7:
 364 0034 00E0      		ldi r16,lo8(tx_buf)
 365 0036 10E0      		ldi r17,hi8(tx_buf)
 366               	.L4:
  51:main.c        **** 		rfTxInfo.pPayload=tx_buf;
 368               	.LM8:
 369 0038 8091 3701 		lds r24,311
 370 003c 8360      		ori r24,lo8(3)
 371 003e 8093 3701 		sts 311,r24
 373               	.LM9:
 374 0042 1093 0000 		sts rfTxInfo+3+1,r17
 375 0046 0093 0000 		sts rfTxInfo+3,r16
  53:main.c        **** 		sprintf( tx_buf, "%s", "this is a test message"); 
 377               	.LM10:
 378 004a 60E0      		ldi r22,lo8(.LC0)
 379 004c 70E0      		ldi r23,hi8(.LC0)
 380 004e 80E0      		ldi r24,lo8(tx_buf)
 381 0050 90E0      		ldi r25,hi8(tx_buf)
 382 0052 0E94 0000 		call strcpy
  54:main.c        **** 		rfTxInfo.length= strlen(tx_buf) + 1;
 384               	.LM11:
 385 0056 F801      		movw r30,r16
 386               		0:
 387 0058 0190      		ld __tmp_reg__,Z+
 388 005a 0020      		tst __tmp_reg__
 389 005c 01F4      		brne 0b
 390 005e 3197      		sbiw r30,1
 391 0060 E050      		subi r30,lo8(tx_buf)
 392 0062 F040      		sbci r31,hi8(tx_buf)
 393 0064 EF5F      		subi r30,lo8(-(1))
 394 0066 E093 0000 		sts rfTxInfo+2,r30
  55:main.c        **** 		rfTxInfo.destAddr = 0x0;
 396               	.LM12:
 397 006a 1092 0000 		sts rfTxInfo+1,__zero_reg__
 398 006e 1092 0000 		sts rfTxInfo,__zero_reg__
  56:main.c        **** 		rfTxInfo.cca = 0;
 400               	.LM13:
 401 0072 1092 0000 		sts rfTxInfo+5,__zero_reg__
  57:main.c        **** 		rfTxInfo.ackRequest = 0;
 403               	.LM14:
 404 0076 1092 0000 		sts rfTxInfo+6,__zero_reg__
  58:main.c        **** 
  59:main.c        **** 		printf( "Sending\r\n" );
 406               	.LM15:
 407 007a 80E0      		ldi r24,lo8(.LC1)
 408 007c 90E0      		ldi r25,hi8(.LC1)
 409 007e 0E94 0000 		call puts
  60:main.c        **** 		if(rf_tx_packet(&rfTxInfo) != 1)
 411               	.LM16:
 412 0082 80E0      		ldi r24,lo8(rfTxInfo)
 413 0084 90E0      		ldi r25,hi8(rfTxInfo)
 414 0086 0E94 0000 		call rf_tx_packet
 415 008a 8130      		cpi r24,lo8(1)
 416 008c 01F0      		breq .L2
  61:main.c        **** 			printf("--- RF_TX ERROR ---\r\n");
 418               	.LM17:
 419 008e 80E0      		ldi r24,lo8(.LC2)
 420 0090 90E0      		ldi r25,hi8(.LC2)
 421 0092 0E94 0000 		call puts
 422               	.L2:
  40:main.c        ****     uint8_t i;
 424               	.LM18:
 425 0096 CAE0      		ldi r28,lo8(10)
 426               	.L3:
  62:main.c        **** 
  63:main.c        **** 		for(i=0; i<10; i++ )
  64:main.c        **** 			halWait(10000);
 428               	.LM19:
 429 0098 80E1      		ldi r24,lo8(16)
 430 009a 97E2      		ldi r25,lo8(39)
 431 009c 0E94 0000 		call halWait
 432 00a0 C150      		subi r28,lo8(-(-1))
  63:main.c        **** 			halWait(10000);
 434               	.LM20:
 435 00a2 01F4      		brne .L3
  65:main.c        **** 		nrk_led_toggle(RED_LED);
 437               	.LM21:
 438 00a4 80E0      		ldi r24,0
 439 00a6 90E0      		ldi r25,0
 440 00a8 0E94 0000 		call nrk_led_toggle
  66:main.c        **** 	}
 442               	.LM22:
 443 00ac 00C0      		rjmp .L4
 445               	.Lscope1:
 447               		.stabd	78,0,0
 448               		.text
 451               	.global	rf_rx_callback
 453               	rf_rx_callback:
 454               		.stabd	46,0,0
  67:main.c        **** 
  68:main.c        **** }
  69:main.c        **** 
  70:main.c        **** /**
  71:main.c        ****  *  This is a callback if you require immediate response to a packet
  72:main.c        ****  */
  73:main.c        **** RF_RX_INFO *rf_rx_callback (RF_RX_INFO * pRRI)
  74:main.c        **** {
 456               	.LM23:
 457               	.LFBB2:
 458               	/* prologue: function */
 459               	/* frame size = 0 */
 460               	/* stack size = 0 */
 461               	.L__stack_usage = 0
  75:main.c        **** 	// Any code here gets called the instant a packet is received from the interrupt   
  76:main.c        **** 	return pRRI;
  77:main.c        **** }
 463               	.LM24:
 464 0000 0895      		ret
 466               	.Lscope2:
 468               		.stabd	78,0,0
 469               		.comm	rx_buf,116,1
 470               		.comm	tx_buf,116,1
 471               		.comm	rfRxInfo,12,1
 472               		.comm	rfTxInfo,7,1
 473               		.comm	_nrk_signal_list,4,1
 480               	.Letext0:
 481               		.ident	"GCC: (GNU) 4.9.2"
 482               	.global __do_copy_data
 483               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/g6/tbq62m5x2cb4hdh54h_fbn3h0000gn/T//cco1nl7M.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/g6/tbq62m5x2cb4hdh54h_fbn3h0000gn/T//cco1nl7M.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/g6/tbq62m5x2cb4hdh54h_fbn3h0000gn/T//cco1nl7M.s:4      *ABS*:000000000000003f __SREG__
/var/folders/g6/tbq62m5x2cb4hdh54h_fbn3h0000gn/T//cco1nl7M.s:5      *ABS*:000000000000003b __RAMPZ__
/var/folders/g6/tbq62m5x2cb4hdh54h_fbn3h0000gn/T//cco1nl7M.s:6      *ABS*:0000000000000000 __tmp_reg__
/var/folders/g6/tbq62m5x2cb4hdh54h_fbn3h0000gn/T//cco1nl7M.s:7      *ABS*:0000000000000001 __zero_reg__
/var/folders/g6/tbq62m5x2cb4hdh54h_fbn3h0000gn/T//cco1nl7M.s:322    .text.startup:0000000000000000 main
                            *COM*:0000000000000074 rx_buf
                            *COM*:000000000000000c rfRxInfo
                            *COM*:0000000000000074 tx_buf
                            *COM*:0000000000000007 rfTxInfo
/var/folders/g6/tbq62m5x2cb4hdh54h_fbn3h0000gn/T//cco1nl7M.s:453    .text:0000000000000000 rf_rx_callback
                            *COM*:0000000000000004 _nrk_signal_list

UNDEFINED SYMBOLS
nrk_setup_ports
nrk_setup_uart
nrk_int_enable
rf_init
strcpy
puts
rf_tx_packet
halWait
nrk_led_toggle
__do_copy_data
__do_clear_bss
